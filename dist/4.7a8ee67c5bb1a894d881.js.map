{"version":3,"sources":["webpack:///./src/app/layouts/admin-layout/admin-layout.module.ts","webpack:///./node_modules/@angular/cdk/esm5/coercion.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/keycodes.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/platform.es5.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/Immediate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/asap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/async.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounceTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeUntil.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/startWith.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/concat.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/layout.es5.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEvent.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/audit.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isNumeric.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/timer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/auditTime.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/scrolling.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/portal.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/overlay.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/esm5/tooltip.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/bidi.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/a11y.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/esm5/core.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tooltip/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","webpack:///./node_modules/@angular/material/esm5/button.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/button/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","webpack:///./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/dashboard/dashboard.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./node_modules/@angular/material/esm5/form-field.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/form-field/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","webpack:///./node_modules/@angular/cdk/esm5/text-field.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/esm5/input.es5.js.pre-build-optimizer.js","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user-profile/user-profile.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/user-profile/user-profile.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/table-list/table-list.component.ts","webpack:///./src/app/table-list/table-list.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/table-list/table-list.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/table-list/table-list.component.html","webpack:///./src/app/typography/typography.component.ts","webpack:///./src/app/typography/typography.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/typography/typography.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/typography/typography.component.html","webpack:///./src/app/icons/icons.component.ts","webpack:///./src/app/icons/icons.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/icons/icons.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/icons/icons.component.html","webpack:///./src/app/maps/maps.component.ts","webpack:///./src/app/maps/maps.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/maps/maps.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/maps/maps.component.html","webpack:///./src/app/notifications/notifications.component.ts","webpack:///./src/app/notifications/notifications.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/notifications/notifications.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/notifications/notifications.component.html","webpack:///./src/app/upgrade/upgrade.component.ts","webpack:///./src/app/upgrade/upgrade.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/upgrade/upgrade.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/upgrade/upgrade.component.html","webpack:///./src/app/layouts/admin-layout/admin-layout.module.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/chartist/dist/chartist.js.pre-build-optimizer.js"],"names":["AdminLayoutModule","coerceBooleanProperty","value","coerceArray","Array","isArray","coerceCssPixelValue","supportedInputTypes","supportsPassiveEvents","hasV8BreakIterator","Intl","v8BreakIterator","platform_es5_Platform","Platform","_platformId","this","isBrowser","Object","common","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","window","FIREFOX","ANDROID","SAFARI","ngInjectableDef","core","factory","token","providedIn","PlatformModule","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","createElement","filter","setAttribute","type","supportsPassiveEventListeners","addEventListener","defineProperty","get","NONE","CombineLatestOperator","resultSelector","prototype","call","subscriber","source","subscribe","combineLatest_CombineLatestSubscriber","_super","CombineLatestSubscriber","destination","_this","active","values","observables","tslib_es6","_next","observable","push","_complete","len","length","complete","toRespond","i","add","subscribeToResult","notifyComplete","unused","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","_tryResultSelector","next","slice","result","apply","err","error","OuterSubscriber","nextHandle","tasksByHandle","AsyncAction_AsyncAction","AsyncAction","scheduler","work","pending","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","setInterval","flush","bind","clearInterval","execute","Error","_execute","errored","errorValue","undefined","e","unsubscribe","_unsubscribe","actions","index","indexOf","splice","Action","Subscription","AsapAction_AsapAction","AsapAction","scheduled","cb","handle","Promise","resolve","then","runIfPresent","Scheduler","SchedulerAction","now","Date","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","action","shift","asap","AsapScheduler","arguments","count","async_async","debounceTime","dueTime","lift","DebounceTimeOperator","debounceTime_DebounceTimeSubscriber","DebounceTimeSubscriber","debouncedSubscription","lastValue","hasValue","clearDebounce","dispatchNext","debouncedNext","remove","Subscriber","takeUntil","notifier","takeUntil_TakeUntilOperator","TakeUntilOperator","takeUntilSubscriber","takeUntil_TakeUntilSubscriber","notifierSubscription","seenValue","TakeUntilSubscriber","startWith","array","_i","isScheduler","pop","observable_from","concatAll","of","concat","fromArray","empty","scalar","mediaQueryStyleNode","mediaQueriesForWebkitCompatibility","layout_es5_MediaMatcher","MediaMatcher","platform","_matchMedia","matchMedia","noopMatchMedia","query","has","head","appendChild","sheet","insertRule","console","createEmptyStyleRule","matches","media","addListener","removeListener","layout_es5_BreakpointObserver","BreakpointObserver","mediaMatcher","zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","isMatched","splitQueries","some","mediaQuery","_registerQuery","mql","observe","combineLatest","map","pipe","breakpointStates","response","breakpoints","forEach","output","fromEventPattern","addHandler","removeHandler","args","Observable","retValue","handler","isFunction","listener","run","nextMql","set","queries","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","fromEvent","target","eventName","options","setupSubscription","sourceObj","removeEventListener","isEventTarget","source_1","on","off","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","source_3","TypeError","AuditOperator","durationSelector","audit_AuditSubscriber","AuditSubscriber","throttled","duration","tryCatch","errorObject","innerSubscription","clearThrottle","isNumeric","val","parseFloat","dispatch","period","auditTime","periodOrScheduler","Number","due","timer","scrolling_es5_ScrollDispatcher","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","register","scrollable","scrollSubscription","elementScrolled","deregister","scrollableReference","delete","scrolled","auditTimeInMs","create","observer","_addGlobalListener","subscription","_removeGlobalListener","_","container","ancestorScrolled","elementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","element","nativeElement","scrollableElement","getElementRef","parentElement","runOutsideAngular","ScrollingModule","scrolling_es5_ViewportRuler","ViewportRuler","ngZone","_change","merge","_invalidateCache","change","_updateViewportSize","getViewportSize","_viewportSize","width","height","getViewportRect","scrollPosition","getViewportScrollPosition","_a","top","left","bottom","right","documentRect","documentElement","getBoundingClientRect","body","scrollTop","scrollY","scrollLeft","scrollX","throttleTime","innerWidth","innerHeight","throwPortalAlreadyAttachedError","Portal","attach","host","throwNullPortalOutletError","hasAttached","_attachedHost","detach","throwNoPortalAttachedError","enumerable","configurable","setAttachedHost","portal_es5_ComponentPortal","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","portal_es5_TemplatePortal","TemplatePortal","template","context","templateRef","portal_es5_DomPortalOutlet","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","attachComponentPortal","portal","componentRef","componentFactory","resolveComponentFactory","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","_getComponentRootNode","attachTemplatePortal","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","dispose","parentNode","removeChild","BasePortalOutlet","_isDisposed","_attachedPortal","throwNullPortalError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","_invokeDisposeFn","fn","_disposeFn","PortalModule","NoopScrollStrategy","enable","disable","OverlayConfig","config","scrollStrategy","panelClass","hasBackdrop","backdropClass","keys","key","validateVerticalPosition","property","validateHorizontalPosition","overlay_es5_BlockScrollStrategy","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","_document","_canBeEnabled","root","_previousScrollPosition","style","classList","html","previousHtmlScrollBehavior","previousBodyScrollBehavior","scroll","contains","viewport","scrollHeight","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","_overlayRef","overlayRef","stream","threshold","_initialScrollPosition","Math","abs","updatePosition","isElementScrolledOutsideView","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","overlayElement","overlay_es5_ScrollStrategyOptions","ScrollStrategyOptions","noop","close","block","reposition","overlay_es5_OverlayKeyboardDispatcher","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","overlay_es5_OverlayContainer","OverlayContainer","_containerElement","getContainerElement","_createContainer","overlay_es5_OverlayRef","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_keydownEventsObservable","attachResult","positionStrategy","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","asObservable","take","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","backdropClick","attachments","detachments","keydownEvents","getConfig","updateSize","sizeConfig","setDirection","dir","direction","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","insertBefore","requestAnimationFrame","nextSibling","backdropToDetach","timeoutId_1","finishDetach_1","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","children","overlay_es5_FlexibleConnectedPositionStrategy","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_isInitialRender","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","scrollables","_preferredPositions","_positionChanges","_resizeSubscription","EMPTY","_offsetX","_offsetY","_positionChangeSubscriptions","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_origin","_overlayRect","fallback","originRect","viewportRect","flexibleFits","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","origin","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","_b","flexibleFits_1","fit_1","score","weight","_previousPushAmount","lastPosition","withScrollableContainers","withPositions","positions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","originX","startX","_isRtl","endX","y","originY","overlayStartX","overlayX","overlayY","point","overlay","offsetX","_getOffset","offsetY","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","fit","availableHeight","availableWidth","_pushOverlayOnScreen","start","pushX","pushY","overflowRight","max","overflowBottom","overflowTop","overflowLeft","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","changeEvent","connectionPair","scrollableViewProperties","_getScrollVisibility","xOrigin","elements","querySelectorAll","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","previousWidth","styles","_hasExactPosition","alignItems","justifyContent","extendStyles","_getExactOverlayY","_getExactOverlayX","transformString","transform","virtualKeyboardOffset","clientHeight","clientWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","dest","hasOwnProperty","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","_positionStrategy","withFallbackPosition","_direction","recalculateLastPosition","withDirection","withOffsetX","withOffsetY","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","marginLeft","marginTop","marginBottom","marginRight","overlay_es5_OverlayPositionBuilder","OverlayPositionBuilder","global","flexibleConnectedTo","nextUniqueId","overlay_es5_Overlay","Overlay","scrollStrategies","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","OverlayModule","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","showDelay","hideDelay","touchendHideDelay","tooltip_es5_MatTooltip","MatTooltip","_overlay","_elementRef","_viewContainerRef","_ariaDescriber","_focusMonitor","_scrollStrategy","_dir","_defaultOptions","_position","_disabled","_message","_manualListeners","_destroyed","show","hide","nodeName","webkitUserSelect","userSelect","msUserSelect","draggable","monitor","_updatePosition","_tooltipInstance","removeDescription","_isTooltipVisible","_updateTooltipMessage","describe","message","_tooltipClass","_setTooltipClass","clear","stopMonitoring","disabled","_createOverlay","_portal","tooltip_es5_TooltipComponent","instance","afterHidden","toggle","isVisible","_handleKeydown","keyCode","stopPropagation","_handleTouchend","strategy","scrollableAncestors","_getOrigin","_getOverlayPosition","main","originPosition","isLtr","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","TooltipComponent","_changeDetectorRef","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","_hideTimeoutId","_showTimeoutId","_animationStart","_animationDone","toState","_handleBodyInteraction","markForCheck","MatTooltipModule","observers_es5_MutationObserverFactory","MutationObserverFactory","callback","MutationObserver","observers_es5_ContentObserver","ContentObserver","_mutationObserverFactory","_observedElements","_cleanupObserver","elementOrRef","_observeElement","_unobserveElement","stream_1","mutations","characterData","childList","subtree","disconnect","observers_es5_CdkObserveContent","CdkObserveContent","_contentObserver","_currentSubscription","_subscribe","_debounce","fallbackValue","isNaN","_isNumberValue","coerceNumberProperty","ngAfterContentInit","debounce","ObserversModule","DIR_DOCUMENT","bidi_es5_Directionality","Directionality","BidiModule","ID_DELIMINATOR","getAriaReferenceIds","el","attr","getAttribute","match","nextId","messageRegistry","messagesContainer","a11y_es5_AriaDescriber","AriaDescriber","_canBeDescribed","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_removeMessageReference","registeredMessage","referenceCount","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","_removeCdkDescribedByReferenceIds","removeAttribute","messageElement","CDK_DESCRIBEDBY_ID_PREFIX","createTextNode","_createMessagesContainer","preExistingContainer","getElementById","display","originalReferenceIds","join","ids","existingId","filteredIds","referenceIds","messageId","nodeType","ELEMENT_NODE","a11y_es5_FocusMonitor","FocusMonitor","_windowFocused","_elementInfo","_unregisterGlobalListeners","_monitoredElementCount","checkChildren","_getNativeElement","cachedInfo","subject","info","unlisten","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","elementInfo","_setClasses","_decrementMonitoredElementCount","focusVia","_setOriginForCurrentEventQueue","focus","_info","_registerGlobalListeners","documentKeydownListener","_lastTouchTarget","documentMousedownListener","documentTouchstartListener","_touchTimeoutId","windowFocusListener","_windowFocusTimeoutId","passive","capture","_originTimeoutId","_toggleClass","className","shouldSet","_wasCausedByTouch","focusTarget","Node","_lastFocusOrigin","_emitOrigin","relatedTarget","A11yModule","MATERIAL_SANITY_CHECKS","core_es5_MatCommonModule","MatCommonModule","_sanityChecksEnabled","_hasDoneGlobalChecks","_hasCheckedHammer","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","warn","getComputedStyle","testElement","computedStyle","_checkHammerIsAvailable","mixinColor","base","defaultColor","class_1","color","_color","colorPalette","core_es5_ErrorStateMatcher","ErrorStateMatcher","isErrorState","control","form","invalid","touched","submitted","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","core_es5_RippleRenderer","RippleRenderer","_target","_isPointerDown","_triggerEvents","_activeRipples","_eventOptions","onMousedown","isFakeMousedown","buttons","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","changedTouches","onPointerUp","ripple","persistent","terminateOnPointerUp","containerRect","_containerRect","animationConfig","animation","centered","radius","rect","distX","distY","sqrt","distanceToFurthestCorner","speedFactor","backgroundColor","transitionDuration","getPropertyValue","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","size","rippleEl","opacity","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","MAT_RIPPLE_GLOBAL_OPTIONS","core_es5_MatRipple","MatRipple","globalOptions","animationMode","_isInitialized","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","baseSpeedFactor","launch","configOrX","MatRippleModule","MAT_LABEL_GLOBAL_OPTIONS","RenderType_TooltipComponent","encapsulation","data","name","definitions","expr","steps","timings","View_TooltipComponent_0","_l","_v","en","$event","ad","_co","klass","ngClass","_ck","tmp_0_0","TooltipComponentNgFactory","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","button_es5_MatButton","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","BUTTON_HOST_ATTRIBUTES_1","_getHostElement","_isRippleDisabled","disableRipple","attributes","attribute","hasAttribute","mixinDisabled","_disableRipple","mixinDisableRipple","button_es5_MatAnchor","MatAnchor","focusMonitor","_haltDisabledEvents","preventDefault","stopImmediatePropagation","MatButtonModule","RenderType_MatButton","View_MatButton_0","fesm5_animations","unbounded","RenderType_MatAnchor","View_MatAnchor_0","dashboard_component_DashboardComponent","DashboardComponent","startAnimationForLineChart","chart","seq","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","stringify","to","easing","chartist","Easing","easeOutQuint","startAnimationForBarChart","seq2","optionsDailySalesChart","lineSmooth","cardinal","tension","low","high","chartPadding","dailySalesChart","labels","series","optionsCompletedTasksChart","completedTasksChart","websiteViewsChart","axisX","showGrid","seriesBarDistance","labelInterpolationFnc","RenderType_DashboardComponent","View_DashboardComponent_0","tabIndex","toString","DashboardComponentNgFactory","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","nextUniqueId$2","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","form_field_es5_MatFormField","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeeded","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","_labelOptions","floatLabel","float","_animationsEnabled","appearance","_appearance","oldValue","updateOutlineGap","_hideRequiredMarker","_processHints","_floatLabel","getConnectedOverlayOrigin","_connectionContainerRef","_validateControlChild","_control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","valueChanges","ngControl","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","ngAfterContentChecked","ngAfterViewInit","_shouldForward","prop","_hasPlaceholder","placeholder","_placeholderChild","_hasLabel","_labelChild","_shouldLabelFloat","_canLabelFloat","shouldLabelFloat","_shouldAlwaysFloat","_hideControlPlaceholder","_hasFloatingLabel","_getDisplayedMessages","errorState","_animateAndLockLabel","_label","_validateHints","startHint_1","endHint_1","hint","hintLabel","startHint","find","endHint","setDescribedByIds","labelEl","textContent","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelStart","labelWidth","offsetWidth","outlineGapPadding","item","MatFormFieldModule","RenderType_MatFormField","View_MatFormField_1","View_MatFormField_2","View_MatFormField_4","View_MatFormField_5","View_MatFormField_6","View_MatFormField_3","ngSwitch","ngSwitchCase","ngIf","hideRequiredMarker","required","View_MatFormField_7","View_MatFormField_8","View_MatFormField_9","View_MatFormField_11","View_MatFormField_10","View_MatFormField_0","underlineRef","_inputContainerRef","onContainerClick","listenerOptions","text_field_es5_AutofillMonitor","AutofillMonitor","_monitoredElements","animationName","isAutofilled","TextFieldModule","MAT_INPUT_INVALID_TYPES","input_es5_nextUniqueId","input_es5_MatInput","MatInput","_parentForm","_parentFormGroup","_defaultErrorStateMatcher","inputValueAccessor","_autofillMonitor","_uid","_isServer","_isNativeSelect","focused","autofilled","_required","_type","_readonly","_neverEmptyInputTypes","t","_inputValueAccessor","_previousNativeValue","selectionStart","selectionEnd","setSelectionRange","toLowerCase","_id","_validateType","_isTextarea","ngOnChanges","ngDoCheck","updateErrorState","_dirtyCheckNativeValue","_focusChanged","isFocused","readonly","_onInput","newValue","_isNeverEmpty","_isBadInput","validity","badInput","selectElement","multiple","label","_ariaDescribedby","oldState","newState","errorStateMatcher","mixinErrorState","MatInputModule","UserProfileComponent","RenderType_UserProfileComponent","View_UserProfileComponent_0","onSubmit","onReset","fesm5_forms","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","UserProfileComponentNgFactory","TableListComponent","RenderType_TableListComponent","View_TableListComponent_0","TableListComponentNgFactory","TypographyComponent","RenderType_TypographyComponent","View_TypographyComponent_0","TypographyComponentNgFactory","IconsComponent","RenderType_IconsComponent","View_IconsComponent_0","IconsComponentNgFactory","MapsComponent","myLatlng","google","maps","LatLng","mapOptions","zoom","center","scrollwheel","featureType","stylers","saturation","lightness","hue","elementType","visibility","Marker","title","setMap","RenderType_MapsComponent","View_MapsComponent_0","MapsComponentNgFactory","NotificationsComponent","showNotification","floor","random","$","notify","icon","placement","RenderType_NotificationsComponent","View_NotificationsComponent_0","NotificationsComponentNgFactory","UpgradeComponent","RenderType_UpgradeComponent","View_UpgradeComponent_0","UpgradeComponentNgFactory","__webpack_require__","__webpack_exports__","AdminLayoutModuleNgFactory","router_ngfactory","router","__WEBPACK_AMD_DEFINE_RESULT__","Chartist","version","namespaces","svg","xmlns","xhtml","xlink","ct","n","alphaNumerate","String","fromCharCode","extend","sourceProp","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","unit","quantity","input","exec","querySelector","times","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","roundWithPrecision","digits","precision","pow","round","escapingMap","&","<",">","\"","'","serialize","JSON","deserialize","parse","createSvg","getAttributeNS","Svg","addClass","_node","normalizeData","reverse","multi","labelCount","raw","normalized","getDataArray","every","reverseData","safeHasProperty","object","isDataHoleValue","recursiveConvert","multiValue","getNumberOrUndefined","normalizePadding","padding","getMetaData","meta","orderOfMagnitude","log","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","getHighLow","dimension","highLow","toUpperCase","MAX_VALUE","findHigh","findLow","recursiveHighLow","referenceValue","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","divisor","x1","x2","getBounds","scaleMinSpace","onlyInteger","newMin","newMax","optimizationCounter","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","EPSILON","safeIncrement","increment","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","y1","y2","createGrid","group","classes","eventEmitter","positionalData","units","counterUnits","gridElement","elem","emit","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","content","innerText","foreignObject","text","getSeriesOption","seriesOptions","optionsProvider","responsiveOptions","currentOptions","baseOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","removeMediaQueryListeners","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","segments","hole","Interpolation","none","Path","currX","currY","currData","move","line","simple","prevX","prevY","prevData","curve","c","paths","segment","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","removeEventHandler","starHandler","Class","properties","superProtoOverride","superProto","proto","cloneDefinitions","constr","constructor","super","list","listToArray","getOwnPropertyNames","propName","getOwnPropertyDescriptor","Base","defaultOptions","supportsForeignObject","isSupported","supportsAnimations","resizeListener","update","__chartist__","initializeTimeoutId","plugins","plugin","createChart","override","parent","insertFirst","Element","createElementNS","xmlns:ct","firstChild","ns","namespacedAttribute","setAttributeNS","SVGElement","node","foundNode","foundNodes","List","getNode","innerHTML","fnObj","newElement","replaceChild","append","names","self","removeClass","removedClasses","removeAllClasses","animations","guided","createAnimate","animationDefinition","timeout","attributeProperties","calcMode","keySplines","keyTimes","fill","attributeName","beginElement","params","feature","implementation","hasFeature","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","a","accuracy","command","pathElements","relative","pathElement","forEachParam","pathElementIndex","paramName","paramIndex","arc","rx","ry","xAr","lAf","sf","transformFnc","transformed","chunks","chunk","description","spliceArgs","accuracyMultiplier","splitByCommand","joinedPath","j","axisUnits","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","projectedValue","labelLength","classNames","grid","showLabel","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","b","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","showGridBackground","fullWidth","area","vertical","horizontal","end","Line","seriesGroup","seriesIndex","seriesElement","ct:series-name","ct:meta","pathData","valueIndex","ct:value","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","stackBars","stackMode","horizontalBars","distributeSeries","bar","Bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","previousStack","labelAxisValueIndex","metaData","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","toTheRight","Pie","labelsGroup","labelRadius","totalDataSum","seriesGroups","previousValue","hasSingleValInSeries","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","text-anchor","exports","module"],"mappings":"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","file":"4.7a8ee67c5bb1a894d881.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { TableListComponent } from '../../table-list/table-list.component';\nimport { TypographyComponent } from '../../typography/typography.component';\nimport { IconsComponent } from '../../icons/icons.component';\nimport { MapsComponent } from '../../maps/maps.component';\nimport { NotificationsComponent } from '../../notifications/notifications.component';\nimport { UpgradeComponent } from '../../upgrade/upgrade.component';\n\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatRippleModule,\n  MatTooltipModule,\n} from '@angular/material';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatInputModule,\n    MatTooltipModule,\n  ],\n  declarations: [\n    DashboardComponent,\n    UserProfileComponent,\n    TableListComponent,\n    TypographyComponent,\n    IconsComponent,\n    MapsComponent,\n    NotificationsComponent,\n    UpgradeComponent,\n  ]\n})\n\nexport class AdminLayoutModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : value + \"px\";\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue };\n//# sourceMappingURL=coercion.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nvar MAC_ENTER = 3;\n/** @type {?} */\nvar BACKSPACE = 8;\n/** @type {?} */\nvar TAB = 9;\n/** @type {?} */\nvar NUM_CENTER = 12;\n/** @type {?} */\nvar ENTER = 13;\n/** @type {?} */\nvar SHIFT = 16;\n/** @type {?} */\nvar CONTROL = 17;\n/** @type {?} */\nvar ALT = 18;\n/** @type {?} */\nvar PAUSE = 19;\n/** @type {?} */\nvar CAPS_LOCK = 20;\n/** @type {?} */\nvar ESCAPE = 27;\n/** @type {?} */\nvar SPACE = 32;\n/** @type {?} */\nvar PAGE_UP = 33;\n/** @type {?} */\nvar PAGE_DOWN = 34;\n/** @type {?} */\nvar END = 35;\n/** @type {?} */\nvar HOME = 36;\n/** @type {?} */\nvar LEFT_ARROW = 37;\n/** @type {?} */\nvar UP_ARROW = 38;\n/** @type {?} */\nvar RIGHT_ARROW = 39;\n/** @type {?} */\nvar DOWN_ARROW = 40;\n/** @type {?} */\nvar PLUS_SIGN = 43;\n/** @type {?} */\nvar PRINT_SCREEN = 44;\n/** @type {?} */\nvar INSERT = 45;\n/** @type {?} */\nvar DELETE = 46;\n/** @type {?} */\nvar ZERO = 48;\n/** @type {?} */\nvar ONE = 49;\n/** @type {?} */\nvar TWO = 50;\n/** @type {?} */\nvar THREE = 51;\n/** @type {?} */\nvar FOUR = 52;\n/** @type {?} */\nvar FIVE = 53;\n/** @type {?} */\nvar SIX = 54;\n/** @type {?} */\nvar SEVEN = 55;\n/** @type {?} */\nvar EIGHT = 56;\n/** @type {?} */\nvar NINE = 57;\n/** @type {?} */\nvar FF_SEMICOLON = 59;\n/** @type {?} */\nvar FF_EQUALS = 61;\n/** @type {?} */\nvar QUESTION_MARK = 63;\n/** @type {?} */\nvar AT_SIGN = 64;\n/** @type {?} */\nvar A = 65;\n/** @type {?} */\nvar B = 66;\n/** @type {?} */\nvar C = 67;\n/** @type {?} */\nvar D = 68;\n/** @type {?} */\nvar E = 69;\n/** @type {?} */\nvar F = 70;\n/** @type {?} */\nvar G = 71;\n/** @type {?} */\nvar H = 72;\n/** @type {?} */\nvar I = 73;\n/** @type {?} */\nvar J = 74;\n/** @type {?} */\nvar K = 75;\n/** @type {?} */\nvar L = 76;\n/** @type {?} */\nvar M = 77;\n/** @type {?} */\nvar N = 78;\n/** @type {?} */\nvar O = 79;\n/** @type {?} */\nvar P = 80;\n/** @type {?} */\nvar Q = 81;\n/** @type {?} */\nvar R = 82;\n/** @type {?} */\nvar S = 83;\n/** @type {?} */\nvar T = 84;\n/** @type {?} */\nvar U = 85;\n/** @type {?} */\nvar V = 86;\n/** @type {?} */\nvar W = 87;\n/** @type {?} */\nvar X = 88;\n/** @type {?} */\nvar Y = 89;\n/** @type {?} */\nvar Z = 90;\n/** @type {?} */\nvar META = 91;\n/** @type {?} */\nvar MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nvar MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nvar CONTEXT_MENU = 93;\n/** @type {?} */\nvar NUMPAD_ZERO = 96;\n/** @type {?} */\nvar NUMPAD_ONE = 97;\n/** @type {?} */\nvar NUMPAD_TWO = 98;\n/** @type {?} */\nvar NUMPAD_THREE = 99;\n/** @type {?} */\nvar NUMPAD_FOUR = 100;\n/** @type {?} */\nvar NUMPAD_FIVE = 101;\n/** @type {?} */\nvar NUMPAD_SIX = 102;\n/** @type {?} */\nvar NUMPAD_SEVEN = 103;\n/** @type {?} */\nvar NUMPAD_EIGHT = 104;\n/** @type {?} */\nvar NUMPAD_NINE = 105;\n/** @type {?} */\nvar NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nvar NUMPAD_PLUS = 107;\n/** @type {?} */\nvar NUMPAD_MINUS = 109;\n/** @type {?} */\nvar NUMPAD_PERIOD = 110;\n/** @type {?} */\nvar NUMPAD_DIVIDE = 111;\n/** @type {?} */\nvar F1 = 112;\n/** @type {?} */\nvar F2 = 113;\n/** @type {?} */\nvar F3 = 114;\n/** @type {?} */\nvar F4 = 115;\n/** @type {?} */\nvar F5 = 116;\n/** @type {?} */\nvar F6 = 117;\n/** @type {?} */\nvar F7 = 118;\n/** @type {?} */\nvar F8 = 119;\n/** @type {?} */\nvar F9 = 120;\n/** @type {?} */\nvar F10 = 121;\n/** @type {?} */\nvar F11 = 122;\n/** @type {?} */\nvar F12 = 123;\n/** @type {?} */\nvar NUM_LOCK = 144;\n/** @type {?} */\nvar SCROLL_LOCK = 145;\n/** @type {?} */\nvar FIRST_MEDIA = 166;\n/** @type {?} */\nvar FF_MINUS = 173;\n/** @type {?} */\nvar MUTE = 173;\n/** @type {?} */\nvar VOLUME_DOWN = 174;\n/** @type {?} */\nvar VOLUME_UP = 175;\n/** @type {?} */\nvar FF_MUTE = 181;\n/** @type {?} */\nvar FF_VOLUME_DOWN = 182;\n/** @type {?} */\nvar LAST_MEDIA = 183;\n/** @type {?} */\nvar FF_VOLUME_UP = 183;\n/** @type {?} */\nvar SEMICOLON = 186;\n/** @type {?} */\nvar EQUALS = 187;\n/** @type {?} */\nvar COMMA = 188;\n/** @type {?} */\nvar DASH = 189;\n/** @type {?} */\nvar SLASH = 191;\n/** @type {?} */\nvar APOSTROPHE = 192;\n/** @type {?} */\nvar TILDE = 192;\n/** @type {?} */\nvar OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nvar BACKSLASH = 220;\n/** @type {?} */\nvar CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nvar SINGLE_QUOTE = 222;\n/** @type {?} */\nvar MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META };\n//# sourceMappingURL=keycodes.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar hasV8BreakIterator = (typeof Intl !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nvar Platform = /** @class */ (function () {\n    /**\n     * @breaking-change v7.0.0 remove optional decorator\n     */\n    function Platform(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    Platform.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Platform.ctorParameters = function () { return [\n        { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    /** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n    return Platform;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar PlatformModule = /** @class */ (function () {\n    function PlatformModule() {\n    }\n    PlatformModule.decorators = [\n        { type: NgModule },\n    ];\n    return PlatformModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result Set of input types support by the current browser.\n  @type {?} */\nvar supportedInputTypes;\n/** *\n * Types of `<input>` that *might* be supported.\n  @type {?} */\nvar candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    var featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * Cached result of whether the user's browser supports passive event listeners.\n  @type {?} */\nvar supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\n                get: function () { return supportsPassiveEvents = true; }\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RtlScrollAxisType = {\n    /**\n       * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n       * all the way right.\n       */\n    NORMAL: 0,\n    /**\n       * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n       * all the way right.\n       */\n    NEGATED: 1,\n    /**\n       * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n       * all the way right.\n       */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/** *\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n  @type {?} */\nvar rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in document.documentElement.style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        /** @type {?} */\n        var scrollContainer = document.createElement('div');\n        /** @type {?} */\n        var containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        var content = document.createElement('div');\n        /** @type {?} */\n        var contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        } /** @type {?} */\n        ((scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType };\n//# sourceMappingURL=platform.es5.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\nexport { AsapAction };\n//# sourceMappingURL=AsapAction.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n","/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n","/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(scalar(array[0]), source);\n        }\n        else if (len > 0) {\n            return concatStatic(fromArray(array, scheduler), source);\n        }\n        else {\n            return concatStatic(empty(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asapScheduler, combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar LayoutModule = /** @class */ (function () {\n    function LayoutModule() {\n    }\n    LayoutModule.decorators = [\n        { type: NgModule },\n    ];\n    return LayoutModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Global registry for all dynamically-created, injected media queries.\n  @type {?} */\nvar mediaQueriesForWebkitCompatibility = new Set();\n/** *\n * Style tag that holds all of the dynamically-created media queries.\n  @type {?} */\nvar mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nvar MediaMatcher = /** @class */ (function () {\n    function MediaMatcher(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    MediaMatcher.prototype.matchMedia = /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    };\n    MediaMatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MediaMatcher.ctorParameters = function () { return [\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ MediaMatcher.ngInjectableDef = defineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(inject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n    return MediaMatcher;\n}());\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            (/** @type {?} */ (mediaQueryStyleNode.sheet))\n                .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: function () { },\n        removeListener: function () { }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nvar BreakpointObserver = /** @class */ (function () {\n    function BreakpointObserver(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    BreakpointObserver.prototype.ngOnDestroy = /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    function () {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    };\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    BreakpointObserver.prototype.isMatched = /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    function (value) {\n        var _this = this;\n        /** @type {?} */\n        var queries = splitQueries(coerceArray(value));\n        return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n    };\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    BreakpointObserver.prototype.observe = /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    function (value) {\n        var _this = this;\n        /** @type {?} */\n        var queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n        return combineLatest(observables).pipe(debounceTime(0, asapScheduler), map(function (breakpointStates) {\n            /** @type {?} */\n            var response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(function (state) {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            });\n            return response;\n        }));\n    };\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    BreakpointObserver.prototype._registerQuery = /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        var _this = this;\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return /** @type {?} */ ((this._queries.get(query)));\n        }\n        /** @type {?} */\n        var mql = this.mediaMatcher.matchMedia(query);\n        /** @type {?} */\n        var queryObservable = fromEventPattern(\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        function (listener) {\n            mql.addListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n        }, function (listener) {\n            mql.removeListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n        })\n            .pipe(takeUntil(this._destroySubject), startWith(mql), map(function (nextMql) { return ({ query: query, matches: nextMql.matches }); }));\n        /** @type {?} */\n        var output = { observable: queryObservable, mql: mql };\n        this._queries.set(query, output);\n        return output;\n    };\n    BreakpointObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    BreakpointObserver.ctorParameters = function () { return [\n        { type: MediaMatcher },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ BreakpointObserver.ngInjectableDef = defineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(inject(MediaMatcher), inject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n    return BreakpointObserver;\n}());\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map(function (query) { return query.split(','); })\n        .reduce(function (a1, a2) { return a1.concat(a2); })\n        .map(function (query) { return query.trim(); });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n  @type {?} */\nvar Breakpoints = {\n    XSmall: '(max-width: 599px)',\n    Small: '(min-width: 600px) and (max-width: 959px)',\n    Medium: '(min-width: 960px) and (max-width: 1279px)',\n    Large: '(min-width: 1280px) and (max-width: 1919px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599px) and (orientation: portrait), ' +\n        '(max-width: 959px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };\n//# sourceMappingURL=layout.es5.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = Object.prototype.toString;\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\nexport { AnimationFrameAction };\n//# sourceMappingURL=AnimationFrameAction.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n","/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, defineInjectable, inject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, sampleTime, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { __extends } from 'tslib';\nimport { ArrayDataSource, DataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * The injection token used to specify the virtual scrolling strategy.\n  @type {?} */\nvar VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nvar  /**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nFixedSizeVirtualScrollStrategy = /** @class */ (function () {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    function FixedSizeVirtualScrollStrategy(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    function (viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.detach = /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    function () {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    };\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.updateItemAndBufferSize = /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    function (itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onContentScrolled = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onDataLengthChanged = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onContentRendered = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        /* no-op */ \n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onRenderedOffsetChanged = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        /* no-op */ \n    };\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrollToIndex = /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    function (index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    };\n    /**\n     * Update the viewport's total content size.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype._updateTotalContentSize = /**\n     * Update the viewport's total content size.\n     * @return {?}\n     */\n    function () {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    };\n    /**\n     * Update the viewport's rendered range.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype._updateRenderedRange = /**\n     * Update the viewport's rendered range.\n     * @return {?}\n     */\n    function () {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        var scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        var firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        var renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        var newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        var viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        var dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        var startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            var endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    };\n    return FixedSizeVirtualScrollStrategy;\n}());\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nvar CdkFixedSizeVirtualScroll = /** @class */ (function () {\n    function CdkFixedSizeVirtualScroll() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"itemSize\", {\n        /** The size of the items in the list (in pixels). */\n        get: /**\n         * The size of the items in the list (in pixels).\n         * @return {?}\n         */\n        function () { return this._itemSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._itemSize = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"minBufferPx\", {\n        /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         */\n        get: /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         * @return {?}\n         */\n        function () { return this._minBufferPx; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._minBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"maxBufferPx\", {\n        /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         */\n        get: /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         * @return {?}\n         */\n        function () { return this._maxBufferPx; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._maxBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    };\n    CdkFixedSizeVirtualScroll.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [{\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(function () { return CdkFixedSizeVirtualScroll; })],\n                        }],\n                },] },\n    ];\n    CdkFixedSizeVirtualScroll.propDecorators = {\n        itemSize: [{ type: Input }],\n        minBufferPx: [{ type: Input }],\n        maxBufferPx: [{ type: Input }]\n    };\n    return CdkFixedSizeVirtualScroll;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Time in ms to throttle the scrolling events by default.\n  @type {?} */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = /** @class */ (function () {\n    function ScrollDispatcher(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    function (scrollable) {\n        var _this = this;\n        /** @type {?} */\n        var scrollSubscription = scrollable.elementScrolled()\n            .subscribe(function () { return _this._scrolled.next(scrollable); });\n        this.scrollContainers.set(scrollable, scrollSubscription);\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    function (scrollable) {\n        /** @type {?} */\n        var scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    };\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    function (auditTimeInMs) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        return this._platform.isBrowser ? Observable.create(function (observer) {\n            if (!_this._globalSubscription) {\n                _this._addGlobalListener();\n            }\n            /** @type {?} */\n            var subscription = auditTimeInMs > 0 ?\n                _this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                _this._scrolled.subscribe(observer);\n            _this._scrolledCount++;\n            return function () {\n                subscription.unsubscribe();\n                _this._scrolledCount--;\n                if (!_this._scrolledCount) {\n                    _this._removeGlobalListener();\n                }\n            };\n        }) : of();\n    };\n    /**\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._removeGlobalListener();\n        this.scrollContainers.forEach(function (_, container) { return _this.deregister(container); });\n        this._scrolled.complete();\n    };\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ancestorScrolled = /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    function (elementRef, auditTimeInMs) {\n        /** @type {?} */\n        var ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(function (target) {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    };\n    /** Returns all registered Scrollables that contain the provided element. */\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getAncestorScrollContainers = /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (elementRef) {\n        var _this = this;\n        /** @type {?} */\n        var scrollingContainers = [];\n        this.scrollContainers.forEach(function (_subscription, scrollable) {\n            if (_this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    };\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._scrollableContainsElement = /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (scrollable, elementRef) {\n        /** @type {?} */\n        var element = elementRef.nativeElement;\n        /** @type {?} */\n        var scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = /** @type {?} */ ((element)).parentElement);\n        return false;\n    };\n    /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._addGlobalListener = /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n            return fromEvent(window.document, 'scroll').subscribe(function () { return _this._scrolled.next(); });\n        });\n    };\n    /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._removeGlobalListener = /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n    function () {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    };\n    ScrollDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ScrollDispatcher.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ ScrollDispatcher.ngInjectableDef = defineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(inject(NgZone), inject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n    return ScrollDispatcher;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar CdkScrollable = /** @class */ (function () {\n    function CdkScrollable(elementRef, scrollDispatcher, ngZone, dir) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = Observable.create(function (observer) {\n            return _this.ngZone.runOutsideAngular(function () {\n                return fromEvent(_this.elementRef.nativeElement, 'scroll').pipe(takeUntil(_this._destroyed))\n                    .subscribe(observer);\n            });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.scrollDispatcher.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    CdkScrollable.prototype.elementScrolled = /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    function () {\n        return this._elementScrolled;\n    };\n    /** Gets the ElementRef for the viewport. */\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    CdkScrollable.prototype.getElementRef = /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    function () {\n        return this.elementRef;\n    };\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    CdkScrollable.prototype.scrollTo = /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    function (options) {\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top = el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right = el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left = el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    CdkScrollable.prototype._applyScrollToOptions = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    };\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    CdkScrollable.prototype.measureScrollOffset = /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    function (from) {\n        /** @type {?} */\n        var LEFT = 'left';\n        /** @type {?} */\n        var RIGHT = 'right';\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    };\n    CdkScrollable.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkScrollable.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    return CdkScrollable;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * A viewport that virtualizes it's scrolling with the help of `CdkVirtualForOf`.\n */\nvar CdkVirtualScrollViewport = /** @class */ (function (_super) {\n    __extends(CdkVirtualScrollViewport, _super);\n    function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        var _this = _super.call(this, elementRef, scrollDispatcher, ngZone, dir) || this;\n        _this.elementRef = elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        _this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        _this._renderedRangeSubject = new Subject();\n        /**\n         * The direction the viewport scrolls.\n         */\n        _this.orientation = 'vertical';\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        _this.scrolledIndexChange = Observable.create(function (observer) {\n            return _this._scrollStrategy.scrolledIndexChange.subscribe(function (index) {\n                return Promise.resolve().then(function () { return _this.ngZone.run(function () { return observer.next(index); }); });\n            });\n        });\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        _this.renderedRangeStream = _this._renderedRangeSubject.asObservable();\n        /**\n         * The transform used to scale the spacer to the same size as all content, including content that\n         * is not currently rendered.\n         */\n        _this._totalContentSizeTransform = '';\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        _this._totalContentSize = 0;\n        /**\n         * The currently rendered range of indices.\n         */\n        _this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        _this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        _this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        _this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        _this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        _this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        _this._runAfterChangeDetection = [];\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n            _this._measureViewportSize();\n            _this._scrollStrategy.attach(_this);\n            _this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(/** @type {?} */ ((null))), \n            // Sample the scroll stream at every animation frame. This way if there are multiple\n            // scroll events in the same frame we only need to recheck our layout once.\n            sampleTime(0, animationFrameScheduler))\n                .subscribe(function () { return _this._scrollStrategy.onContentScrolled(); });\n            _this._markChangeDetectionNeeded();\n        }); });\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    /** Attaches a `CdkVirtualForOf` to this viewport. */\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.attach = /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    function (forOf) {\n        var _this = this;\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(function () {\n            _this._forOf = forOf;\n            _this._forOf.dataStream.pipe(takeUntil(_this._detachedSubject)).subscribe(function (data) {\n                /** @type {?} */\n                var newLength = data.length;\n                if (newLength !== _this._dataLength) {\n                    _this._dataLength = newLength;\n                    _this._scrollStrategy.onDataLengthChanged();\n                }\n            });\n        });\n    };\n    /** Detaches the current `CdkVirtualForOf`. */\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.detach = /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    function () {\n        this._forOf = null;\n        this._detachedSubject.next();\n    };\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getDataLength = /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    function () {\n        return this._dataLength;\n    };\n    /** Gets the size of the viewport (in pixels). */\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getViewportSize = /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    function () {\n        return this._viewportSize;\n    };\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getRenderedRange = /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    function () {\n        return this._renderedRange;\n    };\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setTotalContentSize = /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    function (size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            /** @type {?} */\n            var axis = this.orientation == 'horizontal' ? 'X' : 'Y';\n            this._totalContentSizeTransform = \"scale\" + axis + \"(\" + this._totalContentSize + \")\";\n            this._markChangeDetectionNeeded();\n        }\n    };\n    /** Sets the currently rendered range of indices. */\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedRange = /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    function (range) {\n        var _this = this;\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(function () { return _this._scrollStrategy.onContentRendered(); });\n        }\n    };\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getOffsetToRenderedContentStart = /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    function () {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    };\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedContentOffset = /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    function (offset, to) {\n        var _this = this;\n        if (to === void 0) { to = 'to-start'; }\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        var isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        var axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        var axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        var transform = \"translate\" + axis + \"(\" + Number(axisDirection * offset) + \"px)\";\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += \" translate\" + axis + \"(-100%)\";\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(function () {\n                if (_this._renderedContentOffsetNeedsRewrite) {\n                    _this._renderedContentOffset -= _this.measureRenderedContentSize();\n                    _this._renderedContentOffsetNeedsRewrite = false;\n                    _this.setRenderedContentOffset(_this._renderedContentOffset);\n                }\n                else {\n                    _this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    };\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrollToOffset = /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    function (offset, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        /** @type {?} */\n        var options = { behavior: behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    };\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrollToIndex = /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    function (index, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    };\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureScrollOffset = /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    function (from) {\n        return _super.prototype.measureScrollOffset.call(this, from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    };\n    /** Measure the combined size of all of the rendered items. */\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureRenderedContentSize = /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    };\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureRangeSize = /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    function (range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    };\n    /** Update the viewport dimensions and re-render. */\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.checkViewportSize = /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    function () {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    };\n    /**\n     * Measure the viewport size.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._measureViewportSize = /**\n     * Measure the viewport size.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    };\n    /**\n     * Queue up change detection to run.\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._markChangeDetectionNeeded = /**\n     * Queue up change detection to run.\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    function (runAfter) {\n        var _this = this;\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n                _this._doChangeDetection();\n            }); });\n        }\n    };\n    /**\n     * Run change detection.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._doChangeDetection = /**\n     * Run change detection.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(function () { return _this._changeDetectorRef.markForCheck(); });\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        var runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (var _i = 0, runAfterChangeDetection_1 = runAfterChangeDetection; _i < runAfterChangeDetection_1.length; _i++) {\n            var fn = runAfterChangeDetection_1[_i];\n            fn();\n        }\n    };\n    CdkVirtualScrollViewport.decorators = [\n        { type: Component, args: [{selector: 'cdk-virtual-scroll-viewport',\n                    template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.transform]=\\\"_totalContentSizeTransform\\\"></div>\",\n                    styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{bottom:0}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{right:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"],\n                    host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation === \"vertical\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    CdkVirtualScrollViewport.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ScrollDispatcher }\n    ]; };\n    CdkVirtualScrollViewport.propDecorators = {\n        orientation: [{ type: Input }],\n        scrolledIndexChange: [{ type: Output }],\n        _contentWrapper: [{ type: ViewChild, args: ['contentWrapper',] }]\n    };\n    return CdkVirtualScrollViewport;\n}(CdkScrollable));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    var el = /** @type {?} */ (node);\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    var rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nvar CdkVirtualForOf = /** @class */ (function () {\n    function CdkVirtualForOf(_viewContainerRef, _template, _differs, /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        var _this = this;\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(/** @type {?} */ ((null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(function (_a) {\n            var prev = _a[0], cur = _a[1];\n            return _this._changeDataSource(prev, cur);\n        }), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(function (data) {\n            _this._data = data;\n            _this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(function (range) {\n            _this._renderedRange = range;\n            ngZone.run(function () { return _this.viewChange.next(_this._renderedRange); });\n            _this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForOf\", {\n        /** The DataSource to display. */\n        get: /**\n         * The DataSource to display.\n         * @return {?}\n         */\n        function () {\n            return this._cdkVirtualForOf;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._cdkVirtualForOf = value;\n            /** @type {?} */\n            var ds = value instanceof DataSource ? value :\n                // Slice the value if its an NgIterable to ensure we're working with an array.\n                new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n            this._dataSourceChanges.next(ds);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTrackBy\", {\n        /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         */\n        get: /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         * @return {?}\n         */\n        function () {\n            return this._cdkVirtualForTrackBy;\n        },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            var _this = this;\n            this._needsUpdate = true;\n            this._cdkVirtualForTrackBy = fn ?\n                function (index, item) { return fn(index + (_this._renderedRange ? _this._renderedRange.start : 0), item); } :\n                undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTemplate\", {\n        /** The template used to stamp out new elements. */\n        set: /**\n         * The template used to stamp out new elements.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this._needsUpdate = true;\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.measureRangeSize = /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    function (range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(\"Error: attempted to measure an item that isn't rendered.\");\n        }\n        /** @type {?} */\n        var renderedStartIndex = range.start - this._renderedRange.start;\n        /** @type {?} */\n        var rangeLen = range.end - range.start;\n        /** @type {?} */\n        var totalSize = 0;\n        /** @type {?} */\n        var i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            var view = /** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex));\n            /** @type {?} */\n            var j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, /** @type {?} */ ((view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._differ && this._needsUpdate) {\n            /** @type {?} */\n            var changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._viewport.detach();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (var _i = 0, _a = this._templateCache; _i < _a.length; _i++) {\n            var view = _a[_i];\n            view.destroy();\n        }\n    };\n    /**\n     * React to scroll state changes in the viewport.\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._onRenderedDataChange = /**\n     * React to scroll state changes in the viewport.\n     * @return {?}\n     */\n    function () {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    };\n    /**\n     * Swap out one `DataSource` for another.\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._changeDataSource = /**\n     * Swap out one `DataSource` for another.\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    function (oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs.connect(this);\n    };\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._updateContext = /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var count = this._data.length;\n        /** @type {?} */\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            var view = /** @type {?} */ (this._viewContainerRef.get(i));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    };\n    /**\n     * Apply changes to the DOM.\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._applyChanges = /**\n     * Apply changes to the DOM.\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation(function (record, adjustedPreviousIndex, currentIndex) {\n            if (record.previousIndex == null) { // Item added.\n                /** @type {?} */\n                var view = _this._getViewForNewItem();\n                _this._viewContainerRef.insert(view, /** @type {?} */ ((currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                // Item removed.\n                _this._cacheView(/** @type {?} */ (_this._viewContainerRef.detach(/** @type {?} */ ((adjustedPreviousIndex)))));\n            }\n            else { // Item moved.\n                /** @type {?} */\n                var view = /** @type {?} */ (_this._viewContainerRef.get(/** @type {?} */ ((adjustedPreviousIndex))));\n                _this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        });\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange(function (record) {\n            /** @type {?} */\n            var view = /** @type {?} */ (_this._viewContainerRef.get(/** @type {?} */ ((record.currentIndex))));\n            view.context.$implicit = record.item;\n        });\n        /** @type {?} */\n        var count = this._data.length;\n        /** @type {?} */\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            var view = /** @type {?} */ (this._viewContainerRef.get(i));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    };\n    /**\n     * Cache the given detached view.\n     * @param {?} view\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._cacheView = /**\n     * Cache the given detached view.\n     * @param {?} view\n     * @return {?}\n     */\n    function (view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            view.destroy();\n        }\n    };\n    /**\n     * Get a view for a new item, either from the cache or by creating a new one.\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._getViewForNewItem = /**\n     * Get a view for a new item, either from the cache or by creating a new one.\n     * @return {?}\n     */\n    function () {\n        return this._templateCache.pop() || this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: /** @type {?} */ ((null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        });\n    };\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @param {?} context\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._updateComputedContextProperties = /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    };\n    CdkVirtualForOf.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkVirtualForOf.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: IterableDiffers },\n        { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n        { type: NgZone }\n    ]; };\n    CdkVirtualForOf.propDecorators = {\n        cdkVirtualForOf: [{ type: Input }],\n        cdkVirtualForTrackBy: [{ type: Input }],\n        cdkVirtualForTemplate: [{ type: Input }],\n        cdkVirtualForTemplateCacheSize: [{ type: Input }]\n    };\n    return CdkVirtualForOf;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar ScrollingModule = /** @class */ (function () {\n    function ScrollingModule() {\n    }\n    ScrollingModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule, PlatformModule],\n                    exports: [\n                        BidiModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkScrollable,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                    declarations: [\n                        CdkFixedSizeVirtualScroll,\n                        CdkScrollable,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                },] },\n    ];\n    return ScrollingModule;\n}());\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nvar ScrollDispatchModule = /** @class */ (function () {\n    function ScrollDispatchModule() {\n    }\n    ScrollDispatchModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [ScrollingModule],\n                    exports: [ScrollingModule],\n                },] },\n    ];\n    return ScrollDispatchModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Time in ms to throttle the resize events by default.\n  @type {?} */\nvar DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = /** @class */ (function () {\n    function ViewportRuler(_platform, ngZone) {\n        var _this = this;\n        this._platform = _platform;\n        this._change = _platform.isBrowser ? ngZone.runOutsideAngular(function () {\n            return merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange'));\n        }) : of();\n        this._invalidateCache = this.change().subscribe(function () { return _this._updateViewportSize(); });\n    }\n    /**\n     * @return {?}\n     */\n    ViewportRuler.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._invalidateCache.unsubscribe();\n    };\n    /** Returns the viewport's width and height. */\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportSize = /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    function () {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        var output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = /** @type {?} */ ((null));\n        }\n        return output;\n    };\n    /** Gets a ClientRect for the viewport's bounds. */\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scrollPosition = this.getViewportScrollPosition();\n        var _a = this.getViewportSize(), width = _a.width, height = _a.height;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /** Gets the (top, left) scroll position of the viewport. */\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    function () {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        /** @type {?} */\n        var documentRect = document.documentElement.getBoundingClientRect();\n        /** @type {?} */\n        var top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            document.documentElement.scrollTop || 0;\n        /** @type {?} */\n        var left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            document.documentElement.scrollLeft || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    ViewportRuler.prototype.change = /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    function (throttleTime) {\n        if (throttleTime === void 0) { throttleTime = DEFAULT_RESIZE_TIME; }\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    };\n    /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n    ViewportRuler.prototype._updateViewportSize = /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n    function () {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    };\n    ViewportRuler.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ViewportRuler.ctorParameters = function () { return [\n        { type: Platform },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ ViewportRuler.ngInjectableDef = defineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(inject(Platform), inject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n    return ViewportRuler;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n//# sourceMappingURL=scrolling.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { ComponentFactoryResolver, Directive, EventEmitter, NgModule, Output, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nvar  /**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nPortal = /** @class */ (function () {\n    function Portal() {\n    }\n    /** Attach this portal to a host. */\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.attach = /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    function (host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return /** @type {?} */ (host.attach(this));\n    };\n    /** Detach this portal from its host */\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    Portal.prototype.detach = /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: /**\n         * Whether this portal is attached to a host.\n         * @return {?}\n         */\n        function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.setAttachedHost = /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nvar  /**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nComponentPortal = /** @class */ (function (_super) {\n    __extends(ComponentPortal, _super);\n    function ComponentPortal(component, viewContainerRef, injector, componentFactoryResolver) {\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        _this.componentFactoryResolver = componentFactoryResolver;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nvar  /**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nTemplatePortal = /** @class */ (function (_super) {\n    __extends(TemplatePortal, _super);\n    function TemplatePortal(template, viewContainerRef, context) {\n        var _this = _super.call(this) || this;\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        _this.context = context;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    TemplatePortal.prototype.attach = /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    function (host, context) {\n        if (context === void 0) { context = this.context; }\n        this.context = context;\n        return _super.prototype.attach.call(this, host);\n    };\n    /**\n     * @return {?}\n     */\n    TemplatePortal.prototype.detach = /**\n     * @return {?}\n     */\n    function () {\n        this.context = undefined;\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nvar  /**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nBasePortalOutlet = /** @class */ (function () {\n    function BasePortalOutlet() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n    }\n    /** Whether this host has an attached portal. */\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.hasAttached = /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    function () {\n        return !!this._attachedPortal;\n    };\n    /** Attaches a portal. */\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attach = /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    function (portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    };\n    /** Detaches a previously attached portal. */\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.detach = /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    };\n    /** Permanently dispose of this portal host. */\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.dispose = /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.setDisposeFn = /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._disposeFn = fn;\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalOutlet.prototype._invokeDisposeFn = /**\n     * @return {?}\n     */\n    function () {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    return BasePortalOutlet;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nvar  /**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nDomPortalOutlet = /** @class */ (function (_super) {\n    __extends(DomPortalOutlet, _super);\n    function DomPortalOutlet(outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        var _this = _super.call(this) || this;\n        _this.outletElement = outletElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    DomPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    function (portal) {\n        var _this = this;\n        /** @type {?} */\n        var resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        var componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        var componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    DomPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    function (portal) {\n        var _this = this;\n        /** @type {?} */\n        var viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        var viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(function (rootNode) { return _this.outletElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            /** @type {?} */\n            var index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    DomPortalOutlet.prototype.dispose = /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.dispose.call(this);\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    };\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    DomPortalOutlet.prototype._getComponentRootNode = /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        return /** @type {?} */ ((/** @type {?} */ (componentRef.hostView)).rootNodes[0]);\n    };\n    return DomPortalOutlet;\n}(BasePortalOutlet));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nvar CdkPortal = /** @class */ (function (_super) {\n    __extends(CdkPortal, _super);\n    function CdkPortal(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    CdkPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-portal], [cdkPortal], [portal]',\n                    exportAs: 'cdkPortal',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkPortal.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: ViewContainerRef }\n    ]; };\n    return CdkPortal;\n}(TemplatePortal));\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nvar CdkPortalOutlet = /** @class */ (function (_super) {\n    __extends(CdkPortalOutlet, _super);\n    function CdkPortalOutlet(_componentFactoryResolver, _viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        _this._isInitialized = false;\n        _this.attached = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(CdkPortalOutlet.prototype, \"portal\", {\n        /** Portal associated with the Portal outlet. */\n        get: /**\n         * Portal associated with the Portal outlet.\n         * @return {?}\n         */\n        function () {\n            return this._attachedPortal;\n        },\n        set: /**\n         * @param {?} portal\n         * @return {?}\n         */\n        function (portal) {\n            // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n            // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n            // and attach a portal programmatically in the parent component. When Angular does the first CD\n            // round, it will fire the setter with empty string, causing the user's content to be cleared.\n            if (this.hasAttached() && !portal && !this._isInitialized) {\n                return;\n            }\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._attachedPortal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"attachedRef\", {\n        /** Component or view reference that is attached to the portal. */\n        get: /**\n         * Component or view reference that is attached to the portal.\n         * @return {?}\n         */\n        function () {\n            return this._attachedRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.dispose.call(this);\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    };\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    CdkPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    function (portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        var viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        var ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    };\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    CdkPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        var viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    };\n    CdkPortalOutlet.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkPortalOutlet], [cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalOutlet, cdkPortalHost',\n                    inputs: ['portal: cdkPortalOutlet']\n                },] },\n    ];\n    /** @nocollapse */\n    CdkPortalOutlet.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef }\n    ]; };\n    CdkPortalOutlet.propDecorators = {\n        attached: [{ type: Output }]\n    };\n    return CdkPortalOutlet;\n}(BasePortalOutlet));\nvar PortalModule = /** @class */ (function () {\n    function PortalModule() {\n    }\n    PortalModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkPortal, CdkPortalOutlet],\n                    declarations: [CdkPortal, CdkPortalOutlet],\n                },] },\n    ];\n    return PortalModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nvar  /**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nPortalInjector = /** @class */ (function () {\n    function PortalInjector(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    PortalInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        /** @type {?} */\n        var value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return PortalInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { DomPortalOutlet as DomPortalHost, CdkPortalOutlet as PortalHostDirective, CdkPortal as TemplatePortalDirective, BasePortalOutlet as BasePortalHost, Portal, ComponentPortal, TemplatePortal, BasePortalOutlet, DomPortalOutlet, CdkPortal, CdkPortalOutlet, PortalModule, PortalInjector };\n//# sourceMappingURL=portal.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, Inject, Injectable, NgZone, NgModule, SkipSelf, ApplicationRef, ComponentFactoryResolver, Injector, ElementRef, Directive, EventEmitter, InjectionToken, Input, Output, TemplateRef, ViewContainerRef, defineInjectable, inject } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule, VIEWPORT_RULER_PROVIDER } from '@angular/cdk/scrolling';\nexport { ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { __assign, __extends } from 'tslib';\nimport { Observable, Subject, merge, Subscription } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { ESCAPE } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Scroll strategy that doesn't do anything.\n */\nvar  /**\n * Scroll strategy that doesn't do anything.\n */\nNoopScrollStrategy = /** @class */ (function () {\n    function NoopScrollStrategy() {\n    }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.enable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.disable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.attach = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    return NoopScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nvar  /**\n * Initial configuration used when creating an overlay.\n */\nOverlayConfig = /** @class */ (function () {\n    function OverlayConfig(config) {\n        var _this = this;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        if (config) {\n            Object.keys(config)\n                .filter(function (key) { return typeof config[key] !== 'undefined'; })\n                .forEach(function (key) { return _this[key] = config[key]; });\n        }\n    }\n    return OverlayConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nvar  /**\n * The points of the origin element and the overlay element to connect.\n */\nConnectionPositionPair = /** @class */ (function () {\n    function ConnectionPositionPair(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nvar  /**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nScrollingVisibility = /** @class */ (function () {\n    function ScrollingVisibility() {\n    }\n    return ScrollingVisibility;\n}());\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nvar ConnectedOverlayPositionChange = /** @class */ (function () {\n    function ConnectedOverlayPositionChange(connectionPair, /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    /** @nocollapse */\n    ConnectedOverlayPositionChange.ctorParameters = function () { return [\n        { type: ConnectionPositionPair },\n        { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n    ]; };\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"top\\\", \\\"bottom\\\" or \\\"center\\\".\");\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"start\\\", \\\"end\\\" or \\\"center\\\".\");\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nvar  /**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nBlockScrollStrategy = /** @class */ (function () {\n    function BlockScrollStrategy(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    function () { };\n    /** Blocks page-level scroll while the attached overlay is open. */\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.enable = /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    function () {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            var root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    };\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.disable = /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    function () {\n        if (this._isEnabled) {\n            /** @type {?} */\n            var html = this._document.documentElement;\n            /** @type {?} */\n            var body = this._document.body;\n            /** @type {?} */\n            var previousHtmlScrollBehavior = html.style['scrollBehavior'] || '';\n            /** @type {?} */\n            var previousBodyScrollBehavior = body.style['scrollBehavior'] || '';\n            this._isEnabled = false;\n            html.style.left = this._previousHTMLStyles.left;\n            html.style.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            html.style['scrollBehavior'] = body.style['scrollBehavior'] = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            html.style['scrollBehavior'] = previousHtmlScrollBehavior;\n            body.style['scrollBehavior'] = previousBodyScrollBehavior;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype._canBeEnabled = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        var body = this._document.body;\n        /** @type {?} */\n        var viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    };\n    return BlockScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(\"Scroll strategy has already been attached.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nvar  /**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nCloseScrollStrategy = /** @class */ (function () {\n    function CloseScrollStrategy(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = function () {\n            _this.disable();\n            if (_this._overlayRef.hasAttached()) {\n                _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables the closing of the attached overlay on scroll. */\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.enable = /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        var stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(function () {\n                /** @type {?} */\n                var scrollPosition = _this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - _this._initialScrollPosition) > /** @type {?} */ ((/** @type {?} */ ((_this._config)).threshold))) {\n                    _this._detach();\n                }\n                else {\n                    _this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    };\n    /** Disables the closing the attached overlay on scroll. */\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.disable = /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    return CloseScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(function (containerBounds) {\n        /** @type {?} */\n        var outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        var outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        var outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        var outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(function (scrollContainerRect) {\n        /** @type {?} */\n        var clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        var clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        var clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        var clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nvar  /**\n * Strategy that will update the element position as the user is scrolling.\n */\nRepositionScrollStrategy = /** @class */ (function () {\n    function RepositionScrollStrategy(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables repositioning of the attached overlay on scroll. */\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.enable = /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            var throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(function () {\n                _this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (_this._config && _this._config.autoClose) {\n                    /** @type {?} */\n                    var overlayRect = _this._overlayRef.overlayElement.getBoundingClientRect();\n                    var _a = _this._viewportRuler.getViewportSize(), width = _a.width, height = _a.height;\n                    /** @type {?} */\n                    var parentRects = [{ width: width, height: height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        _this.disable();\n                        _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n                    }\n                }\n            });\n        }\n    };\n    /** Disables repositioning of the attached overlay on scroll. */\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.disable = /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    return RepositionScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nvar ScrollStrategyOptions = /** @class */ (function () {\n    function ScrollStrategyOptions(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = function () { return new NoopScrollStrategy(); };\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = function (config) { return new CloseScrollStrategy(_this._scrollDispatcher, _this._ngZone, _this._viewportRuler, config); };\n        /**\n         * Block scrolling.\n         */\n        this.block = function () { return new BlockScrollStrategy(_this._viewportRuler, _this._document); };\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = function (config) { return new RepositionScrollStrategy(_this._scrollDispatcher, _this._viewportRuler, _this._ngZone, config); };\n        this._document = document;\n    }\n    ScrollStrategyOptions.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ScrollStrategyOptions.ctorParameters = function () { return [\n        { type: ScrollDispatcher },\n        { type: ViewportRuler },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ ScrollStrategyOptions.ngInjectableDef = defineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(inject(ScrollDispatcher), inject(ViewportRuler), inject(NgZone), inject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n    return ScrollStrategyOptions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nvar OverlayKeyboardDispatcher = /** @class */ (function () {\n    function OverlayKeyboardDispatcher(document) {\n        var _this = this;\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = function (event) {\n            /** @type {?} */\n            var overlays = _this._attachedOverlays;\n            for (var i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._detach();\n    };\n    /** Add a new overlay to the list of attached overlay refs. */\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.add = /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener, true);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    };\n    /** Remove an overlay from the list of attached overlay refs. */\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.remove = /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        /** @type {?} */\n        var index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    };\n    /**\n     * Detaches the global keyboard event listener.\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype._detach = /**\n     * Detaches the global keyboard event listener.\n     * @return {?}\n     */\n    function () {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener, true);\n            this._isAttached = false;\n        }\n    };\n    OverlayKeyboardDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayKeyboardDispatcher.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ OverlayKeyboardDispatcher.ngInjectableDef = defineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(inject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n    return OverlayKeyboardDispatcher;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        /** @type {?} */ ((\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Container inside which all overlays will render.\n */\nvar OverlayContainer = /** @class */ (function () {\n    function OverlayContainer(_document) {\n        this._document = _document;\n    }\n    /**\n     * @return {?}\n     */\n    OverlayContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    };\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    OverlayContainer.prototype._createContainer = /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var container = this._document.createElement('div');\n        container.classList.add('cdk-overlay-container');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    OverlayContainer.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ OverlayContainer.ngInjectableDef = defineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(inject(DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\n    return OverlayContainer;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        /** @type {?} */ (DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n        ) // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar  /**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nOverlayRef = /** @class */ (function () {\n    function OverlayRef(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document) {\n        var _this = this;\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._keydownEventsObservable = Observable.create(function (observer) {\n            /** @type {?} */\n            var subscription = _this._keydownEvents.subscribe(observer);\n            _this._keydownEventSubscriptions++;\n            return function () {\n                subscription.unsubscribe();\n                _this._keydownEventSubscriptions--;\n            };\n        });\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            _config.scrollStrategy.attach(this);\n        }\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /** The overlay's HTML element */\n        get: /**\n         * The overlay's HTML element\n         * @return {?}\n         */\n        function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"backdropElement\", {\n        /** The overlay's backdrop HTML element. */\n        get: /**\n         * The overlay's backdrop HTML element.\n         * @return {?}\n         */\n        function () {\n            return this._backdropElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"hostElement\", {\n        /**\n         * Wrapper around the panel element. Can be used for advanced\n         * positioning where a wrapper with specific styling is\n         * required around the overlay pane.\n         */\n        get: /**\n         * Wrapper around the panel element. Can be used for advanced\n         * positioning where a wrapper with specific styling is\n         * required around the overlay pane.\n         * @return {?}\n         */\n        function () {\n            return this._host;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    OverlayRef.prototype.attach = /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    function (portal) {\n        var _this = this;\n        /** @type {?} */\n        var attachResult = this._portalOutlet.attach(portal);\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.attach(this);\n        }\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(function () {\n            // The overlay could've been detached before the zone has stabilized.\n            if (_this.hasAttached()) {\n                _this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        return attachResult;\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    OverlayRef.prototype.detach = /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    function () {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._config.positionStrategy && this._config.positionStrategy.detach) {\n            this._config.positionStrategy.detach();\n        }\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.disable();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, false);\n        }\n        /** @type {?} */\n        var detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in DOM the can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        return detachmentResult;\n    };\n    /** Cleans up the overlay from the DOM. */\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    OverlayRef.prototype.dispose = /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isAttached = this.hasAttached();\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.dispose();\n        }\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.disable();\n        }\n        this.detachBackdrop();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = /** @type {?} */ ((null));\n        }\n        this._previousHostParent = this._pane = /** @type {?} */ ((null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    };\n    /** Whether the overlay has attached content. */\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    OverlayRef.prototype.hasAttached = /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    function () {\n        return this._portalOutlet.hasAttached();\n    };\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    OverlayRef.prototype.backdropClick = /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    function () {\n        return this._backdropClick.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been attached. */\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    OverlayRef.prototype.attachments = /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    function () {\n        return this._attachments.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been detached. */\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachments = /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    function () {\n        return this._detachments.asObservable();\n    };\n    /** Gets an observable of keydown events targeted to this overlay. */\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.keydownEvents = /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    function () {\n        return this._keydownEventsObservable;\n    };\n    /** Gets the the current overlay configuration, which is immutable. */\n    /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    OverlayRef.prototype.getConfig = /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    function () {\n        return this._config;\n    };\n    /** Updates the position of the overlay based on the position strategy. */\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    OverlayRef.prototype.updatePosition = /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    function () {\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.apply();\n        }\n    };\n    /** Update the size properties of the overlay. */\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    OverlayRef.prototype.updateSize = /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    function (sizeConfig) {\n        this._config = __assign({}, this._config, sizeConfig);\n        this._updateElementSize();\n    };\n    /** Sets the LTR/RTL direction for the overlay. */\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    OverlayRef.prototype.setDirection = /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        this._config = __assign({}, this._config, { direction: dir });\n        this._updateElementDirection();\n    };\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    OverlayRef.prototype.getDirection = /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    };\n    /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementDirection = /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        this._host.setAttribute('dir', this.getDirection());\n    };\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementSize = /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    };\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    OverlayRef.prototype._togglePointerEvents = /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    function (enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    };\n    /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype._attachBackdrop = /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        } /** @type {?} */\n        ((\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', function (event) { return _this._backdropClick.next(event); });\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () {\n                    if (_this._backdropElement) {\n                        _this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateStackingOrder = /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    function () {\n        if (this._host.nextSibling) {\n            /** @type {?} */ ((this._host.parentNode)).appendChild(this._host);\n        }\n    };\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachBackdrop = /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var backdropToDetach = this._backdropElement;\n        if (backdropToDetach) {\n            /** @type {?} */\n            var timeoutId_1 = void 0;\n            /** @type {?} */\n            var finishDetach_1 = function () {\n                // It may not be attached to anything in certain cases (e.g. unit tests).\n                if (backdropToDetach && backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n                // It is possible that a new portal has been attached to this overlay since we started\n                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                // is still the same instance that we started to remove.\n                if (_this._backdropElement == backdropToDetach) {\n                    _this._backdropElement = null;\n                }\n                clearTimeout(timeoutId_1);\n            };\n            backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            this._ngZone.runOutsideAngular(function () {\n                /** @type {?} */ ((backdropToDetach)).addEventListener('transitionend', finishDetach_1);\n            });\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            backdropToDetach.style.pointerEvents = 'none';\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            timeoutId_1 = this._ngZone.runOutsideAngular(function () { return setTimeout(finishDetach_1, 500); });\n        }\n    };\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    OverlayRef.prototype._toggleClasses = /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (element, cssClasses, isAdd) {\n        /** @type {?} */\n        var classList = element.classList;\n        coerceArray(cssClasses).forEach(function (cssClass) {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n        });\n    };\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @return {?}\n     */\n    OverlayRef.prototype._detachContentWhenStable = /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(function () {\n            /** @type {?} */\n            var subscription = _this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(_this._attachments, _this._detachments)))\n                .subscribe(function () {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!_this._pane || !_this._host || _this._pane.children.length === 0) {\n                    if (_this._host && _this._host.parentElement) {\n                        _this._previousHostParent = _this._host.parentElement;\n                        _this._previousHostParent.removeChild(_this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    };\n    return OverlayRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nFlexibleConnectedPositionStrategy = /** @class */ (function () {\n    function FlexibleConnectedPositionStrategy(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        var _this = this;\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Whether we're performing the very first positioning of the overlay.\n         */\n        this._isInitialRender = true;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this.scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Amount of subscribers to the `positionChanges` stream.\n         */\n        this._positionChangeSubscriptions = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = Observable.create(function (observer) {\n            /** @type {?} */\n            var subscription = _this._positionChanges.subscribe(observer);\n            _this._positionChangeSubscriptions++;\n            return function () {\n                subscription.unsubscribe();\n                _this._positionChangeSubscriptions--;\n            };\n        });\n        this.setOrigin(connectedTo);\n    }\n    Object.defineProperty(FlexibleConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attaches this position strategy to an overlay. */\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.attach = /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        var _this = this;\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add('cdk-overlay-connected-position-bounding-box');\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(function () {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            _this._isInitialRender = true;\n            _this.apply();\n        });\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.apply = /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        // @breaking-change 7.0.0 Remove `_platform` null check once it's guaranteed to be defined.\n        if (this._isDisposed || (this._platform && !this._platform.isBrowser)) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._origin.getBoundingClientRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        var originRect = this._originRect;\n        /** @type {?} */\n        var overlayRect = this._overlayRect;\n        /** @type {?} */\n        var viewportRect = this._viewportRect;\n        /** @type {?} */\n        var flexibleFits = [];\n        /** @type {?} */\n        var fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            /** @type {?} */\n            var originPoint = this._getOriginPoint(originRect, pos);\n            /** @type {?} */\n            var overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            /** @type {?} */\n            var overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect: overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit: overlayFit, overlayPoint: overlayPoint, originPoint: originPoint, position: pos, overlayRect: overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            var bestFit = null;\n            /** @type {?} */\n            var bestScore = -1;\n            for (var _b = 0, flexibleFits_1 = flexibleFits; _b < flexibleFits_1.length; _b++) {\n                var fit_1 = flexibleFits_1[_b];\n                /** @type {?} */\n                var score = fit_1.boundingBoxRect.width * fit_1.boundingBoxRect.height * (fit_1.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit_1;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(/** @type {?} */ ((bestFit)).position, /** @type {?} */ ((bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(/** @type {?} */ ((fallback)).position, /** @type {?} */ ((fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(/** @type {?} */ ((fallback)).position, /** @type {?} */ ((fallback)).originPoint);\n    };\n    /**\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.detach = /**\n     * @return {?}\n     */\n    function () {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    };\n    /** Cleanup after the element gets destroyed. */\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.dispose = /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    function () {\n        if (!this._isDisposed) {\n            this.detach();\n            this._boundingBox = null;\n            this._positionChanges.complete();\n            this._isDisposed = true;\n        }\n    };\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.reapplyLastPosition = /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    function () {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._origin.getBoundingClientRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            var lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            var originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withScrollableContainers = /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    function (scrollables) {\n        this.scrollables = scrollables;\n    };\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    /**\n     * Adds new preferred positions.\n     * @param {?} positions List of positions options for this overlay.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withPositions = /**\n     * Adds new preferred positions.\n     * @param {?} positions List of positions options for this overlay.\n     * @return {?}\n     */\n    function (positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(/** @type {?} */ ((this._lastPosition))) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    };\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withViewportMargin = /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {?}\n     */\n    function (margin) {\n        this._viewportMargin = margin;\n        return this;\n    };\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @param {?=} flexibleDimensions\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withFlexibleDimensions = /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @param {?=} flexibleDimensions\n     * @return {?}\n     */\n    function (flexibleDimensions) {\n        if (flexibleDimensions === void 0) { flexibleDimensions = true; }\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    };\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @param {?=} growAfterOpen\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withGrowAfterOpen = /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @param {?=} growAfterOpen\n     * @return {?}\n     */\n    function (growAfterOpen) {\n        if (growAfterOpen === void 0) { growAfterOpen = true; }\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    };\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @param {?=} canPush\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withPush = /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @param {?=} canPush\n     * @return {?}\n     */\n    function (canPush) {\n        if (canPush === void 0) { canPush = true; }\n        this._canPush = canPush;\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withLockedPosition = /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    function (isLocked) {\n        if (isLocked === void 0) { isLocked = true; }\n        this._positionLocked = isLocked;\n        return this;\n    };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.setOrigin = /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    function (origin) {\n        this._origin = origin instanceof ElementRef ? origin.nativeElement : origin;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetX = /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetY = /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withTransformOriginOn = /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {?}\n     */\n    function (selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOriginPoint = /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    function (originRect, pos) {\n        /** @type {?} */\n        var x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            var startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            var endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        var y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayPoint = /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    function (originPoint, overlayRect, pos) {\n        /** @type {?} */\n        var overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        var overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    };\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayFit = /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    function (point, overlay, viewport, position) {\n        var x = point.x, y = point.y;\n        /** @type {?} */\n        var offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        var offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        /** @type {?} */\n        var leftOverflow = 0 - x;\n        /** @type {?} */\n        var rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        var topOverflow = 0 - y;\n        /** @type {?} */\n        var bottomOverflow = (y + overlay.height) - viewport.height;\n        /** @type {?} */\n        var visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        var visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        var visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea: visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    };\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._canFitWithFlexibleDimensions = /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    function (fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            var availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            var availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            var minHeight = this._overlayRef.getConfig().minHeight;\n            /** @type {?} */\n            var minWidth = this._overlayRef.getConfig().minWidth;\n            /** @type {?} */\n            var verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            var horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n    };\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    FlexibleConnectedPositionStrategy.prototype._pushOverlayOnScreen = /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    function (start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        var viewport = this._viewportRect;\n        /** @type {?} */\n        var overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        var overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        var overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        var overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        /** @type {?} */\n        var pushX = 0;\n        /** @type {?} */\n        var pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width < viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height < viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    };\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._applyPosition = /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    function (position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChangeSubscriptions > 0) {\n            /** @type {?} */\n            var scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            var changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    };\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setTransformOrigin = /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        var elements = /** @type {?} */ ((this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        var xOrigin;\n        /** @type {?} */\n        var yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (var i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = xOrigin + \" \" + yOrigin;\n        }\n    };\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._calculateBoundingBoxRect = /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    function (origin, position) {\n        /** @type {?} */\n        var viewport = this._viewportRect;\n        /** @type {?} */\n        var isRtl = this._isRtl();\n        /** @type {?} */\n        var height;\n        /** @type {?} */\n        var top;\n        /** @type {?} */\n        var bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.bottom - origin.y;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            /** @type {?} */\n            var smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y, origin.y - viewport.left);\n            /** @type {?} */\n            var previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        /** @type {?} */\n        var isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        /** @type {?} */\n        var isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        var width;\n        /** @type {?} */\n        var left;\n        /** @type {?} */\n        var right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.right - origin.x + this._viewportMargin;\n            width = origin.x - viewport.left;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            /** @type {?} */\n            var smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x, origin.x - viewport.top);\n            /** @type {?} */\n            var previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width: width, height: height };\n    };\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setBoundingBoxStyles = /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    function (origin, position) {\n        /** @type {?} */\n        var boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        var styles = /** @type {?} */ ({});\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            var maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            var maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(/** @type {?} */ ((this._boundingBox)).style, styles);\n    };\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._resetBoundingBoxStyles = /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @return {?}\n     */\n    function () {\n        extendStyles(/** @type {?} */ ((this._boundingBox)).style, /** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        }));\n    };\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._resetOverlayElementStyles = /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @return {?}\n     */\n    function () {\n        extendStyles(this._pane.style, /** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n        }));\n    };\n    /**\n     * Sets positioning styles to the overlay element.\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setOverlayElementStyles = /**\n     * Sets positioning styles to the overlay element.\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    function (originPoint, position) {\n        /** @type {?} */\n        var styles = /** @type {?} */ ({});\n        if (this._hasExactPosition()) {\n            /** @type {?} */\n            var scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        /** @type {?} */\n        var transformString = '';\n        /** @type {?} */\n        var offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        var offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += \"translateX(\" + offsetX + \"px) \";\n        }\n        if (offsetY) {\n            transformString += \"translateY(\" + offsetY + \"px)\";\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxHeight) {\n            styles.maxHeight = '';\n        }\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxWidth) {\n            styles.maxWidth = '';\n        }\n        extendStyles(this._pane.style, styles);\n    };\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayY = /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    function (position, originPoint, scrollPosition) {\n        /** @type {?} */\n        var styles = /** @type {?} */ ({ top: null, bottom: null });\n        /** @type {?} */\n        var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        var virtualKeyboardOffset = this._overlayContainer ?\n            this._overlayContainer.getContainerElement().getBoundingClientRect().top : 0;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            /** @type {?} */\n            var documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = documentHeight - (overlayPoint.y + this._overlayRect.height) + \"px\";\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    };\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayX = /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    function (position, originPoint, scrollPosition) {\n        /** @type {?} */\n        var styles = /** @type {?} */ ({ left: null, right: null });\n        /** @type {?} */\n        var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        var horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            var documentWidth = this._document.documentElement.clientWidth;\n            styles.right = documentWidth - (overlayPoint.x + this._overlayRect.width) + \"px\";\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getScrollVisibility = /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var originBounds = this._origin.getBoundingClientRect();\n        /** @type {?} */\n        var overlayBounds = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        var scrollContainerBounds = this.scrollables.map(function (scrollable) {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    };\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._subtractOverflows = /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    function (length) {\n        var overflows = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            overflows[_i - 1] = arguments[_i];\n        }\n        return overflows.reduce(function (currentValue, currentOverflow) {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    };\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getNarrowedViewportRect = /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var width = this._document.documentElement.clientWidth;\n        /** @type {?} */\n        var height = this._document.documentElement.clientHeight;\n        /** @type {?} */\n        var scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    };\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._isRtl = /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    function () {\n        return this._overlayRef.getDirection() === 'rtl';\n    };\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasExactPosition = /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @return {?}\n     */\n    function () {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    };\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOffset = /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    function (position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    };\n    /**\n     * Validates that the current position match the expected values.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._validatePositions = /**\n     * Validates that the current position match the expected values.\n     * @return {?}\n     */\n    function () {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach(function (pair) {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        });\n    };\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._addPanelClasses = /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    function (cssClasses) {\n        var _this = this;\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(function (cssClass) {\n                if (_this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    _this._appliedPanelClasses.push(cssClass);\n                    _this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    };\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._clearPanelClasses = /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(function (cssClass) { return _this._pane.classList.remove(cssClass); });\n            this._appliedPanelClasses = [];\n        }\n    };\n    return FlexibleConnectedPositionStrategy;\n}());\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 7.0.0\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 7.0.0\n */\nConnectedPositionStrategy = /** @class */ (function () {\n    function ConnectedPositionStrategy(originPos, overlayPos, connectedTo, viewportRuler, document, \n    // @breaking-change 7.0.0 `platform` parameter to be made required.\n    // @breaking-change 7.0.0 `platform` parameter to be made required.\n    platform) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy =\n            new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform)\n                .withFlexibleDimensions(false)\n                .withPush(false)\n                .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /** Whether the we're dealing with an RTL context */\n        get: /**\n         * Whether the we're dealing with an RTL context\n         * @return {?}\n         */\n        function () {\n            return this._overlayRef.getDirection() === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /** Emits an event when the connection point changes. */\n        get: /**\n         * Emits an event when the connection point changes.\n         * @return {?}\n         */\n        function () {\n            return this._positionStrategy.positionChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attach this position strategy to an overlay. */\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.attach = /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    };\n    /** Disposes all resources used by the position strategy. */\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.dispose = /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.dispose();\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.detach = /**\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.detach();\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.apply = /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.apply();\n    };\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.reapplyLastPosition();\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    function (scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    };\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    function (originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        var position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withDirection = /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    function (dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withLockedPosition = /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    function (isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    };\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withPositions = /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n    function (positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.setOrigin = /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    function (origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    };\n    return ConnectedPositionStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nGlobalPositionStrategy = /** @class */ (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.attach = /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        /** @type {?} */\n        var config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add('cdk-global-overlay-wrapper');\n    };\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.top = /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.left = /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.bottom = /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.right = /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 7.0.0\n     */\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.width = /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 7.0.0\n     */\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.height = /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerVertically = /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.apply = /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        var styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        var parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        var config = this._overlayRef.getConfig();\n        styles.position = this._cssPosition;\n        styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n        styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (config.width === '100%') {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n    };\n    /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * @docs-private\n     */\n    /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * \\@docs-private\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.dispose = /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { };\n    return GlobalPositionStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nvar OverlayPositionBuilder = /** @class */ (function () {\n    function OverlayPositionBuilder(_viewportRuler, _document, \n    // @breaking-change 7.0.0 `_platform` and `_overlayContainer` parameters to be made required.\n    _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.global = /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    function () {\n        return new GlobalPositionStrategy();\n    };\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 7.0.0\n     */\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 7.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.connectedTo = /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 7.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document);\n    };\n    /**\n     * Creates a flexible position strategy.\n     * @param elementRef\n     */\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.flexibleConnectedTo = /**\n     * Creates a flexible position strategy.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (elementRef) {\n        return new FlexibleConnectedPositionStrategy(elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    };\n    OverlayPositionBuilder.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayPositionBuilder.ctorParameters = function () { return [\n        { type: ViewportRuler },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform, decorators: [{ type: Optional }] },\n        { type: OverlayContainer, decorators: [{ type: Optional }] }\n    ]; };\n    /** @nocollapse */ OverlayPositionBuilder.ngInjectableDef = defineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(inject(ViewportRuler), inject(DOCUMENT), inject(Platform, 8), inject(OverlayContainer, 8)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n    return OverlayPositionBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Next overlay unique ID.\n  @type {?} */\nvar nextUniqueId = 0;\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nvar Overlay = /** @class */ (function () {\n    function Overlay(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    Overlay.prototype.create = /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    function (config) {\n        /** @type {?} */\n        var host = this._createHostElement();\n        /** @type {?} */\n        var pane = this._createPaneElement(host);\n        /** @type {?} */\n        var portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        var overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document);\n    };\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    Overlay.prototype.position = /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    function (host) {\n        /** @type {?} */\n        var pane = this._document.createElement('div');\n        pane.id = \"cdk-overlay-\" + nextUniqueId++;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    };\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @return {?} Newly-create host element.\n     */\n    Overlay.prototype._createHostElement = /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @return {?} Newly-create host element.\n     */\n    function () {\n        /** @type {?} */\n        var host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    };\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    Overlay.prototype._createPortalOutlet = /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    function (pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    };\n    Overlay.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Overlay.ctorParameters = function () { return [\n        { type: ScrollStrategyOptions },\n        { type: OverlayContainer },\n        { type: ComponentFactoryResolver },\n        { type: OverlayPositionBuilder },\n        { type: OverlayKeyboardDispatcher },\n        { type: Injector },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Directionality }\n    ]; };\n    return Overlay;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n  @type {?} */\nvar defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** *\n * Injection token that determines the scroll handling while the connected overlay is open.\n  @type {?} */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar CdkOverlayOrigin = /** @class */ (function () {\n    function CdkOverlayOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    CdkOverlayOrigin.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkOverlayOrigin.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return CdkOverlayOrigin;\n}());\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nvar CdkConnectedOverlay = /** @class */ (function () {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    function CdkConnectedOverlay(_overlay, templateRef, viewContainerRef, _scrollStrategy, _dir) {\n        this._overlay = _overlay;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = this._scrollStrategy();\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetX\", {\n        /** The offset in pixels for the overlay connection point on the x-axis */\n        get: /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         * @return {?}\n         */\n        function () { return this._offsetX; },\n        set: /**\n         * @param {?} offsetX\n         * @return {?}\n         */\n        function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._setPositions(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetY\", {\n        /** The offset in pixels for the overlay connection point on the y-axis */\n        get: /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         * @return {?}\n         */\n        function () { return this._offsetY; },\n        set: /**\n         * @param {?} offsetY\n         * @return {?}\n         */\n        function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._setPositions(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"hasBackdrop\", {\n        /** Whether or not the overlay should attach a backdrop. */\n        get: /**\n         * Whether or not the overlay should attach a backdrop.\n         * @return {?}\n         */\n        function () { return this._hasBackdrop; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._hasBackdrop = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"lockPosition\", {\n        /** Whether or not the overlay should be locked when scrolling. */\n        get: /**\n         * Whether or not the overlay should be locked when scrolling.\n         * @return {?}\n         */\n        function () { return this._lockPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._lockPosition = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"flexibleDimensions\", {\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        get: /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         * @return {?}\n         */\n        function () { return this._flexibleDimensions; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._flexibleDimensions = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"growAfterOpen\", {\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        get: /**\n         * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n         * @return {?}\n         */\n        function () { return this._growAfterOpen; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._growAfterOpen = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"push\", {\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        get: /**\n         * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n         * @return {?}\n         */\n        function () { return this._push; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._push = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"overlayRef\", {\n        /** The associated overlay reference. */\n        get: /**\n         * The associated overlay reference.\n         * @return {?}\n         */\n        function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"dir\", {\n        /** The element's layout direction. */\n        get: /**\n         * The element's layout direction.\n         * @return {?}\n         */\n        function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyOverlay();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._position) {\n            if (changes['positions']) {\n                this._position.withPositions(this.positions);\n            }\n            if (changes['lockPosition']) {\n                this._position.withLockedPosition(this.lockPosition);\n            }\n            if (changes['origin']) {\n                this._position.setOrigin(this.origin.elementRef);\n                if (this.open) {\n                    this._position.apply();\n                }\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    };\n    /**\n     * Creates an overlay\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createOverlay = /**\n     * Creates an overlay\n     * @return {?}\n     */\n    function () {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n    };\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._buildConfig = /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var positionStrategy = this._position = this._createPositionStrategy();\n        /** @type {?} */\n        var overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy: positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    };\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createPositionStrategy = /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var strategy = this._overlay.position()\n            .flexibleConnectedTo(this.origin.elementRef)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition);\n        this._setPositions(strategy);\n        strategy.positionChanges.subscribe(function (p) { return _this.positionChange.emit(p); });\n        return strategy;\n    };\n    /**\n     * Sets the primary and fallback positions of a positions strategy,\n     * based on the current directive inputs.\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._setPositions = /**\n     * Sets the primary and fallback positions of a positions strategy,\n     * based on the current directive inputs.\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    function (positionStrategy) {\n        var _this = this;\n        /** @type {?} */\n        var positions = this.positions.map(function (pos) { return ({\n            originX: pos.originX,\n            originY: pos.originY,\n            overlayX: pos.overlayX,\n            overlayY: pos.overlayY,\n            offsetX: pos.offsetX || _this.offsetX,\n            offsetY: pos.offsetY || _this.offsetY\n        }); });\n        positionStrategy.withPositions(positions);\n    };\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._attachOverlay = /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay(); /** @type {?} */\n            ((this._overlayRef)).keydownEvents().subscribe(function (event) {\n                _this.overlayKeydown.next(event);\n                if (event.keyCode === ESCAPE) {\n                    _this._detachOverlay();\n                }\n            });\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function (event) {\n                _this.backdropClick.emit(event);\n            });\n        }\n    };\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._detachOverlay = /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._destroyOverlay = /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    CdkConnectedOverlay.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkConnectedOverlay.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: TemplateRef },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    CdkConnectedOverlay.propDecorators = {\n        origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n        positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n        offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n        offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n        width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n        height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n        minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n        minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n        backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n        panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n        viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n        scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n        open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n        hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n        lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n        flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n        growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n        push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n        backdropClick: [{ type: Output }],\n        positionChange: [{ type: Output }],\n        attach: [{ type: Output }],\n        detach: [{ type: Output }],\n        overlayKeydown: [{ type: Output }]\n    };\n    return CdkConnectedOverlay;\n}());\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/** *\n * \\@docs-private\n  @type {?} */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar OverlayModule = /** @class */ (function () {\n    function OverlayModule() {\n    }\n    OverlayModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [\n                        Overlay,\n                        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                    ],\n                },] },\n    ];\n    return OverlayModule;\n}());\n/** *\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 7.0.0\n  @type {?} */\nvar OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    VIEWPORT_RULER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nvar FullscreenOverlayContainer = /** @class */ (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer(_document) {\n        return _super.call(this, _document) || this;\n    }\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._createContainer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype._createContainer.call(this);\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        var fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        var parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        /** @type {?} */\n        var eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._getEventName = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._fullScreenEventName) {\n            if (this._document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (this._document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if ((/** @type {?} */ (this._document)).mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if ((/** @type {?} */ (this._document)).msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    function () {\n        return this._document.fullscreenElement ||\n            this._document.webkitFullscreenElement ||\n            (/** @type {?} */ (this._document)).mozFullScreenElement ||\n            (/** @type {?} */ (this._document)).msFullscreenElement ||\n            null;\n    };\n    FullscreenOverlayContainer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FullscreenOverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { Overlay, OverlayContainer, CdkOverlayOrigin, CdkConnectedOverlay, FullscreenOverlayContainer, OverlayRef, OverlayKeyboardDispatcher, OverlayPositionBuilder, GlobalPositionStrategy, ConnectedPositionStrategy, FlexibleConnectedPositionStrategy, OverlayConfig, validateVerticalPosition, validateHorizontalPosition, ConnectionPositionPair, ScrollingVisibility, ConnectedOverlayPositionChange, ScrollStrategyOptions, RepositionScrollStrategy, CloseScrollStrategy, NoopScrollStrategy, BlockScrollStrategy, OverlayModule, OVERLAY_PROVIDERS, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd };\n//# sourceMappingURL=overlay.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { __assign } from 'tslib';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Inject, InjectionToken, Input, NgZone, Optional, ViewContainerRef, ViewEncapsulation, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by MatTooltip.\n  @type {?} */\nvar matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Time in ms to throttle repositioning after scroll events.\n  @type {?} */\nvar SCROLL_THROTTLE_MS = 20;\n/** *\n * CSS class that will be attached to the overlay panel.\n  @type {?} */\nvar TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(\"Tooltip position \\\"\" + position + \"\\\" is invalid.\");\n}\n/** *\n * Injection token that determines the scroll handling while a tooltip is visible.\n  @type {?} */\nvar MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }); };\n}\n/** *\n * \\@docs-private\n  @type {?} */\nvar MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** *\n * Injection token to be used to override the default options for `matTooltip`.\n  @type {?} */\nvar MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nvar MatTooltip = /** @class */ (function () {\n    function MatTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, _scrollStrategy, _dir, _defaultOptions) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        this._message = '';\n        this._manualListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /** @type {?} */\n        var element = _elementRef.nativeElement;\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!_platform.IOS && !_platform.ANDROID) {\n            this._manualListeners\n                .set('mouseenter', function () { return _this.show(); })\n                .set('mouseleave', function () { return _this.hide(); })\n                .forEach(function (listener, event) { return element.addEventListener(event, listener); });\n        }\n        if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n            // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n            // will add some inline styles by default, including `user-select: none`. This is\n            // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n            // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n            // behavior for text fields, we always clear the `user-select` to avoid such issues.\n            element.style.webkitUserSelect = element.style.userSelect = element.style.msUserSelect = '';\n        }\n        // Hammer applies `-webkit-user-drag: none` on all elements by default,\n        // which breaks the native drag&drop. If the consumer explicitly made\n        // the element draggable, clear the `-webkit-user-drag`.\n        if (element.draggable && element.style['webkitUserDrag'] === 'none') {\n            element.style['webkitUserDrag'] = '';\n        }\n        _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(function (origin) {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run(function () { return _this.hide(0); });\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run(function () { return _this.show(); });\n            }\n        });\n    }\n    Object.defineProperty(MatTooltip.prototype, \"position\", {\n        /** Allows the user to define the position of the tooltip relative to the parent element */\n        get: /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                if (this._overlayRef) {\n                    this._updatePosition();\n                    if (this._tooltipInstance) {\n                        /** @type {?} */ ((this._tooltipInstance)).show(0);\n                    }\n                    this._overlayRef.updatePosition();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"disabled\", {\n        /** Disables the display of the tooltip. */\n        get: /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"message\", {\n        /** The message to be displayed in the tooltip */\n        get: /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */\n        function () { return this._message; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n            // If the message is not a string (e.g. number), convert it to a string and trim it.\n            this._message = value != null ? (\"\" + value).trim() : '';\n            if (!this._message && this._isTooltipVisible()) {\n                this.hide(0);\n            }\n            else {\n                this._updateTooltipMessage();\n                this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"tooltipClass\", {\n        /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n        get: /**\n         * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n         * @return {?}\n         */\n        function () { return this._tooltipClass; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._tooltipClass = value;\n            if (this._tooltipInstance) {\n                this._setTooltipClass(this._tooltipClass);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MatTooltip.prototype.ngOnDestroy = /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        if (!this._platform.IOS) {\n            this._manualListeners.forEach(function (listener, event) {\n                return _this._elementRef.nativeElement.removeEventListener(event, listener);\n            });\n            this._manualListeners.clear();\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.show = /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.showDelay; }\n        if (this.disabled || !this.message) {\n            return;\n        }\n        /** @type {?} */\n        var overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () { return _this._detach(); });\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage(); /** @type {?} */\n        ((this._tooltipInstance)).show(delay);\n    };\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.hide = /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        if (delay === void 0) { delay = this.hideDelay; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /** Shows/hides the tooltip */\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MatTooltip.prototype.toggle = /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /** Returns true if the tooltip is currently visible to the user */\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MatTooltip.prototype._isTooltipVisible = /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    function () {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /** Handles the keydown events on the host element. */\n    /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    MatTooltip.prototype._handleKeydown = /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n            e.stopPropagation();\n            this.hide(0);\n        }\n    };\n    /** Handles the touchend events on the host element. */\n    /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    MatTooltip.prototype._handleTouchend = /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    function () {\n        this.hide(this._defaultOptions.touchendHideDelay);\n    };\n    /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    MatTooltip.prototype._createOverlay = /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        var strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8);\n        /** @type {?} */\n        var scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this._elementRef);\n        strategy.withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(function (change) {\n            if (_this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && _this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    _this._ngZone.run(function () { return _this.hide(0); });\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () { return _this._detach(); });\n        return this._overlayRef;\n    };\n    /**\n     * Detaches the currently-attached tooltip.\n     * @return {?}\n     */\n    MatTooltip.prototype._detach = /**\n     * Detaches the currently-attached tooltip.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    };\n    /**\n     * Updates the position of the current tooltip.\n     * @return {?}\n     */\n    MatTooltip.prototype._updatePosition = /**\n     * Updates the position of the current tooltip.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = /** @type {?} */ (((this._overlayRef)).getConfig().positionStrategy);\n        /** @type {?} */\n        var origin = this._getOrigin();\n        /** @type {?} */\n        var overlay = this._getOverlayPosition();\n        position.withPositions([\n            __assign({}, origin.main, overlay.main),\n            __assign({}, origin.fallback, overlay.fallback)\n        ]);\n    };\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    MatTooltip.prototype._getOrigin = /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        var position = this.position;\n        /** @type {?} */\n        var originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        var _a = this._invertPosition(originPosition.originX, originPosition.originY), x = _a.x, y = _a.y;\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    };\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    MatTooltip.prototype._getOverlayPosition = /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        var position = this.position;\n        /** @type {?} */\n        var overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        var _a = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY), x = _a.x, y = _a.y;\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    };\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n    MatTooltip.prototype._updateTooltipMessage = /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe(function () {\n                if (_this._tooltipInstance) {\n                    /** @type {?} */ ((_this._overlayRef)).updatePosition();\n                }\n            });\n        }\n    };\n    /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    MatTooltip.prototype._setTooltipClass = /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    function (tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    };\n    /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    MatTooltip.prototype._invertPosition = /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    function (x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x: x, y: y };\n    };\n    MatTooltip.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        '(longpress)': 'show()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(touchend)': '_handleTouchend()',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTooltip.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: ViewContainerRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: AriaDescriber },\n        { type: FocusMonitor },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatTooltip.propDecorators = {\n        position: [{ type: Input, args: ['matTooltipPosition',] }],\n        disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n        showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n        hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n        message: [{ type: Input, args: ['matTooltip',] }],\n        tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n    };\n    return MatTooltip;\n}());\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = /** @class */ (function () {\n    function TooltipComponent(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(function () {\n            _this._visibility = 'visible';\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    function () {\n        return this._onHide.asObservable();\n    };\n    /** Whether the tooltip is being displayed. */\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    function () {\n        return this._visibility === 'visible';\n    };\n    /**\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationStart = /**\n     * @return {?}\n     */\n    function () {\n        this._closeOnInteraction = false;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationDone = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var toState = /** @type {?} */ (event.toState);\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    TooltipComponent.prototype._markForCheck = /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    function () {\n        this._changeDetectorRef.markForCheck();\n    };\n    TooltipComponent.decorators = [\n        { type: Component, args: [{selector: 'mat-tooltip-component',\n                    template: \"<div class=\\\"mat-tooltip\\\" [ngClass]=\\\"tooltipClass\\\" [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\" [@state]=\\\"_visibility\\\" (@state.start)=\\\"_animationStart()\\\" (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\",\n                    styles: [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTooltipAnimations.tooltipState],\n                    host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                        '(body:click)': 'this._handleBodyInteraction()',\n                        'aria-hidden': 'true',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    TooltipComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: BreakpointObserver }\n    ]; };\n    return TooltipComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatTooltipModule = /** @class */ (function () {\n    function MatTooltipModule() {\n    }\n    MatTooltipModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        A11yModule,\n                        CommonModule,\n                        OverlayModule,\n                        MatCommonModule,\n                    ],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    entryComponents: [TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n                },] },\n    ];\n    return MatTooltipModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatTooltipModule, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltip, TooltipComponent, matTooltipAnimations };\n//# sourceMappingURL=tooltip.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, defineInjectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = defineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach(function (_, element) { return _this._cleanupObserver(element); });\n    };\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        var _this = this;\n        /** @type {?} */\n        var element = elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n        return Observable.create(function (observer) {\n            /** @type {?} */\n            var stream = _this._observeElement(element);\n            /** @type {?} */\n            var subscription = stream.subscribe(observer);\n            return function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            };\n        });\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            var stream_1 = new Subject();\n            /** @type {?} */\n            var observer = this._mutationObserverFactory.create(function (mutations) { return stream_1.next(mutations); });\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            /** @type {?} */ ((this._observedElements.get(element))).count++;\n        }\n        return /** @type {?} */ ((this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            /** @type {?} */ ((this._observedElements.get(element))).count--;\n            if (!/** @type {?} */ ((this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = /** @type {?} */ ((this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory }\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = defineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(inject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         */\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._disabled ? this._unsubscribe() : this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        /** Debounce interval for emitting the changes. */\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        /** @type {?} */\n        var stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    CdkObserveContent.propDecorators = {\n        event: [{ type: Output, args: ['cdkObserveContent',] }],\n        disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n        debounce: [{ type: Input }]\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n  @type {?} */\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /** @class */ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            /** @type {?} */\n            var bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            var htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            var value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Directionality.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Directionality.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Directionality.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ Directionality.ngInjectableDef = defineInjectable({ factory: function Directionality_Factory() { return new Directionality(inject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n    return Directionality;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /** @class */ (function () {\n    function Dir() {\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._dir; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var old = this._dir;\n            this._dir = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    Dir.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Dir.decorators = [\n        { type: Directive, args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[dir]': 'dir' },\n                    exportAs: 'dir',\n                },] },\n    ];\n    Dir.propDecorators = {\n        change: [{ type: Output, args: ['dirChange',] }],\n        dir: [{ type: Input }]\n    };\n    return Dir;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar BidiModule = /** @class */ (function () {\n    function BidiModule() {\n    }\n    BidiModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                },] },\n    ];\n    return BidiModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, InjectionToken, EventEmitter, Output, NgModule, defineInjectable, inject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { Platform, supportsPassiveEventListeners, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * IDs are deliminated by an empty space, as per the spec.\n  @type {?} */\nvar ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    var ids = getAriaReferenceIds(el, attr);\n    if (ids.some(function (existingId) { return existingId.trim() == id.trim(); })) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    var ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    var filteredIds = ids.filter(function (val) { return val != id.trim(); });\n    el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * ID used for the body container where all messages are appended.\n  @type {?} */\nvar MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** *\n * ID prefix used for each created message element.\n  @type {?} */\nvar CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** *\n * Attribute given to each host element that is described by a message element.\n  @type {?} */\nvar CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** *\n * Global incremental identifier for each registered message element.\n  @type {?} */\nvar nextId = 0;\n/** *\n * Global map of all registered message elements that have been placed into the document.\n  @type {?} */\nvar messageRegistry = new Map();\n/** *\n * Container for all registered messages.\n  @type {?} */\nvar messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n * \\@docs-private\n */\nvar AriaDescriber = /** @class */ (function () {\n    function AriaDescriber(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.describe = /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    };\n    /** Removes the host element's aria-describedby reference to the message element. */\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.removeDescription = /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n            this._deleteMessageElement(message);\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    };\n    /** Unregisters all created message elements and removes the message container. */\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    AriaDescriber.prototype.ngOnDestroy = /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var describedElements = this._document.querySelectorAll(\"[\" + CDK_DESCRIBEDBY_HOST_ATTRIBUTE + \"]\");\n        for (var i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    };\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessageElement = /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        /** @type {?} */\n        var messageElement = this._document.createElement('div');\n        messageElement.setAttribute('id', CDK_DESCRIBEDBY_ID_PREFIX + \"-\" + nextId++);\n        messageElement.appendChild(/** @type {?} */ ((this._document.createTextNode(message))));\n        this._createMessagesContainer(); /** @type {?} */\n        ((messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement: messageElement, referenceCount: 0 });\n    };\n    /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessageElement = /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        var messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    };\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessagesContainer = /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n    function () {\n        if (!messagesContainer) {\n            /** @type {?} */\n            var preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                /** @type {?} */ ((preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    };\n    /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessagesContainer = /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n    function () {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    };\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeCdkDescribedByReferenceIds = /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(function (id) { return id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0; });\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    };\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._addMessageReference = /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var registeredMessage = /** @type {?} */ ((messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    };\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeMessageReference = /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var registeredMessage = /** @type {?} */ ((messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    };\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._isElementDescribedByMessage = /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        /** @type {?} */\n        var referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        var registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        var messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    };\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._canBeDescribed = /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        return element.nodeType === this._document.ELEMENT_NODE && message != null &&\n            !!(\"\" + message).trim();\n    };\n    AriaDescriber.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    AriaDescriber.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ AriaDescriber.ngInjectableDef = defineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(inject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n    return AriaDescriber;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        /** @type {?} */ (DOCUMENT)\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// unsupported: template constraints.\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nvar  \n// unsupported: template constraints.\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nListKeyManager = /** @class */ (function () {\n    function ListKeyManager(_items) {\n        var _this = this;\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = function (item) { return item.disabled; };\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe(function (newItems) {\n                if (_this._activeItem) {\n                    /** @type {?} */\n                    var itemArray = newItems.toArray();\n                    /** @type {?} */\n                    var newIndex = itemArray.indexOf(_this._activeItem);\n                    if (newIndex > -1 && newIndex !== _this._activeItemIndex) {\n                        _this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n    ListKeyManager.prototype.skipPredicate = /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n    function (predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    };\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withWrap = /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {?}\n     */\n    function (shouldWrap) {\n        if (shouldWrap === void 0) { shouldWrap = true; }\n        this._wrap = shouldWrap;\n        return this;\n    };\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withVerticalOrientation = /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n    function (enabled) {\n        if (enabled === void 0) { enabled = true; }\n        this._vertical = enabled;\n        return this;\n    };\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withHorizontalOrientation = /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n    function (direction) {\n        this._horizontal = direction;\n        return this;\n    };\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withTypeAhead = /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n    function (debounceInterval) {\n        var _this = this;\n        if (debounceInterval === void 0) { debounceInterval = 200; }\n        if (this._items.length && this._items.some(function (item) { return typeof item.getLabel !== 'function'; })) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(function (keyCode) { return _this._pressedLetters.push(keyCode); }), debounceTime(debounceInterval), filter(function () { return _this._pressedLetters.length > 0; }), map(function () { return _this._pressedLetters.join(''); })).subscribe(function (inputString) {\n            /** @type {?} */\n            var items = _this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (var i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                var index = (_this._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                var item = items[index];\n                if (!_this._skipPredicateFn(item) && /** @type {?} */ ((item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    _this.setActiveItem(index);\n                    break;\n                }\n            }\n            _this._pressedLetters = [];\n        });\n        return this;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else if (this._horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else if (this._horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                }\n                else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this._letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /** Index of the currently active item. */\n        get: /**\n         * Index of the currently active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /** The active item. */\n        get: /**\n         * The active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the active item to the first enabled item in the list. */\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(0, 1);\n    };\n    /** Sets the active item to the last enabled item in the list. */\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    };\n    /** Sets the active item to the next enabled item in the list. */\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    };\n    /** Sets the active item to a previous enabled item in the list. */\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var itemArray = this._getItemsArray();\n        /** @type {?} */\n        var index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        this._activeItemIndex = index;\n        this._activeItem = itemArray[index];\n    };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param index The new activeItemIndex.\n     * @deprecated Use `updateActiveItem` instead.\n     * @breaking-change 7.0.0\n     */\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 7.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@breaking-change 7.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    function (index) {\n        this.updateActiveItem(index);\n    };\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        /** @type {?} */\n        var items = this._getItemsArray();\n        for (var i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            var index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            var item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    function (index, fallbackDelta) {\n        /** @type {?} */\n        var items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    };\n    /**\n     * Returns the items as an array.\n     * @return {?}\n     */\n    ListKeyManager.prototype._getItemsArray = /**\n     * Returns the items as an array.\n     * @return {?}\n     */\n    function () {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    };\n    return ListKeyManager;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nActiveDescendantKeyManager = /** @class */ (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    function ActiveDescendantKeyManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        _super.prototype.setActiveItem.call(this, index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nFocusKeyManager = /** @class */ (function (_super) {\n    __extends(FocusKeyManager, _super);\n    function FocusKeyManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._origin = 'program';\n        return _this;\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setFocusOrigin = /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n    function (origin) {\n        this._origin = origin;\n        return this;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        _super.prototype.setActiveItem.call(this, item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    };\n    return FocusKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = /** @class */ (function () {\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    function (element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    function (element) {\n        // Nothing is tabbable on the the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        var frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            var frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        var nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        var tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is focusable.\n     */\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    InteractivityChecker.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    InteractivityChecker.ctorParameters = function () { return [\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ InteractivityChecker.ngInjectableDef = defineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(inject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n    return InteractivityChecker;\n}());\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return /** @type {?} */ (window.frameElement);\n    }\n    catch (e) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    var nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    var tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    /** @type {?} */\n    var tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    var nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    var inputType = nodeName === 'input' && (/** @type {?} */ (element)).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    return node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nvar  /**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nFocusTrap = /** @class */ (function () {\n    function FocusTrap(_element, _checker, _ngZone, _document, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this._enabled; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._enabled = val;\n            if (this._startAnchor && this._endAnchor) {\n                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Destroys the focus trap by cleaning up the anchors. */\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    function () {\n        if (this._startAnchor && this._startAnchor.parentNode) {\n            this._startAnchor.parentNode.removeChild(this._startAnchor);\n        }\n        if (this._endAnchor && this._endAnchor.parentNode) {\n            this._endAnchor.parentNode.removeChild(this._endAnchor);\n        }\n        this._startAnchor = this._endAnchor = null;\n    };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    FocusTrap.prototype.attachAnchors = /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    function () {\n        var _this = this;\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(function () {\n            if (!_this._startAnchor) {\n                _this._startAnchor = _this._createAnchor(); /** @type {?} */\n                ((_this._startAnchor)).addEventListener('focus', function () { return _this.focusLastTabbableElement(); });\n            }\n            if (!_this._endAnchor) {\n                _this._endAnchor = _this._createAnchor(); /** @type {?} */\n                ((_this._endAnchor)).addEventListener('focus', function () { return _this.focusFirstTabbableElement(); });\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(/** @type {?} */ ((this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore(/** @type {?} */ ((this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    };\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElementWhenReady = /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusInitialElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusFirstTabbableElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusLastTabbableElement()); });\n        });\n    };\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    FocusTrap.prototype._getRegionBoundary = /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    function (bound) {\n        /** @type {?} */\n        var markers = /** @type {?} */ (this._element.querySelectorAll(\"[cdk-focus-region-\" + bound + \"], \" +\n            (\"[cdkFocusRegion\" + bound + \"], \") +\n            (\"[cdk-focus-\" + bound + \"]\")));\n        for (var i = 0; i < markers.length; i++) {\n            // @breaking-change 7.0.0\n            if (markers[i].hasAttribute(\"cdk-focus-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated \") +\n                    \"attribute will be removed in 7.0.0.\", markers[i]);\n            }\n            else if (markers[i].hasAttribute(\"cdk-focus-region-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-region-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated attribute \") +\n                    \"will be removed in 7.0.0.\", markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    };\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElement = /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        /** @type {?} */\n        var redirectToElement = /** @type {?} */ (this._element.querySelector(\"[cdk-focus-initial], \" +\n            \"[cdkFocusInitial]\"));\n        if (redirectToElement) {\n            // @breaking-change 7.0.0\n            if (redirectToElement.hasAttribute(\"cdk-focus-initial\")) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-initial', \" +\n                    \"use 'cdkFocusInitial' instead. The deprecated attribute \" +\n                    \"will be removed in 7.0.0\", redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        /** @type {?} */\n        var redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElement = /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        /** @type {?} */\n        var redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     */\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    FocusTrap.prototype.hasAttached = /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    function () {\n        return this._hasAttached;\n    };\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        /** @type {?} */\n        var children = root.children || root.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            /** @type {?} */\n            var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        /** @type {?} */\n        var children = root.children || root.childNodes;\n        for (var i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var anchor = this._document.createElement('div');\n        anchor.tabIndex = this._enabled ? 0 : -1;\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        return anchor;\n    };\n    /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n    FocusTrap.prototype._executeOnStable = /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = /** @class */ (function () {\n    function FocusTrapFactory(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    FocusTrapFactory.prototype.create = /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    function (element, deferCaptureElements) {\n        if (deferCaptureElements === void 0) { deferCaptureElements = false; }\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    };\n    FocusTrapFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusTrapFactory.ctorParameters = function () { return [\n        { type: InteractivityChecker },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ FocusTrapFactory.ngInjectableDef = defineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(inject(InteractivityChecker), inject(NgZone), inject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n    return FocusTrapFactory;\n}());\n/**\n * Directive for trapping focus within a region.\n */\nvar CdkTrapFocus = /** @class */ (function () {\n    function CdkTrapFocus(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(CdkTrapFocus.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this.focusTrap.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTrapFocus.prototype, \"autoCapture\", {\n        /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         */\n        get: /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         * @return {?}\n         */\n        function () { return this._autoCapture; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._autoCapture = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = /** @type {?} */ (this._document.activeElement);\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    };\n    CdkTrapFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTrapFocus.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusTrapFactory },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    CdkTrapFocus.propDecorators = {\n        enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n        autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n    };\n    return CdkTrapFocus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar LiveAnnouncer = /** @class */ (function () {\n    function LiveAnnouncer(elementToken, _document) {\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * Announces a message to screenreaders.\n     * @param message Message to be announced to the screenreader\n     * @param politeness The politeness of the announcer element\n     * @returns Promise that will be resolved when the message is added to the DOM.\n     */\n    /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n    LiveAnnouncer.prototype.announce = /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n    function (message, politeness) {\n        var _this = this;\n        if (politeness === void 0) { politeness = 'polite'; }\n        this._liveElement.textContent = '';\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                _this._liveElement.textContent = message;\n                resolve();\n            }, 100);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        var previousElements = this._document.getElementsByClassName(elementClass);\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (var i = 0; i < previousElements.length; i++) {\n            /** @type {?} */ ((previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        /** @type {?} */\n        var liveEl = this._document.createElement('div');\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    LiveAnnouncer.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    LiveAnnouncer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ LiveAnnouncer.ngInjectableDef = defineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(inject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), inject(DOCUMENT)); }, token: LiveAnnouncer, providedIn: \"root\" });\n    return LiveAnnouncer;\n}());\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nvar CdkAriaLive = /** @class */ (function () {\n    function CdkAriaLive(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    Object.defineProperty(CdkAriaLive.prototype, \"politeness\", {\n        /** The aria-live politeness level to use when announcing messages. */\n        get: /**\n         * The aria-live politeness level to use when announcing messages.\n         * @return {?}\n         */\n        function () { return this._politeness; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n            if (this._politeness === 'off') {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                    this._subscription = null;\n                }\n            }\n            else if (!this._subscription) {\n                this._subscription = this._ngZone.runOutsideAngular(function () {\n                    return _this._contentObserver\n                        .observe(_this._elementRef)\n                        .subscribe(function () {\n                        /** @type {?} */\n                        var element = _this._elementRef.nativeElement;\n                        _this._liveAnnouncer.announce(element.textContent, _this._politeness);\n                    });\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkAriaLive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    };\n    CdkAriaLive.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkAriaLive.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: LiveAnnouncer },\n        { type: ContentObserver },\n        { type: NgZone }\n    ]; };\n    CdkAriaLive.propDecorators = {\n        politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n    };\n    return CdkAriaLive;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} _document\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement, _document) {\n    return parentDispatcher || new LiveAnnouncer(liveElement, _document);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar TOUCH_BUFFER_MS = 650;\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusMonitor = /** @class */ (function () {\n    function FocusMonitor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * A map of global objects to lists of current listeners.\n         */\n        this._unregisterGlobalListeners = function () { };\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    FocusMonitor.prototype.monitor = /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    function (element, checkChildren) {\n        var _this = this;\n        if (checkChildren === void 0) { checkChildren = false; }\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        var nativeElement = this._getNativeElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            var cachedInfo = this._elementInfo.get(nativeElement); /** @type {?} */\n            ((cachedInfo)).checkChildren = checkChildren;\n            return /** @type {?} */ ((cachedInfo)).subject.asObservable();\n        }\n        /** @type {?} */\n        var info = {\n            unlisten: function () { },\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        /** @type {?} */\n        var focusListener = function (event) { return _this._onFocus(event, nativeElement); };\n        /** @type {?} */\n        var blurListener = function (event) { return _this._onBlur(event, nativeElement); };\n        this._ngZone.runOutsideAngular(function () {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        });\n        // Create an unlisten function for later.\n        info.unlisten = function () {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        };\n        return info.subject.asObservable();\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    FocusMonitor.prototype.stopMonitoring = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var nativeElement = this._getNativeElement(element);\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    FocusMonitor.prototype.focusVia = /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    function (element, origin, options) {\n        /** @type {?} */\n        var nativeElement = this._getNativeElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            (/** @type {?} */ (nativeElement)).focus(options);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._elementInfo.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n    };\n    /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    FocusMonitor.prototype._registerGlobalListeners = /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        var documentKeydownListener = function () {\n            _this._lastTouchTarget = null;\n            _this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /** @type {?} */\n        var documentMousedownListener = function () {\n            if (!_this._lastTouchTarget) {\n                _this._setOriginForCurrentEventQueue('mouse');\n            }\n        };\n        /** @type {?} */\n        var documentTouchstartListener = function (event) {\n            if (_this._touchTimeoutId != null) {\n                clearTimeout(_this._touchTimeoutId);\n            }\n            _this._lastTouchTarget = event.target;\n            _this._touchTimeoutId = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n        };\n        /** @type {?} */\n        var windowFocusListener = function () {\n            _this._windowFocused = true;\n            _this._windowFocusTimeoutId = setTimeout(function () { return _this._windowFocused = false; });\n        };\n        // Note: we listen to events in the capture phase so we can detect them even if the user stops\n        // propagation.\n        this._ngZone.runOutsideAngular(function () {\n            document.addEventListener('keydown', documentKeydownListener, true);\n            document.addEventListener('mousedown', documentMousedownListener, true);\n            document.addEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true, capture: true })) : true);\n            window.addEventListener('focus', windowFocusListener);\n        });\n        this._unregisterGlobalListeners = function () {\n            document.removeEventListener('keydown', documentKeydownListener, true);\n            document.removeEventListener('mousedown', documentMousedownListener, true);\n            document.removeEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true, capture: true })) : true);\n            window.removeEventListener('focus', windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(_this._windowFocusTimeoutId);\n            clearTimeout(_this._touchTimeoutId);\n            clearTimeout(_this._originTimeoutId);\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    FocusMonitor.prototype._toggleClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    function (element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setClasses = /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    function (element, origin) {\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setOriginForCurrentEventQueue = /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    function (origin) {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            _this._originTimeoutId = setTimeout(function () { return _this._origin = null; }, 1);\n        });\n    };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusMonitor.prototype._wasCausedByTouch = /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    function (event) {\n        /** @type {?} */\n        var focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    };\n    /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onFocus = /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        /** @type {?} */\n        var origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    };\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onBlur = /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        /** @type {?} */\n        var elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    };\n    /**\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    FocusMonitor.prototype._emitOrigin = /**\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    function (subject, origin) {\n        this._ngZone.run(function () { return subject.next(origin); });\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._incrementMonitoredElementCount = /**\n     * @return {?}\n     */\n    function () {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1) {\n            this._registerGlobalListeners();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._decrementMonitoredElementCount = /**\n     * @return {?}\n     */\n    function () {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            this._unregisterGlobalListeners();\n            this._unregisterGlobalListeners = function () { };\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    FocusMonitor.prototype._getNativeElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        return element instanceof ElementRef ? element.nativeElement : element;\n    };\n    FocusMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusMonitor.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ FocusMonitor.ngInjectableDef = defineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(inject(NgZone), inject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n    return FocusMonitor;\n}());\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = /** @class */ (function () {\n    function CdkMonitorFocus(_elementRef, _focusMonitor) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    };\n    CdkMonitorFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkMonitorFocus.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor }\n    ]; };\n    CdkMonitorFocus.propDecorators = {\n        cdkFocusChange: [{ type: Output }]\n    };\n    return CdkMonitorFocus;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/** *\n * \\@docs-private \\@deprecated \\@breaking-change 7.0.0\n  @type {?} */\nvar FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar A11yModule = /** @class */ (function () {\n    function A11yModule() {\n    }\n    A11yModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, PlatformModule, ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                },] },\n    ];\n    return A11yModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { ARIA_DESCRIBER_PROVIDER_FACTORY, MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LIVE_ANNOUNCER_PROVIDER_FACTORY, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, LIVE_ANNOUNCER_ELEMENT_TOKEN, FOCUS_MONITOR_PROVIDER_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __extends, __assign } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nvar AnimationCurves = /** @class */ (function () {\n    function AnimationCurves() {\n    }\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    return AnimationCurves;\n}());\n/**\n * \\@docs-private\n */\nvar AnimationDurations = /** @class */ (function () {\n    function AnimationDurations() {\n    }\n    AnimationDurations.COMPLEX = '375ms';\n    AnimationDurations.ENTERING = '225ms';\n    AnimationDurations.EXITING = '195ms';\n    return AnimationDurations;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that configures whether the Material sanity checks are enabled.\n  @type {?} */\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nvar MatCommonModule = /** @class */ (function () {\n    function MatCommonModule(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    MatCommonModule.prototype._areChecksEnabled = /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    function () {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    };\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    MatCommonModule.prototype._isTestEnv = /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    function () {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\n     * @return {?}\n     */\n    function () {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkThemeIsPresent = /**\n     * @return {?}\n     */\n    function () {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (this._document && this._document.body && typeof getComputedStyle === 'function') {\n            /** @type {?} */\n            var testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            /** @type {?} */\n            var computedStyle = getComputedStyle(testElement);\n            // In some situations the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    };\n    /** Checks whether HammerJS is available. */\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    function () {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !this._window['Hammer']) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    };\n    MatCommonModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                },] },\n    ];\n    /** @nocollapse */\n    MatCommonModule.ctorParameters = function () { return [\n        { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] }\n    ]; };\n    return MatCommonModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disabled = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._disabled; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disabled = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            // Set the default color that can be specified from the mixin.\n            // Set the default color that can be specified from the mixin.\n            _this.color = defaultColor;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"color\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._color; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                /** @type {?} */\n                var colorPalette = value || defaultColor;\n                if (colorPalette !== this._color) {\n                    if (this._color) {\n                        this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\n                    }\n                    if (colorPalette) {\n                        this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\n                    }\n                    this._color = colorPalette;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disableRipple = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: /**\n             * Whether the ripple effect is disabled or not.\n             * @return {?}\n             */\n            function () { return this._disableRipple; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disableRipple = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex) {\n    if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._tabIndex = defaultTabIndex;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this.disabled ? -1 : this._tabIndex; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\n                this._tabIndex = value != null ? value : defaultTabIndex;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether the component is in an error state.\n             */\n            _this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            _this.stateChanges = new Subject();\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        class_1.prototype.updateErrorState = /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var oldState = this.errorState;\n            /** @type {?} */\n            var parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            var control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n            /** @type {?} */\n            var newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        };\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            _this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            _this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            _this.initialized = new Observable(function (subscriber) {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (_this._isInitialized) {\n                    _this._notifySubscriber(subscriber);\n                }\n                else {\n                    /** @type {?} */ ((_this._pendingSubscribers)).push(subscriber);\n                }\n            });\n            return _this;\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        class_1.prototype._markInitialized = /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true; /** @type {?} */\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        };\n        /** Emits and completes the subscriber stream (should only emit once). */\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        class_1.prototype._notifySubscriber = /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        function (subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        };\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken for datepicker that can be used to override default locale code.\n  @type {?} */\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** *\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 7.0.0\n  @type {?} */\nvar MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nvar  /**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nDateAdapter = /** @class */ (function () {\n    function DateAdapter() {\n        this._localeChanges = new Subject();\n    }\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\n        /** A stream that emits when the locale changes. */\n        get: /**\n         * A stream that emits when the locale changes.\n         * @return {?}\n         */\n        function () { return this._localeChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    DateAdapter.prototype.deserialize = /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    function (value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    };\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    DateAdapter.prototype.setLocale = /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    function (locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    };\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    DateAdapter.prototype.compareDate = /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    function (first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    };\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    DateAdapter.prototype.sameDate = /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    function (first, second) {\n        if (first && second) {\n            /** @type {?} */\n            var firstValid = this.isValid(first);\n            /** @type {?} */\n            var secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    };\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    DateAdapter.prototype.clampDate = /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    function (date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    };\n    return DateAdapter;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Whether the browser supports the Intl API.\n  @type {?} */\nvar SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/** *\n * The default month names to use if Intl API is not available.\n  @type {?} */\nvar DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nvar ɵ0 = function (i) { return String(i + 1); };\n/** *\n * The default date names to use if Intl API is not available.\n  @type {?} */\nvar DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** *\n * The default day of the week names to use if Intl API is not available.\n  @type {?} */\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/** *\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n  @type {?} */\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    var valuesArray = Array(length);\n    for (var i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nvar NativeDateAdapter = /** @class */ (function (_super) {\n    __extends(NativeDateAdapter, _super);\n    function NativeDateAdapter(matDateLocale, platform) {\n        var _this = _super.call(this) || this;\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        _this.useUtcForDisplay = true;\n        _super.prototype.setLocale.call(_this, matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        // IE does its own time zone correction, so we disable this on IE.\n        _this.useUtcForDisplay = !platform.TRIDENT;\n        _this._clampDate = platform.TRIDENT || platform.EDGE;\n        return _this;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYear = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getFullYear();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getMonth();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDate = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDate();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeek = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDay();\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonthNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            var dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, function (i) {\n                return _this._stripDirectionalityCharacters(_this._format(dtf_1, new Date(2017, i, 1)));\n            });\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDateNames = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            var dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, function (i) { return _this._stripDirectionalityCharacters(_this._format(dtf_2, new Date(2017, 0, i + 1))); });\n        }\n        return DEFAULT_DATE_NAMES;\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            var dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, function (i) { return _this._stripDirectionalityCharacters(_this._format(dtf_3, new Date(2017, 0, i + 1))); });\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYearName = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            var dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\n     * @return {?}\n     */\n    function () {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.clone = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.createDate = /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n        }\n        if (date < 1) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n        }\n        /** @type {?} */\n        var result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.today = /**\n     * @return {?}\n     */\n    function () {\n        return new Date();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.parse = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    };\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.format = /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    function (date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = __assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    };\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarYears = /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    function (date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    };\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarMonths = /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    function (date, months) {\n        /** @type {?} */\n        var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    };\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarDays = /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    function (date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.toIso8601 = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    };\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.deserialize = /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                var date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return _super.prototype.deserialize.call(this, value);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isDateInstance = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        return obj instanceof Date;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return !isNaN(date.getTime());\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.invalid = /**\n     * @return {?}\n     */\n    function () {\n        return new Date(NaN);\n    };\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        /** @type {?} */\n        var result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    };\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    NativeDateAdapter.prototype._2digit = /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    function (n) {\n        return ('00' + n).slice(-2);\n    };\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    function (str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    };\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    NativeDateAdapter.prototype._format = /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    function (dtf, date) {\n        /** @type {?} */\n        var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    };\n    NativeDateAdapter.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NativeDateAdapter.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n        { type: Platform }\n    ]; };\n    return NativeDateAdapter;\n}(DateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nvar MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar NativeDateModule = /** @class */ (function () {\n    function NativeDateModule() {\n    }\n    NativeDateModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [PlatformModule],\n                    providers: [\n                        { provide: DateAdapter, useClass: NativeDateAdapter },\n                    ],\n                },] },\n    ];\n    return NativeDateModule;\n}());\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nvar MatNativeDateModule = /** @class */ (function () {\n    function MatNativeDateModule() {\n    }\n    MatNativeDateModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n                },] },\n    ];\n    return MatNativeDateModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nvar ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\n    function ShowOnDirtyErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    };\n    ShowOnDirtyErrorStateMatcher.decorators = [\n        { type: Injectable },\n    ];\n    return ShowOnDirtyErrorStateMatcher;\n}());\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nvar ErrorStateMatcher = /** @class */ (function () {\n    function ErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    };\n    ErrorStateMatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n    return ErrorStateMatcher;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n  @type {?} */\nvar MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nvar ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nvar ɵ0$2 = function () { }, ɵ1 = function () { };\n/** *\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n  @type {?} */\nvar noopHammerInstance = {\n    on: ɵ0$2,\n    off: ɵ1,\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nvar GestureConfig = /** @class */ (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig(_hammerOptions, commonModule) {\n        var _this = _super.call(this) || this;\n        _this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        _this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param element Element to which to assign the new HammerJS gestures.\n     * @returns Newly-created HammerJS instance.\n     */\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    function (element) {\n        /** @type {?} */\n        var hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 7.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        var mc = new hammer(element, this._hammerOptions || undefined);\n        /** @type {?} */\n        var pan = new hammer.Pan();\n        /** @type {?} */\n        var swipe = new hammer.Swipe();\n        /** @type {?} */\n        var press = new hammer.Press();\n        /** @type {?} */\n        var slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        var longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        /** @type {?} */\n        var recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    GestureConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    GestureConfig.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n        { type: MatCommonModule, decorators: [{ type: Optional }] }\n    ]; };\n    return GestureConfig;\n}(HammerGestureConfig));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nvar MatLine = /** @class */ (function () {\n    function MatLine() {\n    }\n    MatLine.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' }\n                },] },\n    ];\n    return MatLine;\n}());\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar  /**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nMatLineSetter = /** @class */ (function () {\n    function MatLineSetter(_lines, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MatLineSetter.prototype._setLineClass = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"mat-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"mat-multi-line\", true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatLineSetter.prototype._resetClasses = /**\n     * @return {?}\n     */\n    function () {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    };\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatLineSetter.prototype._setClass = /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (className, isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        }\n        else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    };\n    return MatLineSetter;\n}());\nvar MatLineModule = /** @class */ (function () {\n    function MatLineModule() {\n    }\n    MatLineModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                },] },\n    ];\n    return MatLineModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nvar  /**\n * Reference to a previously launched ripple element.\n */\nRippleRef = /** @class */ (function () {\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /** Fades out the ripple element. */\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    function () {\n        this._renderer.fadeOutRipple(this);\n    };\n    return RippleRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n  @type {?} */\nvar defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/** *\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n  @type {?} */\nvar ignoreMouseEventsTimeout = 800;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar  /**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nRippleRenderer = /** @class */ (function () {\n    function RippleRenderer(_target, _ngZone, elementRef, platform) {\n        var _this = this;\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Options that apply to all the event listeners that are bound by the renderer.\n         */\n        this._eventOptions = supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true })) : false;\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = function (event) {\n            /** @type {?} */\n            var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            var isSyntheticEvent = _this._lastTouchStartEvent &&\n                Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!_this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                _this._isPointerDown = true;\n                _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = function (event) {\n            if (!_this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                _this._lastTouchStartEvent = Date.now();\n                _this._isPointerDown = true;\n                /** @type {?} */\n                var touches = event.changedTouches;\n                for (var i = 0; i < touches.length; i++) {\n                    _this.fadeInRipple(touches[i].clientX, touches[i].clientY, _this._target.rippleConfig);\n                }\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = function () {\n            if (!_this._isPointerDown) {\n                return;\n            }\n            _this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            // Fade-out all ripples that are visible and not persistent.\n            _this._activeRipples.forEach(function (ripple) {\n                /** @type {?} */\n                var isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this.onMousedown)\n                .set('mouseup', this.onPointerUp)\n                .set('mouseleave', this.onPointerUp)\n                .set('touchstart', this.onTouchStart)\n                .set('touchend', this.onPointerUp)\n                .set('touchcancel', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    function (x, y, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        /** @type {?} */\n        var containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        var animationConfig = __assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        var offsetX = x - containerRect.left;\n        /** @type {?} */\n        var offsetY = y - containerRect.top;\n        /** @type {?} */\n        var duration = animationConfig.enterDuration / (config.speedFactor || 1);\n        /** @type {?} */\n        var ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = offsetX - radius + \"px\";\n        ripple.style.top = offsetY - radius + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.width = radius * 2 + \"px\";\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = duration + \"ms\";\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        /** @type {?} */\n        var rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(function () {\n            /** @type {?} */\n            var isMostRecentTransientRipple = rippleRef === _this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !_this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    };\n    /** Fades out a ripple reference. */\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    function (rippleRef) {\n        /** @type {?} */\n        var wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        var rippleEl = rippleRef.element;\n        /** @type {?} */\n        var animationConfig = __assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    };\n    /** Fades out all currently active ripples. */\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    function () {\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n    };\n    /** Sets up the trigger event listeners */\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setupTriggerEvents = /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular(function () {\n            _this._triggerEvents.forEach(function (fn, type) {\n                return element.addEventListener(type, fn, _this._eventOptions);\n            });\n        });\n        this._triggerElement = element;\n    };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (fn, delay) {\n        if (delay === void 0) { delay = 0; }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    /** Removes previously registered event listeners from the trigger element. */\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    RippleRenderer.prototype._removeTriggerEvents = /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._triggerElement) {\n            this._triggerEvents.forEach(function (fn, type) {\n                /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn, _this._eventOptions);\n            });\n        }\n    };\n    return RippleRenderer;\n}());\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to specify the global ripple options.\n  @type {?} */\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nvar MatRipple = /** @class */ (function () {\n    function MatRipple(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         * @deprecated Use the [matRippleAnimation] binding instead.\n         * \\@breaking-change 7.0.0\n         */\n        this.speedFactor = 1;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    Object.defineProperty(MatRipple.prototype, \"disabled\", {\n        /**\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\n         * by using the `launch()` method.\n         */\n        get: /**\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\n         * by using the `launch()` method.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = value;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"trigger\", {\n        /**\n         * The element that triggers the ripple when click events are received.\n         * Defaults to the directive's host element.\n         */\n        get: /**\n         * The element that triggers the ripple when click events are received.\n         * Defaults to the directive's host element.\n         * @return {?}\n         */\n        function () { return this._trigger || this._elementRef.nativeElement; },\n        set: /**\n         * @param {?} trigger\n         * @return {?}\n         */\n        function (trigger) {\n            this._trigger = trigger;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    };\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer._removeTriggerEvents();\n    };\n    /** Fades out all currently showing ripple elements. */\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MatRipple.prototype.fadeOutAll = /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer.fadeOutAll();\n    };\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\n        /**\n         * Ripple configuration from the directive's input values.\n         * @docs-private Implemented as part of RippleTarget\n         */\n        get: /**\n         * Ripple configuration from the directive's input values.\n         * \\@docs-private Implemented as part of RippleTarget\n         * @return {?}\n         */\n        function () {\n            return {\n                centered: this.centered,\n                radius: this.radius,\n                color: this.color,\n                animation: __assign({}, this._globalOptions.animation, this.animation),\n                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples on pointer-down are disabled or not.\n         * @docs-private Implemented as part of RippleTarget\n         */\n        get: /**\n         * Whether ripples on pointer-down are disabled or not.\n         * \\@docs-private Implemented as part of RippleTarget\n         * @return {?}\n         */\n        function () {\n            return this.disabled || !!this._globalOptions.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    MatRipple.prototype._setupTriggerEventsIfEnabled = /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    };\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    MatRipple.prototype.launch = /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    function (configOrX, y, config) {\n        if (y === void 0) { y = 0; }\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, __assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, __assign({}, this.rippleConfig, configOrX));\n        }\n    };\n    MatRipple.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatRipple.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatRipple.propDecorators = {\n        color: [{ type: Input, args: ['matRippleColor',] }],\n        unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n        centered: [{ type: Input, args: ['matRippleCentered',] }],\n        radius: [{ type: Input, args: ['matRippleRadius',] }],\n        speedFactor: [{ type: Input, args: ['matRippleSpeedFactor',] }],\n        animation: [{ type: Input, args: ['matRippleAnimation',] }],\n        disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n        trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n    };\n    return MatRipple;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatRippleModule = /** @class */ (function () {\n    function MatRippleModule() {\n    }\n    MatRippleModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule, PlatformModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                },] },\n    ];\n    return MatRippleModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MatPseudoCheckbox = /** @class */ (function () {\n    function MatPseudoCheckbox(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n    MatPseudoCheckbox.decorators = [\n        { type: Component, args: [{encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'mat-pseudo-checkbox',\n                    styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate{opacity:.5}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n                    template: '',\n                    host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatPseudoCheckbox.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatPseudoCheckbox.propDecorators = {\n        state: [{ type: Input }],\n        disabled: [{ type: Input }]\n    };\n    return MatPseudoCheckbox;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatPseudoCheckboxModule = /** @class */ (function () {\n    function MatPseudoCheckboxModule() {\n    }\n    MatPseudoCheckboxModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox]\n                },] },\n    ];\n    return MatPseudoCheckboxModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatOptgroupBase = /** @class */ (function () {\n    function MatOptgroupBase() {\n    }\n    return MatOptgroupBase;\n}());\n/** @type {?} */\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n/** @type {?} */\nvar _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nvar MatOptgroup = /** @class */ (function (_super) {\n    __extends(MatOptgroup, _super);\n    function MatOptgroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Unique id for the underlying label.\n         */\n        _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\n        return _this;\n    }\n    MatOptgroup.decorators = [\n        { type: Component, args: [{selector: 'mat-optgroup',\n                    exportAs: 'matOptgroup',\n                    template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['disabled'],\n                    styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                    host: {\n                        'class': 'mat-optgroup',\n                        'role': 'group',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-labelledby]': '_labelId',\n                    }\n                },] },\n    ];\n    MatOptgroup.propDecorators = {\n        label: [{ type: Input }]\n    };\n    return MatOptgroup;\n}(_MatOptgroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n  @type {?} */\nvar _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nvar  /**\n * Event object emitted by MatOption when selected or deselected.\n */\nMatOptionSelectionChange = /** @class */ (function () {\n    function MatOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MatOptionSelectionChange;\n}());\n/** *\n * Injection token used to provide the parent component to options.\n  @type {?} */\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nvar MatOption = /** @class */ (function () {\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = \"mat-option-\" + _uniqueIdCounter++;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\n        /** Whether the wrapping component is in multiple selection mode. */\n        get: /**\n         * Whether the wrapping component is in multiple selection mode.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.multiple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"selected\", {\n        /** Whether or not the option is currently selected. */\n        get: /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\n        /** Whether the option is disabled. */\n        get: /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        function () { return (this.group && this.group.disabled) || this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\n        /** Whether ripples for the option are disabled. */\n        get: /**\n         * Whether ripples for the option are disabled.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.disableRipple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         */\n        get: /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */\n        function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         */\n        get: /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */\n        function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return (this._getHostElement().textContent || '').trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Selects the option. */\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MatOption.prototype.select = /**\n     * Selects the option.\n     * @return {?}\n     */\n    function () {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    };\n    /** Deselects the option. */\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MatOption.prototype.deselect = /**\n     * Deselects the option.\n     * @return {?}\n     */\n    function () {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    };\n    /** Sets focus onto this option. */\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MatOption.prototype.focus = /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setActiveStyles = /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setInactiveStyles = /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatOption.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    function () {\n        return this.viewValue;\n    };\n    /** Ensures the option is selected when activated from the keyboard. */\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MatOption.prototype._handleKeydown = /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    };\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    MatOption.prototype._selectViaInteraction = /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    };\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MatOption.prototype._getTabIndex = /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Gets the host DOM element. */\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    MatOption.prototype._getHostElement = /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MatOption.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            var viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatOption.prototype._emitSelectionChangeEvent = /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    };\n    MatOption.decorators = [\n        { type: Component, args: [{selector: 'mat-option',\n                    exportAs: 'matOption',\n                    host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': 'selected.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option',\n                    },\n                    styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                    template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatOption.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n        { type: MatOptgroup, decorators: [{ type: Optional }] }\n    ]; };\n    MatOption.propDecorators = {\n        value: [{ type: Input }],\n        id: [{ type: Input }],\n        disabled: [{ type: Input }],\n        onSelectionChange: [{ type: Output }]\n    };\n    return MatOption;\n}());\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        var optionsArray = options.toArray();\n        /** @type {?} */\n        var groups = optionGroups.toArray();\n        /** @type {?} */\n        var groupCounter = 0;\n        for (var i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    var optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatOptionModule = /** @class */ (function () {\n    function MatOptionModule() {\n    }\n    MatOptionModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup]\n                },] },\n    ];\n    return MatOptionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken that can be used to specify the global label options.\n  @type {?} */\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar JAN = 0;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar FEB = 1;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar MAR = 2;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar APR = 3;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar MAY = 4;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar JUN = 5;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar JUL = 6;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar AUG = 7;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar SEP = 8;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar OCT = 9;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar NOV = 10;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nvar DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n//# sourceMappingURL=core.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tooltip\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/overlay\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/cdk/a11y\";\nimport * as i8 from \"@angular/cdk/portal\";\nimport * as i9 from \"@angular/cdk/scrolling\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/cdk/layout\";\nvar MatTooltipModuleNgFactory = i0.ɵcmf(i1.MatTooltipModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(4608, i4.Overlay, i4.Overlay, [i4.ScrollStrategyOptions, i4.OverlayContainer, i0.ComponentFactoryResolver, i4.OverlayPositionBuilder, i4.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i2.DOCUMENT, i5.Directionality]), i0.ɵmpd(5120, i4.ɵc, i4.ɵd, [i4.Overlay]), i0.ɵmpd(5120, i1.MAT_TOOLTIP_SCROLL_STRATEGY, i1.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i4.Overlay]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i6.PlatformModule, i6.PlatformModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i7.A11yModule, i7.A11yModule, []), i0.ɵmpd(1073742336, i5.BidiModule, i5.BidiModule, []), i0.ɵmpd(1073742336, i8.PortalModule, i8.PortalModule, []), i0.ɵmpd(1073742336, i9.ScrollingModule, i9.ScrollingModule, []), i0.ɵmpd(1073742336, i4.OverlayModule, i4.OverlayModule, []), i0.ɵmpd(1073742336, i10.MatCommonModule, i10.MatCommonModule, [[2, i10.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i1.MatTooltipModule, i1.MatTooltipModule, [])]); });\nexport { MatTooltipModuleNgFactory as MatTooltipModuleNgFactory };\nvar styles_TooltipComponent = [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"];\nvar RenderType_TooltipComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TooltipComponent, data: { \"animation\": [{ type: 7, name: \"state\", definitions: [{ type: 0, name: \"initial, void, hidden\", styles: { type: 6, styles: { opacity: 0, transform: \"scale(0)\" }, offset: null }, options: undefined }, { type: 0, name: \"visible\", styles: { type: 6, styles: { transform: \"scale(1)\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => visible\", animation: { type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 0, transform: \"scale(0)\", offset: 0 }, offset: null }, { type: 6, styles: { opacity: 0.5, transform: \"scale(0.99)\", offset: 0.5 }, offset: null }, { type: 6, styles: { opacity: 1, transform: \"scale(1)\", offset: 1 }, offset: null }] }, timings: \"200ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }, { type: 1, expr: \"* => hidden\", animation: { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: \"100ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }], options: {} }] } });\nexport { RenderType_TooltipComponent as RenderType_TooltipComponent };\nexport function View_TooltipComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"mat-tooltip\"]], [[2, \"mat-tooltip-handset\", null], [24, \"@state\", 0]], [[null, \"@state.start\"], [null, \"@state.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@state.start\" === en)) {\n        var pd_0 = (_co._animationStart() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@state.done\" === en)) {\n        var pd_1 = (_co._animationDone($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i2.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵted(3, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"mat-tooltip\"; var currVal_3 = _co.tooltipClass; _ck(_v, 1, 0, currVal_2, currVal_3); }, function (_ck, _v) { var _co = _v.component; var tmp_0_0 = null; var currVal_0 = (((tmp_0_0 = i0.ɵunv(_v, 0, 0, i0.ɵnov(_v, 2).transform(_co._isHandset))) == null) ? null : tmp_0_0.matches); var currVal_1 = _co._visibility; _ck(_v, 0, 0, currVal_0, currVal_1); var currVal_4 = _co.message; _ck(_v, 3, 0, currVal_4); }); }\nexport function View_TooltipComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tooltip-component\", [[\"aria-hidden\", \"true\"]], [[4, \"zoom\", null]], [[\"body\", \"click\"]], function (_v, en, $event) { var ad = true; if ((\"body:click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._handleBodyInteraction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_TooltipComponent_0, RenderType_TooltipComponent)), i0.ɵdid(1, 49152, null, 0, i1.TooltipComponent, [i0.ChangeDetectorRef, i11.BreakpointObserver], null, null)], null, function (_ck, _v) { var currVal_0 = ((i0.ɵnov(_v, 1)._visibility === \"visible\") ? 1 : null); _ck(_v, 0, 0, currVal_0); }); }\nvar TooltipComponentNgFactory = i0.ɵccf(\"mat-tooltip-component\", i1.TooltipComponent, View_TooltipComponent_Host_0, {}, {}, []);\nexport { TooltipComponentNgFactory as TooltipComponentNgFactory };\n","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Platform } from '@angular/cdk/platform';\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatRipple, mixinColor, mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n  @type {?} */\nvar DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/** *\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n  @type {?} */\nvar BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatButtonBase = /** @class */ (function () {\n    function MatButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatButtonBase;\n}());\n/** @type {?} */\nvar _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nvar MatButton = /** @class */ (function (_super) {\n    __extends(MatButton, _super);\n    function MatButton(elementRef, _platform, _focusMonitor, \n    // @breaking-change 7.0.0 `_animationMode` parameter to be made required.\n    _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._platform = _platform;\n        _this._focusMonitor = _focusMonitor;\n        _this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        _this.isIconButton = _this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is prevent in the button's host\n        // attributes, add the correct corresponding class.\n        for (var _i = 0, BUTTON_HOST_ATTRIBUTES_1 = BUTTON_HOST_ATTRIBUTES; _i < BUTTON_HOST_ATTRIBUTES_1.length; _i++) {\n            var attr = BUTTON_HOST_ATTRIBUTES_1[_i];\n            if (_this._hasHostAttributes(attr)) {\n                (/** @type {?} */ (elementRef.nativeElement)).classList.add(attr);\n            }\n        }\n        _this._focusMonitor.monitor(_this._elementRef, true);\n        if (_this.isRoundButton) {\n            _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MatButton.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n    function () {\n        this._getHostElement().focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._getHostElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /** Gets whether the button has one of the given attributes. */\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    MatButton.prototype._hasHostAttributes = /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var attributes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            attributes[_i] = arguments[_i];\n        }\n        return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n    };\n    MatButton.decorators = [\n        { type: Component, args: [{selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\",\n                    exportAs: 'matButton',\n                    host: {\n                        '[disabled]': 'disabled || null',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    },\n                    template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                    styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-focus-overlay{border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                    inputs: ['disabled', 'disableRipple', 'color'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatButton.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatButton.propDecorators = {\n        ripple: [{ type: ViewChild, args: [MatRipple,] }]\n    };\n    return MatButton;\n}(_MatButtonMixinBase));\n/**\n * Raised Material design button.\n */\nvar MatAnchor = /** @class */ (function (_super) {\n    __extends(MatAnchor, _super);\n    function MatAnchor(platform, focusMonitor, elementRef, \n    // @breaking-change 7.0.0 `animationMode` parameter to be made required.\n    animationMode) {\n        return _super.call(this, elementRef, platform, focusMonitor, animationMode) || this;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAnchor.prototype._haltDisabledEvents = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    MatAnchor.decorators = [\n        { type: Component, args: [{selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\",\n                    exportAs: 'matButton, matAnchor',\n                    host: {\n                        // Note that we ignore the user-specified tabindex when it's disabled for\n                        // consistency with the `mat-button` applied on native buttons where even\n                        // though they have an index, they're not tabbable.\n                        '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_haltDisabledEvents($event)',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    },\n                    inputs: ['disabled', 'disableRipple', 'color'],\n                    template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                    styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-focus-overlay{border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatAnchor.ctorParameters = function () { return [\n        { type: Platform },\n        { type: FocusMonitor },\n        { type: ElementRef },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatAnchor.propDecorators = {\n        tabIndex: [{ type: Input }]\n    };\n    return MatAnchor;\n}(MatButton));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatButtonModule = /** @class */ (function () {\n    function MatButtonModule() {\n    }\n    MatButtonModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                    ],\n                    exports: [\n                        MatButton,\n                        MatAnchor,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatButton,\n                        MatAnchor,\n                    ],\n                },] },\n    ];\n    return MatButtonModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatButtonModule, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor };\n//# sourceMappingURL=button.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/bidi\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/cdk/platform\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"@angular/cdk/a11y\";\nvar MatButtonModuleNgFactory = i0.ɵcmf(i1.MatButtonModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.BidiModule, i3.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i5.PlatformModule, i5.PlatformModule, []), i0.ɵmpd(1073742336, i4.MatRippleModule, i4.MatRippleModule, []), i0.ɵmpd(1073742336, i1.MatButtonModule, i1.MatButtonModule, [])]); });\nexport { MatButtonModuleNgFactory as MatButtonModuleNgFactory };\nvar styles_MatButton = [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-focus-overlay{border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatButton = i0.ɵcrt({ encapsulation: 2, styles: styles_MatButton, data: {} });\nexport { RenderType_MatButton as RenderType_MatButton };\nexport function View_MatButton_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i4.MatRipple, [i0.ElementRef, i0.NgZone, i5.Platform, [2, i4.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i6.ANIMATION_MODULE_TYPE]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.isRoundButton || _co.isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatButton_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"button\", [[\"mat-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, View_MatButton_0, RenderType_MatButton)), i0.ɵdid(1, 180224, null, 0, i1.MatButton, [i0.ElementRef, i5.Platform, i7.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled || null); var currVal_1 = (i0.ɵnov(_v, 1)._animationMode === \"NoopAnimations\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatButtonNgFactory = i0.ɵccf(\"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", i1.MatButton, View_MatButton_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, {}, [\"*\"]);\nexport { MatButtonNgFactory as MatButtonNgFactory };\nvar styles_MatAnchor = [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media (hover:none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple.mat-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-focus-overlay{border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"];\nvar RenderType_MatAnchor = i0.ɵcrt({ encapsulation: 2, styles: styles_MatAnchor, data: {} });\nexport { RenderType_MatAnchor as RenderType_MatAnchor };\nexport function View_MatAnchor_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { ripple: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"mat-button-wrapper\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"mat-button-ripple mat-ripple\"], [\"matRipple\", \"\"]], [[2, \"mat-button-ripple-round\", null], [2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(4, 212992, [[1, 4]], 0, i4.MatRipple, [i0.ElementRef, i0.NgZone, i5.Platform, [2, i4.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i6.ANIMATION_MODULE_TYPE]], { centered: [0, \"centered\"], disabled: [1, \"disabled\"], trigger: [2, \"trigger\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-button-focus-overlay\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.isIconButton; var currVal_3 = _co._isRippleDisabled(); var currVal_4 = _co._getHostElement(); _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.isRoundButton || _co.isIconButton); var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); }); }\nexport function View_MatAnchor_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"a\", [[\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_MatAnchor_0, RenderType_MatAnchor)), i0.ɵdid(1, 180224, null, 0, i1.MatAnchor, [i5.Platform, i7.FocusMonitor, i0.ElementRef, [2, i6.ANIMATION_MODULE_TYPE]], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).disabled ? (0 - 1) : (i0.ɵnov(_v, 1).tabIndex || 0)); var currVal_1 = (i0.ɵnov(_v, 1).disabled || null); var currVal_2 = i0.ɵnov(_v, 1).disabled.toString(); var currVal_3 = (i0.ɵnov(_v, 1)._animationMode === \"NoopAnimations\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nvar MatAnchorNgFactory = i0.ɵccf(\"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", i1.MatAnchor, View_MatAnchor_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, {}, [\"*\"]);\nexport { MatAnchorNgFactory as MatAnchorNgFactory };\n","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","import { Component, OnInit } from '@angular/core';\nimport * as Chartist from 'chartist';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n  startAnimationForLineChart(chart){\n      let seq: any, delays: any, durations: any;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n\n      chart.on('draw', function(data) {\n        if(data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if(data.type === 'point') {\n              seq++;\n              data.element.animate({\n                opacity: {\n                  begin: seq * delays,\n                  dur: durations,\n                  from: 0,\n                  to: 1,\n                  easing: 'ease'\n                }\n              });\n          }\n      });\n\n      seq = 0;\n  };\n  startAnimationForBarChart(chart){\n      let seq2: any, delays2: any, durations2: any;\n\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function(data) {\n        if(data.type === 'bar'){\n            seq2++;\n            data.element.animate({\n              opacity: {\n                begin: seq2 * delays2,\n                dur: durations2,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            });\n        }\n      });\n\n      seq2 = 0;\n  };\n  ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n\n      const dataDailySalesChart: any = {\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n          series: [\n              [12, 17, 7, 17, 23, 18, 38]\n          ]\n      };\n\n     const optionsDailySalesChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\n      }\n\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n\n      this.startAnimationForLineChart(dailySalesChart);\n\n\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      const dataCompletedTasksChart: any = {\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n          series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n          ]\n      };\n\n     const optionsCompletedTasksChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\n      }\n\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\n\n      // start animation for the Completed Tasks Chart - Line Chart\n      this.startAnimationForLineChart(completedTasksChart);\n\n\n\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      var datawebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n        ]\n      };\n      var optionswebsiteViewsChart = {\n          axisX: {\n              showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\n      };\n      var responsiveOptions: any[] = [\n        ['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function (value) {\n              return value[0];\n            }\n          }\n        }]\n      ];\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\n\n      //start animation for the Emails Subscription Chart\n      this.startAnimationForBarChart(websiteViewsChart);\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./dashboard.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/cdk/overlay\";\nimport * as i9 from \"@angular/cdk/scrolling\";\nimport * as i10 from \"@angular/cdk/bidi\";\nimport * as i11 from \"./dashboard.component\";\nvar styles_DashboardComponent = [i0.styles];\nvar RenderType_DashboardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_DashboardComponent, data: {} });\nexport { RenderType_DashboardComponent as RenderType_DashboardComponent };\nexport function View_DashboardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 386, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 385, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 62, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 17, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 16, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 9, \"div\", [[\"class\", \"card-header card-header-warning card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 2, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"content_copy\"])), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Used Space\"])), (_l()(), i1.ɵeld(11, 0, null, null, 3, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"49/50 \"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"GB\"])), (_l()(), i1.ɵeld(15, 0, null, null, 5, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 4, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(17, 0, null, null, 1, \"i\", [[\"class\", \"material-icons text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"warning\"])), (_l()(), i1.ɵeld(19, 0, null, null, 1, \"a\", [[\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Get More Space...\"])), (_l()(), i1.ɵeld(21, 0, null, null, 14, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(22, 0, null, null, 13, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(23, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-success card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(24, 0, null, null, 2, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(25, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"store\"])), (_l()(), i1.ɵeld(27, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Revenue\"])), (_l()(), i1.ɵeld(29, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$34,245\"])), (_l()(), i1.ɵeld(31, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(32, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(33, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"date_range\"])), (_l()(), i1.ɵted(-1, null, [\" Last 24 Hours \"])), (_l()(), i1.ɵeld(36, 0, null, null, 14, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(37, 0, null, null, 13, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(38, 0, null, null, 7, \"div\", [[\"class\", \"card-header card-header-danger card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(39, 0, null, null, 2, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(40, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"info_outline\"])), (_l()(), i1.ɵeld(42, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Fixed Issues\"])), (_l()(), i1.ɵeld(44, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"75\"])), (_l()(), i1.ɵeld(46, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(47, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(48, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"local_offer\"])), (_l()(), i1.ɵted(-1, null, [\" Tracked from Github \"])), (_l()(), i1.ɵeld(51, 0, null, null, 13, \"div\", [[\"class\", \"col-lg-3 col-md-6 col-sm-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(52, 0, null, null, 12, \"div\", [[\"class\", \"card card-stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(53, 0, null, null, 6, \"div\", [[\"class\", \"card-header card-header-info card-header-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(54, 0, null, null, 1, \"div\", [[\"class\", \"card-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(55, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-twitter\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(56, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Followers\"])), (_l()(), i1.ɵeld(58, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"+245\"])), (_l()(), i1.ɵeld(60, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(61, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(62, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"update\"])), (_l()(), i1.ɵted(-1, null, [\" Just Updated \"])), (_l()(), i1.ɵeld(65, 0, null, null, 45, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(66, 0, null, null, 16, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(67, 0, null, null, 15, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(68, 0, null, null, 1, \"div\", [[\"class\", \"card-header card-header-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(69, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"dailySalesChart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(70, 0, null, null, 7, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(71, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Daily Sales\"])), (_l()(), i1.ɵeld(73, 0, null, null, 4, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(74, 0, null, null, 2, \"span\", [[\"class\", \"text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(75, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-long-arrow-up\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 55% \"])), (_l()(), i1.ɵted(-1, null, [\" increase in today sales.\"])), (_l()(), i1.ɵeld(78, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(79, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(80, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" updated 4 minutes ago \"])), (_l()(), i1.ɵeld(83, 0, null, null, 13, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(84, 0, null, null, 12, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(85, 0, null, null, 1, \"div\", [[\"class\", \"card-header card-header-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(86, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"websiteViewsChart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(87, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(88, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Email Subscriptions\"])), (_l()(), i1.ɵeld(90, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Last Campaign Performance\"])), (_l()(), i1.ɵeld(92, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(93, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(94, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" campaign sent 2 days ago \"])), (_l()(), i1.ɵeld(97, 0, null, null, 13, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(98, 0, null, null, 12, \"div\", [[\"class\", \"card card-chart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(99, 0, null, null, 1, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(100, 0, null, null, 0, \"div\", [[\"class\", \"ct-chart\"], [\"id\", \"completedTasksChart\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(101, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(102, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Completed Tasks\"])), (_l()(), i1.ɵeld(104, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Last Campaign Performance\"])), (_l()(), i1.ɵeld(106, 0, null, null, 4, \"div\", [[\"class\", \"card-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(107, 0, null, null, 3, \"div\", [[\"class\", \"stats\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(108, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"access_time\"])), (_l()(), i1.ɵted(-1, null, [\" campaign sent 2 days ago \"])), (_l()(), i1.ɵeld(111, 0, null, null, 275, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(112, 0, null, null, 219, \"div\", [[\"class\", \"col-lg-6 col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(113, 0, null, null, 218, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(114, 0, null, null, 26, \"div\", [[\"class\", \"card-header card-header-tabs card-header-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(115, 0, null, null, 25, \"div\", [[\"class\", \"nav-tabs-navigation\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(116, 0, null, null, 24, \"div\", [[\"class\", \"nav-tabs-wrapper\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(117, 0, null, null, 1, \"span\", [[\"class\", \"nav-tabs-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Tasks:\"])), (_l()(), i1.ɵeld(119, 0, null, null, 21, \"ul\", [[\"class\", \"nav nav-tabs\"], [\"data-tabs\", \"tabs\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(120, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(121, 0, null, null, 5, \"a\", [[\"class\", \"nav-link active\"], [\"data-toggle\", \"tab\"], [\"href\", \"#profile\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 122)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(122, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(123, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"bug_report\"])), (_l()(), i1.ɵted(-1, 0, [\" Bugs \"])), (_l()(), i1.ɵeld(126, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(127, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(128, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"data-toggle\", \"tab\"], [\"href\", \"#messages\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 129)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(129, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(130, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"code\"])), (_l()(), i1.ɵted(-1, 0, [\" Website \"])), (_l()(), i1.ɵeld(133, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(134, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(135, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"data-toggle\", \"tab\"], [\"href\", \"#settings\"], [\"mat-button\", \"\"]], [[1, \"tabindex\", 0], [1, \"disabled\", 0], [1, \"aria-disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 136)._haltDisabledEvents($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatAnchor_0, i2.RenderType_MatAnchor)), i1.ɵdid(136, 180224, null, 0, i3.MatAnchor, [i4.Platform, i5.FocusMonitor, i1.ElementRef, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(137, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"cloud\"])), (_l()(), i1.ɵted(-1, 0, [\" Server \"])), (_l()(), i1.ɵeld(140, 0, null, 0, 0, \"div\", [[\"class\", \"ripple-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(141, 0, null, null, 190, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(142, 0, null, null, 189, \"div\", [[\"class\", \"tab-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(143, 0, null, null, 82, \"div\", [[\"class\", \"tab-pane active\"], [\"id\", \"profile\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(144, 0, null, null, 81, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(145, 0, null, null, 80, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(146, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(147, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(148, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(149, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(150, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(151, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(152, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(153, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵeld(155, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(156, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 158).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 158)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 158)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(157, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(158, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(159, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(161, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 163).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 163)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 163)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(162, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(163, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(164, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(166, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(167, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(168, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(169, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(170, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(171, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(172, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(173, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lines From Great Russian Literature? Or E-mails From My Boss?\"])), (_l()(), i1.ɵeld(175, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(176, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 178).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 178)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 178)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(177, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(178, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(179, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(181, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 183).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 183)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 183)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(182, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(183, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(184, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(186, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(187, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(188, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(189, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(190, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(191, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(192, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(193, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit \"])), (_l()(), i1.ɵeld(195, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(196, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 198).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 198)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 198)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(197, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(198, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(199, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(201, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 203).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 203)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 203)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(202, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(203, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(204, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(206, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(207, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(208, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(209, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(210, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(211, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(212, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(213, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Create 4 Invisible User Experiences you Never Knew About\"])), (_l()(), i1.ɵeld(215, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(216, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 218).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 218)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 218)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(217, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(218, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(219, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(221, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 223).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 223)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 223)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(222, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(223, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(224, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(226, 0, null, null, 42, \"div\", [[\"class\", \"tab-pane\"], [\"id\", \"messages\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(227, 0, null, null, 41, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(228, 0, null, null, 40, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(229, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(230, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(231, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(232, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(233, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(234, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(235, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(236, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit \"])), (_l()(), i1.ɵeld(238, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(239, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 241).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 241)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 241)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(240, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(241, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(242, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(244, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 246).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 246)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 246)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(245, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(246, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(247, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(249, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(250, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(251, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(252, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(253, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(254, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(255, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(256, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵeld(258, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(259, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 261).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 261)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 261)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(260, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(261, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(262, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(264, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 266).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 266)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 266)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(265, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(266, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(267, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(269, 0, null, null, 62, \"div\", [[\"class\", \"tab-pane\"], [\"id\", \"settings\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(270, 0, null, null, 61, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(271, 0, null, null, 60, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(272, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(273, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(274, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(275, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(276, 0, null, null, 0, \"input\", [[\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(277, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(278, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(279, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lines From Great Russian Literature? Or E-mails From My Boss?\"])), (_l()(), i1.ɵeld(281, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(282, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 284).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 284)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 284)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(283, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(284, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(285, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(287, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 289).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 289)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 289)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(288, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(289, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(290, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(292, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(293, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(294, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(295, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(296, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(297, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(298, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(299, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit \"])), (_l()(), i1.ɵeld(301, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(302, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 304).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 304)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 304)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(303, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(304, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(305, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(307, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 309).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 309)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 309)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(308, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(309, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(310, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(312, 0, null, null, 19, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(313, 0, null, null, 5, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(314, 0, null, null, 4, \"div\", [[\"class\", \"form-check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(315, 0, null, null, 3, \"label\", [[\"class\", \"form-check-label\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(316, 0, null, null, 0, \"input\", [[\"checked\", \"\"], [\"class\", \"form-check-input\"], [\"type\", \"checkbox\"], [\"value\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(317, 0, null, null, 1, \"span\", [[\"class\", \"form-check-sign\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(318, 0, null, null, 0, \"span\", [[\"class\", \"check\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(319, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sign contract for \\\"What are conference organizers afraid of?\\\"\"])), (_l()(), i1.ɵeld(321, 0, null, null, 10, \"td\", [[\"class\", \"td-actions text-right\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(322, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-primary btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Edit Task\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 324).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 324)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 324)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(323, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(324, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(325, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"edit\"])), (_l()(), i1.ɵeld(327, 16777216, null, null, 4, \"button\", [[\"class\", \"btn btn-danger btn-link btn-sm btn-just-icon\"], [\"mat-raised-button\", \"\"], [\"matTooltip\", \"Remove\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"longpress\"], [null, \"keydown\"], [null, \"touchend\"]], function (_v, en, $event) { var ad = true; if ((\"longpress\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 329).show() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 329)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"touchend\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 329)._handleTouchend() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(328, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), i1.ɵdid(329, 147456, null, 0, i7.MatTooltip, [i8.Overlay, i1.ElementRef, i9.ScrollDispatcher, i1.ViewContainerRef, i1.NgZone, i4.Platform, i5.AriaDescriber, i5.FocusMonitor, i7.MAT_TOOLTIP_SCROLL_STRATEGY, [2, i10.Directionality], [2, i7.MAT_TOOLTIP_DEFAULT_OPTIONS]], { position: [0, \"position\"], message: [1, \"message\"] }, null), (_l()(), i1.ɵeld(330, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(332, 0, null, null, 54, \"div\", [[\"class\", \"col-lg-6 col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(333, 0, null, null, 53, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(334, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(335, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Employees Stats\"])), (_l()(), i1.ɵeld(337, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"New employees on 15th September, 2016\"])), (_l()(), i1.ɵeld(339, 0, null, null, 47, \"div\", [[\"class\", \"card-body table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(340, 0, null, null, 46, \"table\", [[\"class\", \"table table-hover\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(341, 0, null, null, 8, \"thead\", [[\"class\", \"text-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(342, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"ID\"])), (_l()(), i1.ɵeld(344, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Name\"])), (_l()(), i1.ɵeld(346, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Salary\"])), (_l()(), i1.ɵeld(348, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Country\"])), (_l()(), i1.ɵeld(350, 0, null, null, 36, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(351, 0, null, null, 8, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(352, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"1\"])), (_l()(), i1.ɵeld(354, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Dakota Rice\"])), (_l()(), i1.ɵeld(356, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$36,738\"])), (_l()(), i1.ɵeld(358, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Niger\"])), (_l()(), i1.ɵeld(360, 0, null, null, 8, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(361, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"2\"])), (_l()(), i1.ɵeld(363, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Minerva Hooper\"])), (_l()(), i1.ɵeld(365, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$23,789\"])), (_l()(), i1.ɵeld(367, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Cura\\u00E7ao\"])), (_l()(), i1.ɵeld(369, 0, null, null, 8, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(370, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"3\"])), (_l()(), i1.ɵeld(372, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Sage Rodriguez\"])), (_l()(), i1.ɵeld(374, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$56,142\"])), (_l()(), i1.ɵeld(376, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Netherlands\"])), (_l()(), i1.ɵeld(378, 0, null, null, 8, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(379, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"4\"])), (_l()(), i1.ɵeld(381, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Philip Chaney\"])), (_l()(), i1.ɵeld(383, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"$38,735\"])), (_l()(), i1.ɵeld(385, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Korea, South\"]))], function (_ck, _v) { var currVal_14 = \"above\"; var currVal_15 = \"Edit Task\"; _ck(_v, 158, 0, currVal_14, currVal_15); var currVal_18 = \"above\"; var currVal_19 = \"Remove\"; _ck(_v, 163, 0, currVal_18, currVal_19); var currVal_22 = \"above\"; var currVal_23 = \"Edit Task\"; _ck(_v, 178, 0, currVal_22, currVal_23); var currVal_26 = \"above\"; var currVal_27 = \"Remove\"; _ck(_v, 183, 0, currVal_26, currVal_27); var currVal_30 = \"above\"; var currVal_31 = \"Edit Task\"; _ck(_v, 198, 0, currVal_30, currVal_31); var currVal_34 = \"above\"; var currVal_35 = \"Remove\"; _ck(_v, 203, 0, currVal_34, currVal_35); var currVal_38 = \"above\"; var currVal_39 = \"Edit Task\"; _ck(_v, 218, 0, currVal_38, currVal_39); var currVal_42 = \"above\"; var currVal_43 = \"Remove\"; _ck(_v, 223, 0, currVal_42, currVal_43); var currVal_46 = \"above\"; var currVal_47 = \"Edit Task\"; _ck(_v, 241, 0, currVal_46, currVal_47); var currVal_50 = \"above\"; var currVal_51 = \"Remove\"; _ck(_v, 246, 0, currVal_50, currVal_51); var currVal_54 = \"above\"; var currVal_55 = \"Edit Task\"; _ck(_v, 261, 0, currVal_54, currVal_55); var currVal_58 = \"above\"; var currVal_59 = \"Remove\"; _ck(_v, 266, 0, currVal_58, currVal_59); var currVal_62 = \"above\"; var currVal_63 = \"Edit Task\"; _ck(_v, 284, 0, currVal_62, currVal_63); var currVal_66 = \"above\"; var currVal_67 = \"Remove\"; _ck(_v, 289, 0, currVal_66, currVal_67); var currVal_70 = \"above\"; var currVal_71 = \"Edit Task\"; _ck(_v, 304, 0, currVal_70, currVal_71); var currVal_74 = \"above\"; var currVal_75 = \"Remove\"; _ck(_v, 309, 0, currVal_74, currVal_75); var currVal_78 = \"above\"; var currVal_79 = \"Edit Task\"; _ck(_v, 324, 0, currVal_78, currVal_79); var currVal_82 = \"above\"; var currVal_83 = \"Remove\"; _ck(_v, 329, 0, currVal_82, currVal_83); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 122).disabled ? (0 - 1) : (i1.ɵnov(_v, 122).tabIndex || 0)); var currVal_1 = (i1.ɵnov(_v, 122).disabled || null); var currVal_2 = i1.ɵnov(_v, 122).disabled.toString(); var currVal_3 = (i1.ɵnov(_v, 122)._animationMode === \"NoopAnimations\"); _ck(_v, 121, 0, currVal_0, currVal_1, currVal_2, currVal_3); var currVal_4 = (i1.ɵnov(_v, 129).disabled ? (0 - 1) : (i1.ɵnov(_v, 129).tabIndex || 0)); var currVal_5 = (i1.ɵnov(_v, 129).disabled || null); var currVal_6 = i1.ɵnov(_v, 129).disabled.toString(); var currVal_7 = (i1.ɵnov(_v, 129)._animationMode === \"NoopAnimations\"); _ck(_v, 128, 0, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_8 = (i1.ɵnov(_v, 136).disabled ? (0 - 1) : (i1.ɵnov(_v, 136).tabIndex || 0)); var currVal_9 = (i1.ɵnov(_v, 136).disabled || null); var currVal_10 = i1.ɵnov(_v, 136).disabled.toString(); var currVal_11 = (i1.ɵnov(_v, 136)._animationMode === \"NoopAnimations\"); _ck(_v, 135, 0, currVal_8, currVal_9, currVal_10, currVal_11); var currVal_12 = (i1.ɵnov(_v, 157).disabled || null); var currVal_13 = (i1.ɵnov(_v, 157)._animationMode === \"NoopAnimations\"); _ck(_v, 156, 0, currVal_12, currVal_13); var currVal_16 = (i1.ɵnov(_v, 162).disabled || null); var currVal_17 = (i1.ɵnov(_v, 162)._animationMode === \"NoopAnimations\"); _ck(_v, 161, 0, currVal_16, currVal_17); var currVal_20 = (i1.ɵnov(_v, 177).disabled || null); var currVal_21 = (i1.ɵnov(_v, 177)._animationMode === \"NoopAnimations\"); _ck(_v, 176, 0, currVal_20, currVal_21); var currVal_24 = (i1.ɵnov(_v, 182).disabled || null); var currVal_25 = (i1.ɵnov(_v, 182)._animationMode === \"NoopAnimations\"); _ck(_v, 181, 0, currVal_24, currVal_25); var currVal_28 = (i1.ɵnov(_v, 197).disabled || null); var currVal_29 = (i1.ɵnov(_v, 197)._animationMode === \"NoopAnimations\"); _ck(_v, 196, 0, currVal_28, currVal_29); var currVal_32 = (i1.ɵnov(_v, 202).disabled || null); var currVal_33 = (i1.ɵnov(_v, 202)._animationMode === \"NoopAnimations\"); _ck(_v, 201, 0, currVal_32, currVal_33); var currVal_36 = (i1.ɵnov(_v, 217).disabled || null); var currVal_37 = (i1.ɵnov(_v, 217)._animationMode === \"NoopAnimations\"); _ck(_v, 216, 0, currVal_36, currVal_37); var currVal_40 = (i1.ɵnov(_v, 222).disabled || null); var currVal_41 = (i1.ɵnov(_v, 222)._animationMode === \"NoopAnimations\"); _ck(_v, 221, 0, currVal_40, currVal_41); var currVal_44 = (i1.ɵnov(_v, 240).disabled || null); var currVal_45 = (i1.ɵnov(_v, 240)._animationMode === \"NoopAnimations\"); _ck(_v, 239, 0, currVal_44, currVal_45); var currVal_48 = (i1.ɵnov(_v, 245).disabled || null); var currVal_49 = (i1.ɵnov(_v, 245)._animationMode === \"NoopAnimations\"); _ck(_v, 244, 0, currVal_48, currVal_49); var currVal_52 = (i1.ɵnov(_v, 260).disabled || null); var currVal_53 = (i1.ɵnov(_v, 260)._animationMode === \"NoopAnimations\"); _ck(_v, 259, 0, currVal_52, currVal_53); var currVal_56 = (i1.ɵnov(_v, 265).disabled || null); var currVal_57 = (i1.ɵnov(_v, 265)._animationMode === \"NoopAnimations\"); _ck(_v, 264, 0, currVal_56, currVal_57); var currVal_60 = (i1.ɵnov(_v, 283).disabled || null); var currVal_61 = (i1.ɵnov(_v, 283)._animationMode === \"NoopAnimations\"); _ck(_v, 282, 0, currVal_60, currVal_61); var currVal_64 = (i1.ɵnov(_v, 288).disabled || null); var currVal_65 = (i1.ɵnov(_v, 288)._animationMode === \"NoopAnimations\"); _ck(_v, 287, 0, currVal_64, currVal_65); var currVal_68 = (i1.ɵnov(_v, 303).disabled || null); var currVal_69 = (i1.ɵnov(_v, 303)._animationMode === \"NoopAnimations\"); _ck(_v, 302, 0, currVal_68, currVal_69); var currVal_72 = (i1.ɵnov(_v, 308).disabled || null); var currVal_73 = (i1.ɵnov(_v, 308)._animationMode === \"NoopAnimations\"); _ck(_v, 307, 0, currVal_72, currVal_73); var currVal_76 = (i1.ɵnov(_v, 323).disabled || null); var currVal_77 = (i1.ɵnov(_v, 323)._animationMode === \"NoopAnimations\"); _ck(_v, 322, 0, currVal_76, currVal_77); var currVal_80 = (i1.ɵnov(_v, 328).disabled || null); var currVal_81 = (i1.ɵnov(_v, 328)._animationMode === \"NoopAnimations\"); _ck(_v, 327, 0, currVal_80, currVal_81); }); }\nexport function View_DashboardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-dashboard\", [], null, null, null, View_DashboardComponent_0, RenderType_DashboardComponent)), i1.ɵdid(1, 114688, null, 0, i11.DashboardComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DashboardComponentNgFactory = i1.ɵccf(\"app-dashboard\", i11.DashboardComponent, View_DashboardComponent_Host_0, {}, {}, []);\nexport { DashboardComponentNgFactory as DashboardComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-warning card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">content_copy</i>\n                      </div>\n                      <p class=\"card-category\">Used Space</p>\n                      <h3 class=\"card-title\">49/50\n                          <small>GB</small>\n                      </h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons text-danger\">warning</i>\n                          <a href=\"#pablo\">Get More Space...</a>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-success card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">store</i>\n                      </div>\n                      <p class=\"card-category\">Revenue</p>\n                      <h3 class=\"card-title\">$34,245</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">date_range</i> Last 24 Hours\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-danger card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"material-icons\">info_outline</i>\n                      </div>\n                      <p class=\"card-category\">Fixed Issues</p>\n                      <h3 class=\"card-title\">75</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">local_offer</i> Tracked from Github\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                  <div class=\"card-header card-header-info card-header-icon\">\n                      <div class=\"card-icon\">\n                          <i class=\"fa fa-twitter\"></i>\n                      </div>\n                      <p class=\"card-category\">Followers</p>\n                      <h3 class=\"card-title\">+245</h3>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">update</i> Just Updated\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-success\">\n                      <div class=\"ct-chart\" id=\"dailySalesChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Daily Sales</h4>\n                      <p class=\"card-category\">\n                          <span class=\"text-success\"><i class=\"fa fa-long-arrow-up\"></i> 55% </span> increase in today sales.</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> updated 4 minutes ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-warning\">\n                      <div class=\"ct-chart\" id=\"websiteViewsChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Email Subscriptions</h4>\n                      <p class=\"card-category\">Last Campaign Performance</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> campaign sent 2 days ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-chart\">\n                  <div class=\"card-header card-header-danger\">\n                      <div class=\"ct-chart\" id=\"completedTasksChart\"></div>\n                  </div>\n                  <div class=\"card-body\">\n                      <h4 class=\"card-title\">Completed Tasks</h4>\n                      <p class=\"card-category\">Last Campaign Performance</p>\n                  </div>\n                  <div class=\"card-footer\">\n                      <div class=\"stats\">\n                          <i class=\"material-icons\">access_time</i> campaign sent 2 days ago\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <div class=\"row\">\n          <div class=\"col-lg-6 col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-tabs card-header-primary\">\n                      <div class=\"nav-tabs-navigation\">\n                          <div class=\"nav-tabs-wrapper\">\n                              <span class=\"nav-tabs-title\">Tasks:</span>\n                              <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link active\" href=\"#profile\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">bug_report</i> Bugs\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link\" href=\"#messages\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">code</i> Website\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                                  <li class=\"nav-item\">\n                                      <a mat-button class=\"nav-link\" href=\"#settings\" data-toggle=\"tab\">\n                                          <i class=\"material-icons\">cloud</i> Server\n                                          <div class=\"ripple-container\"></div>\n                                      </a>\n                                  </li>\n                              </ul>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"tab-content\">\n                          <div class=\"tab-pane active\" id=\"profile\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                          <div class=\"tab-pane\" id=\"messages\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                          <div class=\"tab-pane\" id=\"settings\">\n                              <table class=\"table\">\n                                  <tbody>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\">\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                          </td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                      <tr>\n                                          <td>\n                                              <div class=\"form-check\">\n                                                  <label class=\"form-check-label\">\n                                                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked>\n                                                      <span class=\"form-check-sign\">\n                                                          <span class=\"check\"></span>\n                                                      </span>\n                                                  </label>\n                                              </div>\n                                          </td>\n                                          <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                          <td class=\"td-actions text-right\">\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">edit</i>\n                                              </button>\n                                              <button mat-raised-button type=\"button\" matTooltip=\"Remove\" [matTooltipPosition]=\"'above'\" class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\n                                                  <i class=\"material-icons\">close</i>\n                                              </button>\n                                          </td>\n                                      </tr>\n                                  </tbody>\n                              </table>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-warning\">\n                      <h4 class=\"card-title\">Employees Stats</h4>\n                      <p class=\"card-category\">New employees on 15th September, 2016</p>\n                  </div>\n                  <div class=\"card-body table-responsive\">\n                      <table class=\"table table-hover\">\n                          <thead class=\"text-warning\">\n                              <th>ID</th>\n                              <th>Name</th>\n                              <th>Salary</th>\n                              <th>Country</th>\n                          </thead>\n                          <tbody>\n                              <tr>\n                                  <td>1</td>\n                                  <td>Dakota Rice</td>\n                                  <td>$36,738</td>\n                                  <td>Niger</td>\n                              </tr>\n                              <tr>\n                                  <td>2</td>\n                                  <td>Minerva Hooper</td>\n                                  <td>$23,789</td>\n                                  <td>Curaçao</td>\n                              </tr>\n                              <tr>\n                                  <td>3</td>\n                                  <td>Sage Rodriguez</td>\n                                  <td>$56,142</td>\n                                  <td>Netherlands</td>\n                              </tr>\n                              <tr>\n                                  <td>4</td>\n                                  <td>Philip Chaney</td>\n                                  <td>$38,735</td>\n                                  <td>Korea, South</td>\n                              </tr>\n                          </tbody>\n                      </table>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { EMPTY, fromEvent, merge } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nvar MatError = /** @class */ (function () {\n    function MatError() {\n        this.id = \"mat-error-\" + nextUniqueId++;\n    }\n    MatError.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        'role': 'alert',\n                        '[attr.id]': 'id',\n                    }\n                },] },\n    ];\n    MatError.propDecorators = {\n        id: [{ type: Input }]\n    };\n    return MatError;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the MatFormField.\n  @type {?} */\nvar matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nvar  /**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nMatFormFieldControl = /** @class */ (function () {\n    function MatFormFieldControl() {\n    }\n    return MatFormFieldControl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(\"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nvar MatHint = /** @class */ (function () {\n    function MatHint() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = \"mat-hint-\" + nextUniqueId$1++;\n    }\n    MatHint.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-right]': 'align == \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    }\n                },] },\n    ];\n    MatHint.propDecorators = {\n        align: [{ type: Input }],\n        id: [{ type: Input }]\n    };\n    return MatHint;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nvar MatLabel = /** @class */ (function () {\n    function MatLabel() {\n    }\n    MatLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-label'\n                },] },\n    ];\n    return MatLabel;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nvar MatPlaceholder = /** @class */ (function () {\n    function MatPlaceholder() {\n    }\n    MatPlaceholder.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-placeholder'\n                },] },\n    ];\n    return MatPlaceholder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed the the front of the form field.\n */\nvar MatPrefix = /** @class */ (function () {\n    function MatPrefix() {\n    }\n    MatPrefix.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matPrefix]',\n                },] },\n    ];\n    return MatPrefix;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nvar MatSuffix = /** @class */ (function () {\n    function MatSuffix() {\n    }\n    MatSuffix.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matSuffix]',\n                },] },\n    ];\n    return MatSuffix;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar nextUniqueId$2 = 0;\n/** @type {?} */\nvar floatingLabelScale = 0.75;\n/** @type {?} */\nvar outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nvar  /**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nMatFormFieldBase = /** @class */ (function () {\n    function MatFormFieldBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatFormFieldBase;\n}());\n/** *\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n  @type {?} */\nvar _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/** *\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n  @type {?} */\nvar MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nvar MatFormField = /** @class */ (function (_super) {\n    __extends(MatFormField, _super);\n    function MatFormField(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        var _this = _super.call(this, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._dir = _dir;\n        _this._defaults = _defaults;\n        _this._platform = _platform;\n        _this._ngZone = _ngZone;\n        _this._outlineGapCalculationNeeded = false;\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        _this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        _this._subscriptAnimationState = '';\n        _this._hintLabel = '';\n        // Unique id for the hint label.\n        _this._hintLabelId = \"mat-hint-\" + nextUniqueId$2++;\n        // Unique id for the internal form field label.\n        _this._labelId = \"mat-form-field-label-\" + nextUniqueId$2++;\n        _this._labelOptions = labelOptions ? labelOptions : {};\n        _this.floatLabel = _this._labelOptions.float || 'auto';\n        _this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        // Set the default through here so we invoke the setter on the first run.\n        _this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        return _this;\n    }\n    Object.defineProperty(MatFormField.prototype, \"appearance\", {\n        /** The form-field appearance style. */\n        get: /**\n         * The form-field appearance style.\n         * @return {?}\n         */\n        function () { return this._appearance; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            /** @type {?} */\n            var oldValue = this._appearance;\n            this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n            if (this._appearance === 'outline' && oldValue !== value) {\n                // @breaking-change 7.0.0 Remove this check and else block once _ngZone is required.\n                if (this._ngZone) {\n                    /** @type {?} */ ((this._ngZone)).onStable.pipe(take(1)).subscribe(function () {\n                        /** @type {?} */ ((_this._ngZone)).runOutsideAngular(function () { return _this.updateOutlineGap(); });\n                    });\n                }\n                else {\n                    Promise.resolve().then(function () { return _this.updateOutlineGap(); });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hideRequiredMarker\", {\n        /** Whether the required marker should be hidden. */\n        get: /**\n         * Whether the required marker should be hidden.\n         * @return {?}\n         */\n        function () { return this._hideRequiredMarker; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hideRequiredMarker = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_shouldAlwaysFloat\", {\n        /** Whether the floating label should always float or not. */\n        get: /**\n         * Whether the floating label should always float or not.\n         * @return {?}\n         */\n        function () {\n            return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_canLabelFloat\", {\n        /** Whether the label can float or not. */\n        get: /**\n         * Whether the label can float or not.\n         * @return {?}\n         */\n        function () { return this.floatLabel !== 'never'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hintLabel\", {\n        /** Text for the form field hint. */\n        get: /**\n         * Text for the form field hint.\n         * @return {?}\n         */\n        function () { return this._hintLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hintLabel = value;\n            this._processHints();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"floatLabel\", {\n        /**\n         * Whether the label should always float, never float or float as the user types.\n         *\n         * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n         * way to make the floating label emulate the behavior of a standard input placeholder. However\n         * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n         * appearances the `never` option has been disabled in favor of just using the placeholder.\n         */\n        get: /**\n         * Whether the label should always float, never float or float as the user types.\n         *\n         * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n         * way to make the floating label emulate the behavior of a standard input placeholder. However\n         * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n         * appearances the `never` option has been disabled in favor of just using the placeholder.\n         * @return {?}\n         */\n        function () {\n            return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._floatLabel) {\n                this._floatLabel = value || this._labelOptions.float || 'auto';\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    MatFormField.prototype.getConnectedOverlayOrigin = /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    function () {\n        return this._connectionContainerRef || this._elementRef;\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(\"mat-form-field-type-\" + this._control.controlType);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(function () {\n            _this._validatePlaceholders();\n            _this._syncDescribedByIds();\n            _this._changeDetectorRef.markForCheck();\n        });\n        /** @type {?} */\n        var valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges, this._prefixChildren.changes, this._suffixChildren.changes)\n            .subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n            _this._processHints();\n            _this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n            _this._syncDescribedByIds();\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeeded) {\n            this.updateOutlineGap();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    };\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    MatFormField.prototype._shouldForward = /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) {\n        /** @type {?} */\n        var ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasPlaceholder = /**\n     * @return {?}\n     */\n    function () {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasLabel = /**\n     * @return {?}\n     */\n    function () {\n        return !!this._labelChild;\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._shouldLabelFloat = /**\n     * @return {?}\n     */\n    function () {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hideControlPlaceholder = /**\n     * @return {?}\n     */\n    function () {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype._hasFloatingLabel = /**\n     * @return {?}\n     */\n    function () {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    };\n    /** Determines whether to display hints or errors. */\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    MatFormField.prototype._getDisplayedMessages = /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    function () {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    };\n    /** Animates the placeholder up and locks it in position. */\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    MatFormField.prototype._animateAndLockLabel = /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\n                    _this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    MatFormField.prototype._validatePlaceholders = /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    function () {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    };\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    MatFormField.prototype._processHints = /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    function () {\n        this._validateHints();\n        this._syncDescribedByIds();\n    };\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    MatFormField.prototype._validateHints = /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._hintChildren) {\n            /** @type {?} */\n            var startHint_1 = void 0;\n            /** @type {?} */\n            var endHint_1 = void 0;\n            this._hintChildren.forEach(function (hint) {\n                if (hint.align === 'start') {\n                    if (startHint_1 || _this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint_1 = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint_1) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint_1 = hint;\n                }\n            });\n        }\n    };\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    MatFormField.prototype._syncDescribedByIds = /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    function () {\n        if (this._control) {\n            /** @type {?} */\n            var ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                var startHint = this._hintChildren ?\n                    this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\n                /** @type {?} */\n                var endHint = this._hintChildren ?\n                    this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map(function (error) { return error.id; });\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    };\n    /** Throws an error if the form field's control is missing. */\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    MatFormField.prototype._validateControlChild = /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    function () {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    };\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    MatFormField.prototype.updateOutlineGap = /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (this._platform && !this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!document.documentElement.contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeeded = true;\n            return;\n        }\n        /** @type {?} */\n        var startWidth = 0;\n        /** @type {?} */\n        var gapWidth = 0;\n        /** @type {?} */\n        var startEls = this._connectionContainerRef.nativeElement.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        var gapEls = this._connectionContainerRef.nativeElement.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            var containerStart = this._getStartEnd(this._connectionContainerRef.nativeElement.getBoundingClientRect());\n            /** @type {?} */\n            var labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            var labelWidth = 0;\n            for (var _i = 0, _a = labelEl.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (var i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = startWidth + \"px\";\n        }\n        for (var i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = gapWidth + \"px\";\n        }\n        this._outlineGapCalculationNeeded = false;\n    };\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @param {?} rect\n     * @return {?}\n     */\n    MatFormField.prototype._getStartEnd = /**\n     * Gets the start end of the rect considering the current directionality.\n     * @param {?} rect\n     * @return {?}\n     */\n    function (rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    };\n    MatFormField.decorators = [\n        { type: Component, args: [{selector: 'mat-form-field',\n                    exportAs: 'matFormField',\n                    template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&nbsp;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                    // MatInput is a directive and can't have styles, so we need to include its styles here.\n                    // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\n                    // aren't using MatInput.\n                    styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;background-repeat:no-repeat;display:inline-flex;box-sizing:border-box;background-position:right center}select.mat-input-element::-ms-expand{display:none}select.mat-input-element:not([multiple]){background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2210%22%20height%3D%225%22%20viewBox%3D%227%2010%2010%205%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%22.54%22%20d%3D%22M7%2010l5%205%205-5z%22%2F%3E%3C%2Fsvg%3E\\\")}[dir=rtl] select.mat-input-element{background-position:left center}\"],\n                    animations: [matFormFieldAnimations.transitionMessages],\n                    host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.mat-accent]': 'color == \"accent\"',\n                        '[class.mat-warn]': 'color == \"warn\"',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    },\n                    inputs: ['color'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatFormField.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n        { type: Platform },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatFormField.propDecorators = {\n        appearance: [{ type: Input }],\n        hideRequiredMarker: [{ type: Input }],\n        hintLabel: [{ type: Input }],\n        floatLabel: [{ type: Input }],\n        underlineRef: [{ type: ViewChild, args: ['underline',] }],\n        _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer',] }],\n        _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n        _label: [{ type: ViewChild, args: ['label',] }],\n        _control: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n        _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n        _labelChild: [{ type: ContentChild, args: [MatLabel,] }],\n        _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n        _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n        _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n        _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n    };\n    return MatFormField;\n}(_MatFormFieldMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatFormFieldModule = /** @class */ (function () {\n    function MatFormFieldModule() {\n    }\n    MatFormFieldModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                    imports: [\n                        CommonModule,\n                        ObserversModule,\n                    ],\n                    exports: [\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                },] },\n    ];\n    return MatFormFieldModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MatFormFieldBase, _MatFormFieldMixinBase, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n//# sourceMappingURL=form-field.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/platform-browser/animations\";\nvar MatFormFieldModuleNgFactory = i0.ɵcmf(i1.MatFormFieldModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i1.MatFormFieldModule, i1.MatFormFieldModule, [])]); });\nexport { MatFormFieldModuleNgFactory as MatFormFieldModuleNgFactory };\nvar styles_MatFormField = [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media screen and (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media screen and (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\", \".mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;background-repeat:no-repeat;display:inline-flex;box-sizing:border-box;background-position:right center}select.mat-input-element::-ms-expand{display:none}select.mat-input-element:not([multiple]){background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2210%22%20height%3D%225%22%20viewBox%3D%227%2010%2010%205%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%22.54%22%20d%3D%22M7%2010l5%205%205-5z%22%2F%3E%3C%2Fsvg%3E\\\")}[dir=rtl] select.mat-input-element{background-position:left center}\"];\nvar RenderType_MatFormField = i0.ɵcrt({ encapsulation: 2, styles: styles_MatFormField, data: { \"animation\": [{ type: 7, name: \"transitionMessages\", definitions: [{ type: 0, name: \"enter\", styles: { type: 6, styles: { opacity: 1, transform: \"translateY(0%)\" }, offset: null }, options: undefined }, { type: 1, expr: \"void => enter\", animation: [{ type: 6, styles: { opacity: 0, transform: \"translateY(-100%)\" }, offset: null }, { type: 4, styles: null, timings: \"300ms cubic-bezier(0.55, 0, 0.55, 0.2)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatFormField as RenderType_MatFormField };\nfunction View_MatFormField_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"mat-form-field-outline\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-start\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-gap\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-end\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 3, \"div\", [[\"class\", \"mat-form-field-outline mat-form-field-outline-thick\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-start\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-gap\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-outline-end\"]], null, null, null, null, null))], null, null); }\nfunction View_MatFormField_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-form-field-prefix\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }\nfunction View_MatFormField_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), i0.ɵncd(null, 2), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._control.placeholder; _ck(_v, 2, 0, currVal_0); }); }\nfunction View_MatFormField_5(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 3), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatFormField_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00A0*\"]))], null, null); }\nfunction View_MatFormField_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[4, 0], [\"label\", 1]], null, 8, \"label\", [[\"class\", \"mat-form-field-label\"]], [[8, \"id\", 0], [1, \"for\", 0], [1, \"aria-owns\", 0], [2, \"mat-empty\", null], [2, \"mat-form-field-empty\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null]], [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co.updateOutlineGap() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], { disabled: [0, \"disabled\"] }, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_4)), i0.ɵdid(4, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_5)), i0.ɵdid(6, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_6)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_7 = _co._hasLabel(); _ck(_v, 1, 0, currVal_7); var currVal_8 = (_co.appearance != \"outline\"); _ck(_v, 2, 0, currVal_8); var currVal_9 = false; _ck(_v, 4, 0, currVal_9); var currVal_10 = true; _ck(_v, 6, 0, currVal_10); var currVal_11 = ((!_co.hideRequiredMarker && _co._control.required) && !_co._control.disabled); _ck(_v, 8, 0, currVal_11); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._labelId; var currVal_1 = _co._control.id; var currVal_2 = _co._control.id; var currVal_3 = (_co._control.empty && !_co._shouldAlwaysFloat); var currVal_4 = (_co._control.empty && !_co._shouldAlwaysFloat); var currVal_5 = (_co.color == \"accent\"); var currVal_6 = (_co.color == \"warn\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); }); }\nfunction View_MatFormField_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-form-field-suffix\"]], null, null, null, null, null)), i0.ɵncd(null, 4)], null, null); }\nfunction View_MatFormField_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[1, 0], [\"underline\", 1]], null, 1, \"div\", [[\"class\", \"mat-form-field-underline\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \"span\", [[\"class\", \"mat-form-field-ripple\"]], [[2, \"mat-accent\", null], [2, \"mat-warn\", null]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.color == \"accent\"); var currVal_1 = (_co.color == \"warn\"); _ck(_v, 1, 0, currVal_0, currVal_1); }); }\nfunction View_MatFormField_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], [[24, \"@transitionMessages\", 0]], null, null, null, null)), i0.ɵncd(null, 5)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._subscriptAnimationState; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatFormField_11(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"mat-hint\"]], [[8, \"id\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._hintLabelId; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.hintLabel; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_MatFormField_10(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"div\", [[\"class\", \"mat-form-field-hint-wrapper\"]], [[24, \"@transitionMessages\", 0]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_11)), i0.ɵdid(2, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵncd(null, 6), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"div\", [[\"class\", \"mat-form-field-hint-spacer\"]], null, null, null, null, null)), i0.ɵncd(null, 7)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.hintLabel; _ck(_v, 2, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._subscriptAnimationState; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_MatFormField_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { underlineRef: 0 }), i0.ɵqud(402653184, 2, { _connectionContainerRef: 0 }), i0.ɵqud(402653184, 3, { _inputContainerRef: 0 }), i0.ɵqud(671088640, 4, { _label: 0 }), (_l()(), i0.ɵeld(4, 0, null, null, 20, \"div\", [[\"class\", \"mat-form-field-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, [[2, 0], [\"connectionContainer\", 1]], null, 11, \"div\", [[\"class\", \"mat-form-field-flex\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = ((_co._control.onContainerClick && _co._control.onContainerClick($event)) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_1)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_2)), i0.ɵdid(9, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(10, 0, [[3, 0], [\"inputContainer\", 1]], null, 4, \"div\", [[\"class\", \"mat-form-field-infix\"]], null, null, null, null, null)), i0.ɵncd(null, 1), (_l()(), i0.ɵeld(12, 0, null, null, 2, \"span\", [[\"class\", \"mat-form-field-label-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_3)), i0.ɵdid(14, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_7)), i0.ɵdid(16, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_8)), i0.ɵdid(18, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(19, 0, null, null, 5, \"div\", [[\"class\", \"mat-form-field-subscript-wrapper\"]], null, null, null, null, null)), i0.ɵdid(20, 16384, null, 0, i2.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_9)), i0.ɵdid(22, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatFormField_10)), i0.ɵdid(24, 278528, null, 0, i2.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i2.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.appearance == \"outline\"); _ck(_v, 7, 0, currVal_0); var currVal_1 = _co._prefixChildren.length; _ck(_v, 9, 0, currVal_1); var currVal_2 = _co._hasFloatingLabel(); _ck(_v, 14, 0, currVal_2); var currVal_3 = _co._suffixChildren.length; _ck(_v, 16, 0, currVal_3); var currVal_4 = (_co.appearance != \"outline\"); _ck(_v, 18, 0, currVal_4); var currVal_5 = _co._getDisplayedMessages(); _ck(_v, 20, 0, currVal_5); var currVal_6 = \"error\"; _ck(_v, 22, 0, currVal_6); var currVal_7 = \"hint\"; _ck(_v, 24, 0, currVal_7); }, null); }\nexport function View_MatFormField_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"mat-form-field\", [[\"class\", \"mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, View_MatFormField_0, RenderType_MatFormField)), i0.ɵdid(1, 7389184, null, 7, i1.MatFormField, [i0.ElementRef, i0.ChangeDetectorRef, [2, i4.MAT_LABEL_GLOBAL_OPTIONS], [2, i5.Directionality], [2, i1.MAT_FORM_FIELD_DEFAULT_OPTIONS], i6.Platform, i0.NgZone, [2, i7.ANIMATION_MODULE_TYPE]], null, null), i0.ɵqud(335544320, 1, { _control: 0 }), i0.ɵqud(335544320, 2, { _placeholderChild: 0 }), i0.ɵqud(335544320, 3, { _labelChild: 0 }), i0.ɵqud(603979776, 4, { _errorChildren: 1 }), i0.ɵqud(603979776, 5, { _hintChildren: 1 }), i0.ɵqud(603979776, 6, { _prefixChildren: 1 }), i0.ɵqud(603979776, 7, { _suffixChildren: 1 })], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).appearance == \"standard\"); var currVal_1 = (i0.ɵnov(_v, 1).appearance == \"fill\"); var currVal_2 = (i0.ɵnov(_v, 1).appearance == \"outline\"); var currVal_3 = (i0.ɵnov(_v, 1).appearance == \"legacy\"); var currVal_4 = i0.ɵnov(_v, 1)._control.errorState; var currVal_5 = i0.ɵnov(_v, 1)._canLabelFloat; var currVal_6 = i0.ɵnov(_v, 1)._shouldLabelFloat(); var currVal_7 = i0.ɵnov(_v, 1)._hideControlPlaceholder(); var currVal_8 = i0.ɵnov(_v, 1)._control.disabled; var currVal_9 = i0.ɵnov(_v, 1)._control.autofilled; var currVal_10 = i0.ɵnov(_v, 1)._control.focused; var currVal_11 = (i0.ɵnov(_v, 1).color == \"accent\"); var currVal_12 = (i0.ɵnov(_v, 1).color == \"warn\"); var currVal_13 = i0.ɵnov(_v, 1)._shouldForward(\"untouched\"); var currVal_14 = i0.ɵnov(_v, 1)._shouldForward(\"touched\"); var currVal_15 = i0.ɵnov(_v, 1)._shouldForward(\"pristine\"); var currVal_16 = i0.ɵnov(_v, 1)._shouldForward(\"dirty\"); var currVal_17 = i0.ɵnov(_v, 1)._shouldForward(\"valid\"); var currVal_18 = i0.ɵnov(_v, 1)._shouldForward(\"invalid\"); var currVal_19 = i0.ɵnov(_v, 1)._shouldForward(\"pending\"); var currVal_20 = !i0.ɵnov(_v, 1)._animationsEnabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20]); }); }\nvar MatFormFieldNgFactory = i0.ɵccf(\"mat-form-field\", i1.MatFormField, View_MatFormField_Host_0, { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, {}, [\"[matPrefix]\", \"*\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"]);\nexport { MatFormFieldNgFactory as MatFormFieldNgFactory };\n","<div class=\"mat-form-field-wrapper\"><div class=\"mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><ng-container *ngIf=\"appearance == 'outline'\"><div class=\"mat-form-field-outline\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div><div class=\"mat-form-field-outline mat-form-field-outline-thick\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div></ng-container><div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper\"><label class=\"mat-form-field-label\" (cdkObserveContent)=\"updateOutlineGap()\" [cdkObserveContentDisabled]=\"appearance != 'outline'\" [id]=\"_labelId\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&nbsp;*</span></label></span></div><div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-form-field-underline\" #underline *ngIf=\"appearance != 'outline'\"><span class=\"mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform, supportsPassiveEventListeners, PlatformModule } from '@angular/cdk/platform';\nimport { Directive, ElementRef, EventEmitter, Injectable, NgZone, Output, Input, NgModule, defineInjectable, inject } from '@angular/core';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Options to pass to the animationstart listener.\n  @type {?} */\nvar listenerOptions = supportsPassiveEventListeners() ? { passive: true } : false;\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nvar AutofillMonitor = /** @class */ (function () {\n    function AutofillMonitor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    AutofillMonitor.prototype.monitor = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        var _this = this;\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        var element = elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n        /** @type {?} */\n        var info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        var result = new Subject();\n        /** @type {?} */\n        var cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        var listener = /** @type {?} */ ((function (event) {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                _this._ngZone.run(function () { return result.next({ target: /** @type {?} */ (event.target), isAutofilled: true }); });\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                _this._ngZone.run(function () { return result.next({ target: /** @type {?} */ (event.target), isAutofilled: false }); });\n            }\n        }));\n        this._ngZone.runOutsideAngular(function () {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: function () {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result.asObservable();\n    };\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    AutofillMonitor.prototype.stopMonitoring = /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    function (elementOrRef) {\n        /** @type {?} */\n        var element = elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n        /** @type {?} */\n        var info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AutofillMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._monitoredElements.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n    };\n    AutofillMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    AutofillMonitor.ctorParameters = function () { return [\n        { type: Platform },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ AutofillMonitor.ngInjectableDef = defineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(inject(Platform), inject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n    return AutofillMonitor;\n}());\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nvar CdkAutofill = /** @class */ (function () {\n    function CdkAutofill(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    CdkAutofill.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(function (event) { return _this.cdkAutofill.emit(event); });\n    };\n    /**\n     * @return {?}\n     */\n    CdkAutofill.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    };\n    CdkAutofill.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkAutofill]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkAutofill.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: AutofillMonitor }\n    ]; };\n    CdkAutofill.propDecorators = {\n        cdkAutofill: [{ type: Output }]\n    };\n    return CdkAutofill;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar CdkTextareaAutosize = /** @class */ (function () {\n    function CdkTextareaAutosize(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        this._textareaElement = /** @type {?} */ (this._elementRef.nativeElement);\n    }\n    Object.defineProperty(CdkTextareaAutosize.prototype, \"minRows\", {\n        /** Minimum amount of rows in the textarea. */\n        get: /**\n         * Minimum amount of rows in the textarea.\n         * @return {?}\n         */\n        function () { return this._minRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minRows = value;\n            this._setMinHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTextareaAutosize.prototype, \"maxRows\", {\n        /** Maximum amount of rows in the textarea. */\n        get: /**\n         * Maximum amount of rows in the textarea.\n         * @return {?}\n         */\n        function () { return this._maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxRows = value;\n            this._setMaxHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTextareaAutosize.prototype, \"enabled\", {\n        /** Whether autosizing is enabled or not */\n        get: /**\n         * Whether autosizing is enabled or not\n         * @return {?}\n         */\n        function () { return this._enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceBooleanProperty(value);\n            // Only act if the actual value changed. This specifically helps to not run\n            // resizeToFitContent too early (i.e. before ngAfterViewInit)\n            if (this._enabled !== value) {\n                (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setMinHeight = /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var minHeight = this.minRows && this._cachedLineHeight ?\n            this.minRows * this._cachedLineHeight + \"px\" : null;\n        if (minHeight) {\n            this._setTextareaStyle('minHeight', minHeight);\n        }\n    };\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setMaxHeight = /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var maxHeight = this.maxRows && this._cachedLineHeight ?\n            this.maxRows * this._cachedLineHeight + \"px\" : null;\n        if (maxHeight) {\n            this._setTextareaStyle('maxHeight', maxHeight);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(function () {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(_this._destroyed))\n                    .subscribe(function () { return _this.resizeToFitContent(true); });\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._setTextareaStyle = /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (property, value) {\n        this._textareaElement.style[property] = value;\n    };\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._cacheTextareaLineHeight = /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    function () {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        var textareaClone = /** @type {?} */ (this._textareaElement.cloneNode(false));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden'; /** @type {?} */\n        ((this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight; /** @type {?} */\n        ((this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    };\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.resizeToFitContent = /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        var textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        /** @type {?} */\n        var value = textarea.value;\n        // Only resize of the value changed since these calculations can be expensive.\n        if (value === this._previousValue && !force) {\n            return;\n        }\n        /** @type {?} */\n        var placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        /** @type {?} */\n        var height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = height + \"px\";\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n        // We need to re-set the selection in order for it to scroll to the proper position.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () { return requestAnimationFrame(function () {\n                var selectionStart = textarea.selectionStart, selectionEnd = textarea.selectionEnd;\n                // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n                // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n                // between the time we requested the animation frame and when it was executed.\n                // Also note that we have to assert that the textarea is focused before we set the\n                // selection range. Setting the selection range on a non-focused textarea will cause\n                // it to receive focus on IE and Edge.\n                if (!_this._destroyed.isStopped && document.activeElement === textarea) {\n                    textarea.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }); });\n        }\n        this._previousValue = value;\n    };\n    /**\n     * Resets the textarea to it's original size\n     */\n    /**\n     * Resets the textarea to it's original size\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype.reset = /**\n     * Resets the textarea to it's original size\n     * @return {?}\n     */\n    function () {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight === undefined) {\n            return;\n        }\n        this._textareaElement.style.height = this._initialHeight;\n    };\n    /**\n     * @return {?}\n     */\n    CdkTextareaAutosize.prototype._noopInputHandler = /**\n     * @return {?}\n     */\n    function () {\n        // no-op handler that ensures we're running change detection on input events.\n    };\n    CdkTextareaAutosize.decorators = [\n        { type: Directive, args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTextareaAutosize.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: NgZone }\n    ]; };\n    CdkTextareaAutosize.propDecorators = {\n        minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n        maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n        enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }]\n    };\n    return CdkTextareaAutosize;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar TextFieldModule = /** @class */ (function () {\n    function TextFieldModule() {\n    }\n    TextFieldModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                },] },\n    ];\n    return TextFieldModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n//# sourceMappingURL=text-field.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Inject, NgZone, Optional, Self, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar _CdkTextareaAutosize = CdkTextareaAutosize;\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 7.0.0\n */\nvar MatTextareaAutosize = /** @class */ (function (_super) {\n    __extends(MatTextareaAutosize, _super);\n    function MatTextareaAutosize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matAutosizeMinRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.minRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.minRows = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matAutosizeMaxRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.maxRows = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matAutosize\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.enabled = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"matTextareaAutosize\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.enabled = value; },\n        enumerable: true,\n        configurable: true\n    });\n    MatTextareaAutosize.decorators = [\n        { type: Directive, args: [{\n                    selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                    exportAs: 'matTextareaAutosize',\n                    inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                    host: {\n                        'class': 'cdk-textarea-autosize mat-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                },] },\n    ];\n    MatTextareaAutosize.propDecorators = {\n        matAutosizeMinRows: [{ type: Input }],\n        matAutosizeMaxRows: [{ type: Input }],\n        matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n        matTextareaAutosize: [{ type: Input }]\n    };\n    return MatTextareaAutosize;\n}(_CdkTextareaAutosize));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(\"Input type \\\"\" + type + \"\\\" isn't supported by matInput.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n  @type {?} */\nvar MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nvar nextUniqueId = 0;\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatInputBase = /** @class */ (function () {\n    function MatInputBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n    return MatInputBase;\n}());\n/** @type {?} */\nvar _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nvar MatInput = /** @class */ (function (_super) {\n    __extends(MatInput, _super);\n    function MatInput(_elementRef, _platform, /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        var _this = _super.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;\n        _this._elementRef = _elementRef;\n        _this._platform = _platform;\n        _this.ngControl = ngControl;\n        _this._autofillMonitor = _autofillMonitor;\n        _this._uid = \"mat-input-\" + nextUniqueId++;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        _this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        _this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        _this.autofilled = false;\n        _this._disabled = false;\n        _this._required = false;\n        _this._type = 'text';\n        _this._readonly = false;\n        _this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(function (t) { return getSupportedInputTypes().has(t); });\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        _this._inputValueAccessor = inputValueAccessor || _this._elementRef.nativeElement;\n        _this._previousNativeValue = _this.value;\n        // Force setter to be called in case id was not specified.\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(function () {\n                _elementRef.nativeElement.addEventListener('keyup', function (event) {\n                    /** @type {?} */\n                    var el = /** @type {?} */ (event.target);\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        _this._isServer = !_this._platform.isBrowser;\n        _this._isNativeSelect = _this._elementRef.nativeElement.nodeName.toLowerCase() === 'select';\n        return _this;\n    }\n    Object.defineProperty(MatInput.prototype, \"disabled\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            if (this.ngControl && this.ngControl.disabled !== null) {\n                return this.ngControl.disabled;\n            }\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // Browsers may not fire the blur event if the input is disabled too quickly.\n            // Reset from here to ensure that the element doesn't become stuck.\n            if (this.focused) {\n                this.focused = false;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"id\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"required\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"type\", {\n        /** Input type of the element. */\n        get: /**\n         * Input type of the element.\n         * @return {?}\n         */\n        function () { return this._type; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                (/** @type {?} */ (this._elementRef.nativeElement)).type = this._type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"value\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._inputValueAccessor.value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this.value) {\n                this._inputValueAccessor.value = value;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"readonly\", {\n        /** Whether the element is readonly. */\n        get: /**\n         * Whether the element is readonly.\n         * @return {?}\n         */\n        function () { return this._readonly; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._readonly = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(function (event) {\n                _this.autofilled = event.isAutofilled;\n                _this.stateChanges.next();\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    };\n    /** Focuses the input. */\n    /**\n     * Focuses the input.\n     * @return {?}\n     */\n    MatInput.prototype.focus = /**\n     * Focuses the input.\n     * @return {?}\n     */\n    function () { this._elementRef.nativeElement.focus(); };\n    /** Callback for the cases where the focused state of the input changes. */\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    MatInput.prototype._focusChanged = /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    function (isFocused) {\n        if (isFocused !== this.focused && !this.readonly) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype._onInput = /**\n     * @return {?}\n     */\n    function () {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    };\n    /** Does some manual dirty checking on the native input `value` property. */\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    MatInput.prototype._dirtyCheckNativeValue = /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var newValue = this.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    };\n    /** Make sure the input is a supported type. */\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MatInput.prototype._validateType = /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    function () {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    };\n    /** Checks whether the input type is one of the types that are never empty. */\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    MatInput.prototype._isNeverEmpty = /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    function () {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    };\n    /** Checks whether the input is invalid based on the native validation. */\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    MatInput.prototype._isBadInput = /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var validity = (/** @type {?} */ (this._elementRef.nativeElement)).validity;\n        return validity && validity.badInput;\n    };\n    /** Determines if the component host is a textarea. */\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    MatInput.prototype._isTextarea = /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    };\n    Object.defineProperty(MatInput.prototype, \"empty\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n                !this.autofilled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"shouldLabelFloat\", {\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        get: /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            if (this._isNativeSelect) {\n                /** @type {?} */\n                var selectElement = /** @type {?} */ (this._elementRef.nativeElement);\n                return selectElement.multiple || !this.empty || !!selectElement.options[0].label ||\n                    this.focused;\n            }\n            else {\n                return this.focused || !this.empty;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    MatInput.prototype.setDescribedByIds = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) { this._ariaDescribedby = ids.join(' '); };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatInput.prototype.onContainerClick = /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/material2/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    };\n    MatInput.decorators = [\n        { type: Directive, args: [{\n                    selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\",\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                             * @breaking-change 7.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                             */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        '[attr.placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-required]': 'required.toString()',\n                        '(blur)': '_focusChanged(false)',\n                        '(focus)': '_focusChanged(true)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                },] },\n    ];\n    /** @nocollapse */\n    MatInput.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Platform },\n        { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n        { type: NgForm, decorators: [{ type: Optional }] },\n        { type: FormGroupDirective, decorators: [{ type: Optional }] },\n        { type: ErrorStateMatcher },\n        { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n        { type: AutofillMonitor },\n        { type: NgZone }\n    ]; };\n    MatInput.propDecorators = {\n        disabled: [{ type: Input }],\n        id: [{ type: Input }],\n        placeholder: [{ type: Input }],\n        required: [{ type: Input }],\n        type: [{ type: Input }],\n        errorStateMatcher: [{ type: Input }],\n        value: [{ type: Input }],\n        readonly: [{ type: Input }]\n    };\n    return MatInput;\n}(_MatInputMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar MatInputModule = /** @class */ (function () {\n    function MatInputModule() {\n    }\n    MatInputModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [MatInput, MatTextareaAutosize],\n                    imports: [\n                        CommonModule,\n                        TextFieldModule,\n                        MatFormFieldModule,\n                    ],\n                    exports: [\n                        TextFieldModule,\n                        MatFormFieldModule,\n                        MatInput,\n                        MatTextareaAutosize,\n                    ],\n                    providers: [ErrorStateMatcher],\n                },] },\n    ];\n    return MatInputModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { _CdkTextareaAutosize, MatTextareaAutosize, MatInputBase, _MatInputMixinBase, MatInput, getMatInputUnsupportedTypeError, MatInputModule, MAT_INPUT_VALUE_ACCESSOR };\n//# sourceMappingURL=input.es5.js.map\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user-profile.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/cdk/bidi\";\nimport * as i7 from \"@angular/cdk/platform\";\nimport * as i8 from \"@angular/platform-browser/animations\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/cdk/text-field\";\nimport * as i11 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/cdk/a11y\";\nimport * as i14 from \"./user-profile.component\";\nvar styles_UserProfileComponent = [i0.styles];\nvar RenderType_UserProfileComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserProfileComponent, data: {} });\nexport { RenderType_UserProfileComponent as RenderType_UserProfileComponent };\nexport function View_UserProfileComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 170, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 169, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 168, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 153, \"div\", [[\"class\", \"col-md-8\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 152, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Edit Profile\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Complete your profile\"])), (_l()(), i1.ɵeld(10, 0, null, null, 146, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 145, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; if ((\"submit\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 13).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 13).onReset() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.ɵdid(12, 16384, null, 0, i2.ɵangular_packages_forms_forms_bg, [], null, null), i1.ɵdid(13, 4210688, null, 0, i2.NgForm, [[8, null], [8, null]], null, null), i1.ɵprd(2048, null, i2.ControlContainer, null, [i2.NgForm]), i1.ɵdid(15, 16384, null, 0, i2.NgControlStatusGroup, [[4, i2.ControlContainer]], null, null), (_l()(), i1.ɵeld(16, 0, null, null, 39, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(17, 0, null, null, 12, \"div\", [[\"class\", \"col-md-5\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(18, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(19, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 1, { _control: 0 }), i1.ɵqud(335544320, 2, { _placeholderChild: 0 }), i1.ɵqud(335544320, 3, { _labelChild: 0 }), i1.ɵqud(603979776, 4, { _errorChildren: 1 }), i1.ɵqud(603979776, 5, { _hintChildren: 1 }), i1.ɵqud(603979776, 6, { _prefixChildren: 1 }), i1.ɵqud(603979776, 7, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(27, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"disabled\", \"\"], [\"matInput\", \"\"], [\"placeholder\", \"Company (disabled)\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 28)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 28)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 28)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(28, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { disabled: [0, \"disabled\"], placeholder: [1, \"placeholder\"] }, null), i1.ɵprd(2048, [[1, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(30, 0, null, null, 12, \"div\", [[\"class\", \"col-md-3\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(31, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(32, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 8, { _control: 0 }), i1.ɵqud(335544320, 9, { _placeholderChild: 0 }), i1.ɵqud(335544320, 10, { _labelChild: 0 }), i1.ɵqud(603979776, 11, { _errorChildren: 1 }), i1.ɵqud(603979776, 12, { _hintChildren: 1 }), i1.ɵqud(603979776, 13, { _prefixChildren: 1 }), i1.ɵqud(603979776, 14, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(40, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Username\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 41)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 41)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 41)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(41, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(2048, [[8, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(43, 0, null, null, 12, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(44, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(45, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 15, { _control: 0 }), i1.ɵqud(335544320, 16, { _placeholderChild: 0 }), i1.ɵqud(335544320, 17, { _labelChild: 0 }), i1.ɵqud(603979776, 18, { _errorChildren: 1 }), i1.ɵqud(603979776, 19, { _hintChildren: 1 }), i1.ɵqud(603979776, 20, { _prefixChildren: 1 }), i1.ɵqud(603979776, 21, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(53, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Email address\"], [\"type\", \"email\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 54)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 54)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 54)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(54, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[15, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(56, 0, null, null, 26, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(57, 0, null, null, 12, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(58, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(59, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 22, { _control: 0 }), i1.ɵqud(335544320, 23, { _placeholderChild: 0 }), i1.ɵqud(335544320, 24, { _labelChild: 0 }), i1.ɵqud(603979776, 25, { _errorChildren: 1 }), i1.ɵqud(603979776, 26, { _hintChildren: 1 }), i1.ɵqud(603979776, 27, { _prefixChildren: 1 }), i1.ɵqud(603979776, 28, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(67, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Fist Name\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 68)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 68)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 68)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(68, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[22, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(70, 0, null, null, 12, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(71, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(72, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 29, { _control: 0 }), i1.ɵqud(335544320, 30, { _placeholderChild: 0 }), i1.ɵqud(335544320, 31, { _labelChild: 0 }), i1.ɵqud(603979776, 32, { _errorChildren: 1 }), i1.ɵqud(603979776, 33, { _hintChildren: 1 }), i1.ɵqud(603979776, 34, { _prefixChildren: 1 }), i1.ɵqud(603979776, 35, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(80, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Last Name\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 81)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 81)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 81)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(81, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[29, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(83, 0, null, null, 13, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(84, 0, null, null, 12, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(85, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(86, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 36, { _control: 0 }), i1.ɵqud(335544320, 37, { _placeholderChild: 0 }), i1.ɵqud(335544320, 38, { _labelChild: 0 }), i1.ɵqud(603979776, 39, { _errorChildren: 1 }), i1.ɵqud(603979776, 40, { _hintChildren: 1 }), i1.ɵqud(603979776, 41, { _prefixChildren: 1 }), i1.ɵqud(603979776, 42, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(94, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Adress\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 95)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 95)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 95)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(95, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[36, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(97, 0, null, null, 39, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(98, 0, null, null, 12, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(99, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(100, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 43, { _control: 0 }), i1.ɵqud(335544320, 44, { _placeholderChild: 0 }), i1.ɵqud(335544320, 45, { _labelChild: 0 }), i1.ɵqud(603979776, 46, { _errorChildren: 1 }), i1.ɵqud(603979776, 47, { _hintChildren: 1 }), i1.ɵqud(603979776, 48, { _prefixChildren: 1 }), i1.ɵqud(603979776, 49, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(108, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"City\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 109)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 109)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 109)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(109, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[43, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(111, 0, null, null, 12, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(112, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(113, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 50, { _control: 0 }), i1.ɵqud(335544320, 51, { _placeholderChild: 0 }), i1.ɵqud(335544320, 52, { _labelChild: 0 }), i1.ɵqud(603979776, 53, { _errorChildren: 1 }), i1.ɵqud(603979776, 54, { _hintChildren: 1 }), i1.ɵqud(603979776, 55, { _prefixChildren: 1 }), i1.ɵqud(603979776, 56, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(121, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Country\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 122)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 122)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 122)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(122, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[50, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(124, 0, null, null, 12, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(125, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(126, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 57, { _control: 0 }), i1.ɵqud(335544320, 58, { _placeholderChild: 0 }), i1.ɵqud(335544320, 59, { _labelChild: 0 }), i1.ɵqud(603979776, 60, { _errorChildren: 1 }), i1.ɵqud(603979776, 61, { _hintChildren: 1 }), i1.ɵqud(603979776, 62, { _prefixChildren: 1 }), i1.ɵqud(603979776, 63, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(134, 0, null, 1, 2, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Postal Code\"], [\"type\", \"text\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 135)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 135)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 135)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(135, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], type: [1, \"type\"] }, null), i1.ɵprd(2048, [[57, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(137, 0, null, null, 15, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(138, 0, null, null, 14, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(139, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"About Me\"])), (_l()(), i1.ɵeld(141, 0, null, null, 11, \"mat-form-field\", [[\"class\", \"example-full-width mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i3.View_MatFormField_0, i3.RenderType_MatFormField)), i1.ɵdid(142, 7389184, null, 7, i4.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i5.MAT_LABEL_GLOBAL_OPTIONS], [2, i6.Directionality], [2, i4.MAT_FORM_FIELD_DEFAULT_OPTIONS], i7.Platform, i1.NgZone, [2, i8.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(335544320, 64, { _control: 0 }), i1.ɵqud(335544320, 65, { _placeholderChild: 0 }), i1.ɵqud(335544320, 66, { _labelChild: 0 }), i1.ɵqud(603979776, 67, { _errorChildren: 1 }), i1.ɵqud(603979776, 68, { _hintChildren: 1 }), i1.ɵqud(603979776, 69, { _prefixChildren: 1 }), i1.ɵqud(603979776, 70, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(150, 0, null, 1, 2, \"textarea\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"placeholder\", \"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"]], [[2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"blur\"], [null, \"focus\"], [null, \"input\"]], function (_v, en, $event) { var ad = true; if ((\"blur\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 151)._focusChanged(false) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 151)._focusChanged(true) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"input\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 151)._onInput() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(151, 999424, null, 0, i9.MatInput, [i1.ElementRef, i7.Platform, [8, null], [2, i2.NgForm], [2, i2.FormGroupDirective], i5.ErrorStateMatcher, [8, null], i10.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(2048, [[64, 4]], i4.MatFormFieldControl, null, [i9.MatInput]), (_l()(), i1.ɵeld(153, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger pull-right\"], [\"mat-raised-button\", \"\"], [\"type\", \"submit\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i11.View_MatButton_0, i11.RenderType_MatButton)), i1.ɵdid(154, 180224, null, 0, i12.MatButton, [i1.ElementRef, i7.Platform, i13.FocusMonitor, [2, i8.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Update Profile\"])), (_l()(), i1.ɵeld(156, 0, null, null, 0, \"div\", [[\"class\", \"clearfix\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(157, 0, null, null, 13, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(158, 0, null, null, 12, \"div\", [[\"class\", \"card card-profile\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(159, 0, null, null, 2, \"div\", [[\"class\", \"card-avatar\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(160, 0, null, null, 1, \"a\", [[\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(161, 0, null, null, 0, \"img\", [[\"class\", \"img\"], [\"src\", \"../assets/img/faces/marc.jpg\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(162, 0, null, null, 8, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(163, 0, null, null, 1, \"h6\", [[\"class\", \"card-category text-gray\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"CEO / Co-Founder\"])), (_l()(), i1.ɵeld(165, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Alec Thompson\"])), (_l()(), i1.ɵeld(167, 0, null, null, 1, \"p\", [[\"class\", \"card-description\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens\\u2019 bed design but the back is... \"])), (_l()(), i1.ɵeld(169, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-danger btn-round\"], [\"href\", \"#pablo\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Follow\"]))], function (_ck, _v) { var currVal_37 = \"\"; var currVal_38 = \"Company (disabled)\"; _ck(_v, 28, 0, currVal_37, currVal_38); var currVal_69 = \"Username\"; _ck(_v, 41, 0, currVal_69); var currVal_100 = \"Email address\"; var currVal_101 = \"email\"; _ck(_v, 54, 0, currVal_100, currVal_101); var currVal_132 = \"Fist Name\"; var currVal_133 = \"text\"; _ck(_v, 68, 0, currVal_132, currVal_133); var currVal_164 = \"Last Name\"; var currVal_165 = \"text\"; _ck(_v, 81, 0, currVal_164, currVal_165); var currVal_196 = \"Adress\"; var currVal_197 = \"text\"; _ck(_v, 95, 0, currVal_196, currVal_197); var currVal_228 = \"City\"; var currVal_229 = \"text\"; _ck(_v, 109, 0, currVal_228, currVal_229); var currVal_260 = \"Country\"; var currVal_261 = \"text\"; _ck(_v, 122, 0, currVal_260, currVal_261); var currVal_292 = \"Postal Code\"; var currVal_293 = \"text\"; _ck(_v, 135, 0, currVal_292, currVal_293); var currVal_324 = \"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"; _ck(_v, 151, 0, currVal_324); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 15).ngClassUntouched; var currVal_1 = i1.ɵnov(_v, 15).ngClassTouched; var currVal_2 = i1.ɵnov(_v, 15).ngClassPristine; var currVal_3 = i1.ɵnov(_v, 15).ngClassDirty; var currVal_4 = i1.ɵnov(_v, 15).ngClassValid; var currVal_5 = i1.ɵnov(_v, 15).ngClassInvalid; var currVal_6 = i1.ɵnov(_v, 15).ngClassPending; _ck(_v, 11, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); var currVal_7 = (i1.ɵnov(_v, 19).appearance == \"standard\"); var currVal_8 = (i1.ɵnov(_v, 19).appearance == \"fill\"); var currVal_9 = (i1.ɵnov(_v, 19).appearance == \"outline\"); var currVal_10 = (i1.ɵnov(_v, 19).appearance == \"legacy\"); var currVal_11 = i1.ɵnov(_v, 19)._control.errorState; var currVal_12 = i1.ɵnov(_v, 19)._canLabelFloat; var currVal_13 = i1.ɵnov(_v, 19)._shouldLabelFloat(); var currVal_14 = i1.ɵnov(_v, 19)._hideControlPlaceholder(); var currVal_15 = i1.ɵnov(_v, 19)._control.disabled; var currVal_16 = i1.ɵnov(_v, 19)._control.autofilled; var currVal_17 = i1.ɵnov(_v, 19)._control.focused; var currVal_18 = (i1.ɵnov(_v, 19).color == \"accent\"); var currVal_19 = (i1.ɵnov(_v, 19).color == \"warn\"); var currVal_20 = i1.ɵnov(_v, 19)._shouldForward(\"untouched\"); var currVal_21 = i1.ɵnov(_v, 19)._shouldForward(\"touched\"); var currVal_22 = i1.ɵnov(_v, 19)._shouldForward(\"pristine\"); var currVal_23 = i1.ɵnov(_v, 19)._shouldForward(\"dirty\"); var currVal_24 = i1.ɵnov(_v, 19)._shouldForward(\"valid\"); var currVal_25 = i1.ɵnov(_v, 19)._shouldForward(\"invalid\"); var currVal_26 = i1.ɵnov(_v, 19)._shouldForward(\"pending\"); var currVal_27 = !i1.ɵnov(_v, 19)._animationsEnabled; _ck(_v, 18, 1, [currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27]); var currVal_28 = i1.ɵnov(_v, 28)._isServer; var currVal_29 = i1.ɵnov(_v, 28).id; var currVal_30 = i1.ɵnov(_v, 28).placeholder; var currVal_31 = i1.ɵnov(_v, 28).disabled; var currVal_32 = i1.ɵnov(_v, 28).required; var currVal_33 = ((i1.ɵnov(_v, 28).readonly && !i1.ɵnov(_v, 28)._isNativeSelect) || null); var currVal_34 = (i1.ɵnov(_v, 28)._ariaDescribedby || null); var currVal_35 = i1.ɵnov(_v, 28).errorState; var currVal_36 = i1.ɵnov(_v, 28).required.toString(); _ck(_v, 27, 0, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36); var currVal_39 = (i1.ɵnov(_v, 32).appearance == \"standard\"); var currVal_40 = (i1.ɵnov(_v, 32).appearance == \"fill\"); var currVal_41 = (i1.ɵnov(_v, 32).appearance == \"outline\"); var currVal_42 = (i1.ɵnov(_v, 32).appearance == \"legacy\"); var currVal_43 = i1.ɵnov(_v, 32)._control.errorState; var currVal_44 = i1.ɵnov(_v, 32)._canLabelFloat; var currVal_45 = i1.ɵnov(_v, 32)._shouldLabelFloat(); var currVal_46 = i1.ɵnov(_v, 32)._hideControlPlaceholder(); var currVal_47 = i1.ɵnov(_v, 32)._control.disabled; var currVal_48 = i1.ɵnov(_v, 32)._control.autofilled; var currVal_49 = i1.ɵnov(_v, 32)._control.focused; var currVal_50 = (i1.ɵnov(_v, 32).color == \"accent\"); var currVal_51 = (i1.ɵnov(_v, 32).color == \"warn\"); var currVal_52 = i1.ɵnov(_v, 32)._shouldForward(\"untouched\"); var currVal_53 = i1.ɵnov(_v, 32)._shouldForward(\"touched\"); var currVal_54 = i1.ɵnov(_v, 32)._shouldForward(\"pristine\"); var currVal_55 = i1.ɵnov(_v, 32)._shouldForward(\"dirty\"); var currVal_56 = i1.ɵnov(_v, 32)._shouldForward(\"valid\"); var currVal_57 = i1.ɵnov(_v, 32)._shouldForward(\"invalid\"); var currVal_58 = i1.ɵnov(_v, 32)._shouldForward(\"pending\"); var currVal_59 = !i1.ɵnov(_v, 32)._animationsEnabled; _ck(_v, 31, 1, [currVal_39, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46, currVal_47, currVal_48, currVal_49, currVal_50, currVal_51, currVal_52, currVal_53, currVal_54, currVal_55, currVal_56, currVal_57, currVal_58, currVal_59]); var currVal_60 = i1.ɵnov(_v, 41)._isServer; var currVal_61 = i1.ɵnov(_v, 41).id; var currVal_62 = i1.ɵnov(_v, 41).placeholder; var currVal_63 = i1.ɵnov(_v, 41).disabled; var currVal_64 = i1.ɵnov(_v, 41).required; var currVal_65 = ((i1.ɵnov(_v, 41).readonly && !i1.ɵnov(_v, 41)._isNativeSelect) || null); var currVal_66 = (i1.ɵnov(_v, 41)._ariaDescribedby || null); var currVal_67 = i1.ɵnov(_v, 41).errorState; var currVal_68 = i1.ɵnov(_v, 41).required.toString(); _ck(_v, 40, 0, currVal_60, currVal_61, currVal_62, currVal_63, currVal_64, currVal_65, currVal_66, currVal_67, currVal_68); var currVal_70 = (i1.ɵnov(_v, 45).appearance == \"standard\"); var currVal_71 = (i1.ɵnov(_v, 45).appearance == \"fill\"); var currVal_72 = (i1.ɵnov(_v, 45).appearance == \"outline\"); var currVal_73 = (i1.ɵnov(_v, 45).appearance == \"legacy\"); var currVal_74 = i1.ɵnov(_v, 45)._control.errorState; var currVal_75 = i1.ɵnov(_v, 45)._canLabelFloat; var currVal_76 = i1.ɵnov(_v, 45)._shouldLabelFloat(); var currVal_77 = i1.ɵnov(_v, 45)._hideControlPlaceholder(); var currVal_78 = i1.ɵnov(_v, 45)._control.disabled; var currVal_79 = i1.ɵnov(_v, 45)._control.autofilled; var currVal_80 = i1.ɵnov(_v, 45)._control.focused; var currVal_81 = (i1.ɵnov(_v, 45).color == \"accent\"); var currVal_82 = (i1.ɵnov(_v, 45).color == \"warn\"); var currVal_83 = i1.ɵnov(_v, 45)._shouldForward(\"untouched\"); var currVal_84 = i1.ɵnov(_v, 45)._shouldForward(\"touched\"); var currVal_85 = i1.ɵnov(_v, 45)._shouldForward(\"pristine\"); var currVal_86 = i1.ɵnov(_v, 45)._shouldForward(\"dirty\"); var currVal_87 = i1.ɵnov(_v, 45)._shouldForward(\"valid\"); var currVal_88 = i1.ɵnov(_v, 45)._shouldForward(\"invalid\"); var currVal_89 = i1.ɵnov(_v, 45)._shouldForward(\"pending\"); var currVal_90 = !i1.ɵnov(_v, 45)._animationsEnabled; _ck(_v, 44, 1, [currVal_70, currVal_71, currVal_72, currVal_73, currVal_74, currVal_75, currVal_76, currVal_77, currVal_78, currVal_79, currVal_80, currVal_81, currVal_82, currVal_83, currVal_84, currVal_85, currVal_86, currVal_87, currVal_88, currVal_89, currVal_90]); var currVal_91 = i1.ɵnov(_v, 54)._isServer; var currVal_92 = i1.ɵnov(_v, 54).id; var currVal_93 = i1.ɵnov(_v, 54).placeholder; var currVal_94 = i1.ɵnov(_v, 54).disabled; var currVal_95 = i1.ɵnov(_v, 54).required; var currVal_96 = ((i1.ɵnov(_v, 54).readonly && !i1.ɵnov(_v, 54)._isNativeSelect) || null); var currVal_97 = (i1.ɵnov(_v, 54)._ariaDescribedby || null); var currVal_98 = i1.ɵnov(_v, 54).errorState; var currVal_99 = i1.ɵnov(_v, 54).required.toString(); _ck(_v, 53, 0, currVal_91, currVal_92, currVal_93, currVal_94, currVal_95, currVal_96, currVal_97, currVal_98, currVal_99); var currVal_102 = (i1.ɵnov(_v, 59).appearance == \"standard\"); var currVal_103 = (i1.ɵnov(_v, 59).appearance == \"fill\"); var currVal_104 = (i1.ɵnov(_v, 59).appearance == \"outline\"); var currVal_105 = (i1.ɵnov(_v, 59).appearance == \"legacy\"); var currVal_106 = i1.ɵnov(_v, 59)._control.errorState; var currVal_107 = i1.ɵnov(_v, 59)._canLabelFloat; var currVal_108 = i1.ɵnov(_v, 59)._shouldLabelFloat(); var currVal_109 = i1.ɵnov(_v, 59)._hideControlPlaceholder(); var currVal_110 = i1.ɵnov(_v, 59)._control.disabled; var currVal_111 = i1.ɵnov(_v, 59)._control.autofilled; var currVal_112 = i1.ɵnov(_v, 59)._control.focused; var currVal_113 = (i1.ɵnov(_v, 59).color == \"accent\"); var currVal_114 = (i1.ɵnov(_v, 59).color == \"warn\"); var currVal_115 = i1.ɵnov(_v, 59)._shouldForward(\"untouched\"); var currVal_116 = i1.ɵnov(_v, 59)._shouldForward(\"touched\"); var currVal_117 = i1.ɵnov(_v, 59)._shouldForward(\"pristine\"); var currVal_118 = i1.ɵnov(_v, 59)._shouldForward(\"dirty\"); var currVal_119 = i1.ɵnov(_v, 59)._shouldForward(\"valid\"); var currVal_120 = i1.ɵnov(_v, 59)._shouldForward(\"invalid\"); var currVal_121 = i1.ɵnov(_v, 59)._shouldForward(\"pending\"); var currVal_122 = !i1.ɵnov(_v, 59)._animationsEnabled; _ck(_v, 58, 1, [currVal_102, currVal_103, currVal_104, currVal_105, currVal_106, currVal_107, currVal_108, currVal_109, currVal_110, currVal_111, currVal_112, currVal_113, currVal_114, currVal_115, currVal_116, currVal_117, currVal_118, currVal_119, currVal_120, currVal_121, currVal_122]); var currVal_123 = i1.ɵnov(_v, 68)._isServer; var currVal_124 = i1.ɵnov(_v, 68).id; var currVal_125 = i1.ɵnov(_v, 68).placeholder; var currVal_126 = i1.ɵnov(_v, 68).disabled; var currVal_127 = i1.ɵnov(_v, 68).required; var currVal_128 = ((i1.ɵnov(_v, 68).readonly && !i1.ɵnov(_v, 68)._isNativeSelect) || null); var currVal_129 = (i1.ɵnov(_v, 68)._ariaDescribedby || null); var currVal_130 = i1.ɵnov(_v, 68).errorState; var currVal_131 = i1.ɵnov(_v, 68).required.toString(); _ck(_v, 67, 0, currVal_123, currVal_124, currVal_125, currVal_126, currVal_127, currVal_128, currVal_129, currVal_130, currVal_131); var currVal_134 = (i1.ɵnov(_v, 72).appearance == \"standard\"); var currVal_135 = (i1.ɵnov(_v, 72).appearance == \"fill\"); var currVal_136 = (i1.ɵnov(_v, 72).appearance == \"outline\"); var currVal_137 = (i1.ɵnov(_v, 72).appearance == \"legacy\"); var currVal_138 = i1.ɵnov(_v, 72)._control.errorState; var currVal_139 = i1.ɵnov(_v, 72)._canLabelFloat; var currVal_140 = i1.ɵnov(_v, 72)._shouldLabelFloat(); var currVal_141 = i1.ɵnov(_v, 72)._hideControlPlaceholder(); var currVal_142 = i1.ɵnov(_v, 72)._control.disabled; var currVal_143 = i1.ɵnov(_v, 72)._control.autofilled; var currVal_144 = i1.ɵnov(_v, 72)._control.focused; var currVal_145 = (i1.ɵnov(_v, 72).color == \"accent\"); var currVal_146 = (i1.ɵnov(_v, 72).color == \"warn\"); var currVal_147 = i1.ɵnov(_v, 72)._shouldForward(\"untouched\"); var currVal_148 = i1.ɵnov(_v, 72)._shouldForward(\"touched\"); var currVal_149 = i1.ɵnov(_v, 72)._shouldForward(\"pristine\"); var currVal_150 = i1.ɵnov(_v, 72)._shouldForward(\"dirty\"); var currVal_151 = i1.ɵnov(_v, 72)._shouldForward(\"valid\"); var currVal_152 = i1.ɵnov(_v, 72)._shouldForward(\"invalid\"); var currVal_153 = i1.ɵnov(_v, 72)._shouldForward(\"pending\"); var currVal_154 = !i1.ɵnov(_v, 72)._animationsEnabled; _ck(_v, 71, 1, [currVal_134, currVal_135, currVal_136, currVal_137, currVal_138, currVal_139, currVal_140, currVal_141, currVal_142, currVal_143, currVal_144, currVal_145, currVal_146, currVal_147, currVal_148, currVal_149, currVal_150, currVal_151, currVal_152, currVal_153, currVal_154]); var currVal_155 = i1.ɵnov(_v, 81)._isServer; var currVal_156 = i1.ɵnov(_v, 81).id; var currVal_157 = i1.ɵnov(_v, 81).placeholder; var currVal_158 = i1.ɵnov(_v, 81).disabled; var currVal_159 = i1.ɵnov(_v, 81).required; var currVal_160 = ((i1.ɵnov(_v, 81).readonly && !i1.ɵnov(_v, 81)._isNativeSelect) || null); var currVal_161 = (i1.ɵnov(_v, 81)._ariaDescribedby || null); var currVal_162 = i1.ɵnov(_v, 81).errorState; var currVal_163 = i1.ɵnov(_v, 81).required.toString(); _ck(_v, 80, 0, currVal_155, currVal_156, currVal_157, currVal_158, currVal_159, currVal_160, currVal_161, currVal_162, currVal_163); var currVal_166 = (i1.ɵnov(_v, 86).appearance == \"standard\"); var currVal_167 = (i1.ɵnov(_v, 86).appearance == \"fill\"); var currVal_168 = (i1.ɵnov(_v, 86).appearance == \"outline\"); var currVal_169 = (i1.ɵnov(_v, 86).appearance == \"legacy\"); var currVal_170 = i1.ɵnov(_v, 86)._control.errorState; var currVal_171 = i1.ɵnov(_v, 86)._canLabelFloat; var currVal_172 = i1.ɵnov(_v, 86)._shouldLabelFloat(); var currVal_173 = i1.ɵnov(_v, 86)._hideControlPlaceholder(); var currVal_174 = i1.ɵnov(_v, 86)._control.disabled; var currVal_175 = i1.ɵnov(_v, 86)._control.autofilled; var currVal_176 = i1.ɵnov(_v, 86)._control.focused; var currVal_177 = (i1.ɵnov(_v, 86).color == \"accent\"); var currVal_178 = (i1.ɵnov(_v, 86).color == \"warn\"); var currVal_179 = i1.ɵnov(_v, 86)._shouldForward(\"untouched\"); var currVal_180 = i1.ɵnov(_v, 86)._shouldForward(\"touched\"); var currVal_181 = i1.ɵnov(_v, 86)._shouldForward(\"pristine\"); var currVal_182 = i1.ɵnov(_v, 86)._shouldForward(\"dirty\"); var currVal_183 = i1.ɵnov(_v, 86)._shouldForward(\"valid\"); var currVal_184 = i1.ɵnov(_v, 86)._shouldForward(\"invalid\"); var currVal_185 = i1.ɵnov(_v, 86)._shouldForward(\"pending\"); var currVal_186 = !i1.ɵnov(_v, 86)._animationsEnabled; _ck(_v, 85, 1, [currVal_166, currVal_167, currVal_168, currVal_169, currVal_170, currVal_171, currVal_172, currVal_173, currVal_174, currVal_175, currVal_176, currVal_177, currVal_178, currVal_179, currVal_180, currVal_181, currVal_182, currVal_183, currVal_184, currVal_185, currVal_186]); var currVal_187 = i1.ɵnov(_v, 95)._isServer; var currVal_188 = i1.ɵnov(_v, 95).id; var currVal_189 = i1.ɵnov(_v, 95).placeholder; var currVal_190 = i1.ɵnov(_v, 95).disabled; var currVal_191 = i1.ɵnov(_v, 95).required; var currVal_192 = ((i1.ɵnov(_v, 95).readonly && !i1.ɵnov(_v, 95)._isNativeSelect) || null); var currVal_193 = (i1.ɵnov(_v, 95)._ariaDescribedby || null); var currVal_194 = i1.ɵnov(_v, 95).errorState; var currVal_195 = i1.ɵnov(_v, 95).required.toString(); _ck(_v, 94, 0, currVal_187, currVal_188, currVal_189, currVal_190, currVal_191, currVal_192, currVal_193, currVal_194, currVal_195); var currVal_198 = (i1.ɵnov(_v, 100).appearance == \"standard\"); var currVal_199 = (i1.ɵnov(_v, 100).appearance == \"fill\"); var currVal_200 = (i1.ɵnov(_v, 100).appearance == \"outline\"); var currVal_201 = (i1.ɵnov(_v, 100).appearance == \"legacy\"); var currVal_202 = i1.ɵnov(_v, 100)._control.errorState; var currVal_203 = i1.ɵnov(_v, 100)._canLabelFloat; var currVal_204 = i1.ɵnov(_v, 100)._shouldLabelFloat(); var currVal_205 = i1.ɵnov(_v, 100)._hideControlPlaceholder(); var currVal_206 = i1.ɵnov(_v, 100)._control.disabled; var currVal_207 = i1.ɵnov(_v, 100)._control.autofilled; var currVal_208 = i1.ɵnov(_v, 100)._control.focused; var currVal_209 = (i1.ɵnov(_v, 100).color == \"accent\"); var currVal_210 = (i1.ɵnov(_v, 100).color == \"warn\"); var currVal_211 = i1.ɵnov(_v, 100)._shouldForward(\"untouched\"); var currVal_212 = i1.ɵnov(_v, 100)._shouldForward(\"touched\"); var currVal_213 = i1.ɵnov(_v, 100)._shouldForward(\"pristine\"); var currVal_214 = i1.ɵnov(_v, 100)._shouldForward(\"dirty\"); var currVal_215 = i1.ɵnov(_v, 100)._shouldForward(\"valid\"); var currVal_216 = i1.ɵnov(_v, 100)._shouldForward(\"invalid\"); var currVal_217 = i1.ɵnov(_v, 100)._shouldForward(\"pending\"); var currVal_218 = !i1.ɵnov(_v, 100)._animationsEnabled; _ck(_v, 99, 1, [currVal_198, currVal_199, currVal_200, currVal_201, currVal_202, currVal_203, currVal_204, currVal_205, currVal_206, currVal_207, currVal_208, currVal_209, currVal_210, currVal_211, currVal_212, currVal_213, currVal_214, currVal_215, currVal_216, currVal_217, currVal_218]); var currVal_219 = i1.ɵnov(_v, 109)._isServer; var currVal_220 = i1.ɵnov(_v, 109).id; var currVal_221 = i1.ɵnov(_v, 109).placeholder; var currVal_222 = i1.ɵnov(_v, 109).disabled; var currVal_223 = i1.ɵnov(_v, 109).required; var currVal_224 = ((i1.ɵnov(_v, 109).readonly && !i1.ɵnov(_v, 109)._isNativeSelect) || null); var currVal_225 = (i1.ɵnov(_v, 109)._ariaDescribedby || null); var currVal_226 = i1.ɵnov(_v, 109).errorState; var currVal_227 = i1.ɵnov(_v, 109).required.toString(); _ck(_v, 108, 0, currVal_219, currVal_220, currVal_221, currVal_222, currVal_223, currVal_224, currVal_225, currVal_226, currVal_227); var currVal_230 = (i1.ɵnov(_v, 113).appearance == \"standard\"); var currVal_231 = (i1.ɵnov(_v, 113).appearance == \"fill\"); var currVal_232 = (i1.ɵnov(_v, 113).appearance == \"outline\"); var currVal_233 = (i1.ɵnov(_v, 113).appearance == \"legacy\"); var currVal_234 = i1.ɵnov(_v, 113)._control.errorState; var currVal_235 = i1.ɵnov(_v, 113)._canLabelFloat; var currVal_236 = i1.ɵnov(_v, 113)._shouldLabelFloat(); var currVal_237 = i1.ɵnov(_v, 113)._hideControlPlaceholder(); var currVal_238 = i1.ɵnov(_v, 113)._control.disabled; var currVal_239 = i1.ɵnov(_v, 113)._control.autofilled; var currVal_240 = i1.ɵnov(_v, 113)._control.focused; var currVal_241 = (i1.ɵnov(_v, 113).color == \"accent\"); var currVal_242 = (i1.ɵnov(_v, 113).color == \"warn\"); var currVal_243 = i1.ɵnov(_v, 113)._shouldForward(\"untouched\"); var currVal_244 = i1.ɵnov(_v, 113)._shouldForward(\"touched\"); var currVal_245 = i1.ɵnov(_v, 113)._shouldForward(\"pristine\"); var currVal_246 = i1.ɵnov(_v, 113)._shouldForward(\"dirty\"); var currVal_247 = i1.ɵnov(_v, 113)._shouldForward(\"valid\"); var currVal_248 = i1.ɵnov(_v, 113)._shouldForward(\"invalid\"); var currVal_249 = i1.ɵnov(_v, 113)._shouldForward(\"pending\"); var currVal_250 = !i1.ɵnov(_v, 113)._animationsEnabled; _ck(_v, 112, 1, [currVal_230, currVal_231, currVal_232, currVal_233, currVal_234, currVal_235, currVal_236, currVal_237, currVal_238, currVal_239, currVal_240, currVal_241, currVal_242, currVal_243, currVal_244, currVal_245, currVal_246, currVal_247, currVal_248, currVal_249, currVal_250]); var currVal_251 = i1.ɵnov(_v, 122)._isServer; var currVal_252 = i1.ɵnov(_v, 122).id; var currVal_253 = i1.ɵnov(_v, 122).placeholder; var currVal_254 = i1.ɵnov(_v, 122).disabled; var currVal_255 = i1.ɵnov(_v, 122).required; var currVal_256 = ((i1.ɵnov(_v, 122).readonly && !i1.ɵnov(_v, 122)._isNativeSelect) || null); var currVal_257 = (i1.ɵnov(_v, 122)._ariaDescribedby || null); var currVal_258 = i1.ɵnov(_v, 122).errorState; var currVal_259 = i1.ɵnov(_v, 122).required.toString(); _ck(_v, 121, 0, currVal_251, currVal_252, currVal_253, currVal_254, currVal_255, currVal_256, currVal_257, currVal_258, currVal_259); var currVal_262 = (i1.ɵnov(_v, 126).appearance == \"standard\"); var currVal_263 = (i1.ɵnov(_v, 126).appearance == \"fill\"); var currVal_264 = (i1.ɵnov(_v, 126).appearance == \"outline\"); var currVal_265 = (i1.ɵnov(_v, 126).appearance == \"legacy\"); var currVal_266 = i1.ɵnov(_v, 126)._control.errorState; var currVal_267 = i1.ɵnov(_v, 126)._canLabelFloat; var currVal_268 = i1.ɵnov(_v, 126)._shouldLabelFloat(); var currVal_269 = i1.ɵnov(_v, 126)._hideControlPlaceholder(); var currVal_270 = i1.ɵnov(_v, 126)._control.disabled; var currVal_271 = i1.ɵnov(_v, 126)._control.autofilled; var currVal_272 = i1.ɵnov(_v, 126)._control.focused; var currVal_273 = (i1.ɵnov(_v, 126).color == \"accent\"); var currVal_274 = (i1.ɵnov(_v, 126).color == \"warn\"); var currVal_275 = i1.ɵnov(_v, 126)._shouldForward(\"untouched\"); var currVal_276 = i1.ɵnov(_v, 126)._shouldForward(\"touched\"); var currVal_277 = i1.ɵnov(_v, 126)._shouldForward(\"pristine\"); var currVal_278 = i1.ɵnov(_v, 126)._shouldForward(\"dirty\"); var currVal_279 = i1.ɵnov(_v, 126)._shouldForward(\"valid\"); var currVal_280 = i1.ɵnov(_v, 126)._shouldForward(\"invalid\"); var currVal_281 = i1.ɵnov(_v, 126)._shouldForward(\"pending\"); var currVal_282 = !i1.ɵnov(_v, 126)._animationsEnabled; _ck(_v, 125, 1, [currVal_262, currVal_263, currVal_264, currVal_265, currVal_266, currVal_267, currVal_268, currVal_269, currVal_270, currVal_271, currVal_272, currVal_273, currVal_274, currVal_275, currVal_276, currVal_277, currVal_278, currVal_279, currVal_280, currVal_281, currVal_282]); var currVal_283 = i1.ɵnov(_v, 135)._isServer; var currVal_284 = i1.ɵnov(_v, 135).id; var currVal_285 = i1.ɵnov(_v, 135).placeholder; var currVal_286 = i1.ɵnov(_v, 135).disabled; var currVal_287 = i1.ɵnov(_v, 135).required; var currVal_288 = ((i1.ɵnov(_v, 135).readonly && !i1.ɵnov(_v, 135)._isNativeSelect) || null); var currVal_289 = (i1.ɵnov(_v, 135)._ariaDescribedby || null); var currVal_290 = i1.ɵnov(_v, 135).errorState; var currVal_291 = i1.ɵnov(_v, 135).required.toString(); _ck(_v, 134, 0, currVal_283, currVal_284, currVal_285, currVal_286, currVal_287, currVal_288, currVal_289, currVal_290, currVal_291); var currVal_294 = (i1.ɵnov(_v, 142).appearance == \"standard\"); var currVal_295 = (i1.ɵnov(_v, 142).appearance == \"fill\"); var currVal_296 = (i1.ɵnov(_v, 142).appearance == \"outline\"); var currVal_297 = (i1.ɵnov(_v, 142).appearance == \"legacy\"); var currVal_298 = i1.ɵnov(_v, 142)._control.errorState; var currVal_299 = i1.ɵnov(_v, 142)._canLabelFloat; var currVal_300 = i1.ɵnov(_v, 142)._shouldLabelFloat(); var currVal_301 = i1.ɵnov(_v, 142)._hideControlPlaceholder(); var currVal_302 = i1.ɵnov(_v, 142)._control.disabled; var currVal_303 = i1.ɵnov(_v, 142)._control.autofilled; var currVal_304 = i1.ɵnov(_v, 142)._control.focused; var currVal_305 = (i1.ɵnov(_v, 142).color == \"accent\"); var currVal_306 = (i1.ɵnov(_v, 142).color == \"warn\"); var currVal_307 = i1.ɵnov(_v, 142)._shouldForward(\"untouched\"); var currVal_308 = i1.ɵnov(_v, 142)._shouldForward(\"touched\"); var currVal_309 = i1.ɵnov(_v, 142)._shouldForward(\"pristine\"); var currVal_310 = i1.ɵnov(_v, 142)._shouldForward(\"dirty\"); var currVal_311 = i1.ɵnov(_v, 142)._shouldForward(\"valid\"); var currVal_312 = i1.ɵnov(_v, 142)._shouldForward(\"invalid\"); var currVal_313 = i1.ɵnov(_v, 142)._shouldForward(\"pending\"); var currVal_314 = !i1.ɵnov(_v, 142)._animationsEnabled; _ck(_v, 141, 1, [currVal_294, currVal_295, currVal_296, currVal_297, currVal_298, currVal_299, currVal_300, currVal_301, currVal_302, currVal_303, currVal_304, currVal_305, currVal_306, currVal_307, currVal_308, currVal_309, currVal_310, currVal_311, currVal_312, currVal_313, currVal_314]); var currVal_315 = i1.ɵnov(_v, 151)._isServer; var currVal_316 = i1.ɵnov(_v, 151).id; var currVal_317 = i1.ɵnov(_v, 151).placeholder; var currVal_318 = i1.ɵnov(_v, 151).disabled; var currVal_319 = i1.ɵnov(_v, 151).required; var currVal_320 = ((i1.ɵnov(_v, 151).readonly && !i1.ɵnov(_v, 151)._isNativeSelect) || null); var currVal_321 = (i1.ɵnov(_v, 151)._ariaDescribedby || null); var currVal_322 = i1.ɵnov(_v, 151).errorState; var currVal_323 = i1.ɵnov(_v, 151).required.toString(); _ck(_v, 150, 0, currVal_315, currVal_316, currVal_317, currVal_318, currVal_319, currVal_320, currVal_321, currVal_322, currVal_323); var currVal_325 = (i1.ɵnov(_v, 154).disabled || null); var currVal_326 = (i1.ɵnov(_v, 154)._animationMode === \"NoopAnimations\"); _ck(_v, 153, 0, currVal_325, currVal_326); }); }\nexport function View_UserProfileComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-user-profile\", [], null, null, null, View_UserProfileComponent_0, RenderType_UserProfileComponent)), i1.ɵdid(1, 114688, null, 0, i14.UserProfileComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserProfileComponentNgFactory = i1.ɵccf(\"app-user-profile\", i14.UserProfileComponent, View_UserProfileComponent_Host_0, {}, {}, []);\nexport { UserProfileComponentNgFactory as UserProfileComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-8\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title\">Edit Profile</h4>\n                      <p class=\"card-category\">Complete your profile</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <form>\n                          <div class=\"row\">\n                              <div class=\"col-md-5\">\n                                <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Company (disabled)\" disabled>\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-3\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Username\">\n                                  </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Email address\" type=\"email\">\n                                  </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-6\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Fist Name\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-6\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Last Name\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-12\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Adress\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"City\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Country\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                              <div class=\"col-md-4\">\n                                <mat-form-field class=\"example-full-width\">\n                                  <input matInput placeholder=\"Postal Code\" type=\"text\">\n                                </mat-form-field>\n                              </div>\n                          </div>\n                          <div class=\"row\">\n                              <div class=\"col-md-12\">\n                                <label>About Me</label>\n                                <mat-form-field class=\"example-full-width\">\n                                   <textarea matInput placeholder=\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"></textarea>\n                                 </mat-form-field>\n                                  <!-- <div class=\"form-group\">\n\n                                      <div class=\"form-group\">\n                                          <label class=\"bmd-label-floating\"> Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.</label>\n                                          <textarea class=\"form-control\" rows=\"5\"></textarea>\n                                      </div>\n                                  </div> -->\n                              </div>\n                          </div>\n                          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">Update Profile</button>\n                          <div class=\"clearfix\"></div>\n                      </form>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                  <div class=\"card-avatar\">\n                      <a href=\"#pablo\">\n                          <img class=\"img\" src=\"../assets/img/faces/marc.jpg\" />\n                      </a>\n                  </div>\n                  <div class=\"card-body\">\n                      <h6 class=\"card-category text-gray\">CEO / Co-Founder</h6>\n                      <h4 class=\"card-title\">Alec Thompson</h4>\n                      <p class=\"card-description\">\n                          Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\n                      </p>\n                      <a href=\"#pablo\" class=\"btn btn-danger btn-round\">Follow</a>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-list',\n  templateUrl: './table-list.component.html',\n  styleUrls: ['./table-list.component.css']\n})\nexport class TableListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./table-list.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./table-list.component\";\nvar styles_TableListComponent = [i0.styles];\nvar RenderType_TableListComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_TableListComponent, data: {} });\nexport { RenderType_TableListComponent as RenderType_TableListComponent };\nexport function View_TableListComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 178, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 177, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 176, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 87, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 86, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h4\", [[\"class\", \"card-title \"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Simple Table\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Here is a subtitle for this table\"])), (_l()(), i1.ɵeld(10, 0, null, null, 80, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 79, \"div\", [[\"class\", \"table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 0, null, null, 78, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(13, 0, null, null, 10, \"thead\", [[\"class\", \" text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" ID \"])), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Name \"])), (_l()(), i1.ɵeld(18, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Country \"])), (_l()(), i1.ɵeld(20, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" City \"])), (_l()(), i1.ɵeld(22, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Salary \"])), (_l()(), i1.ɵeld(24, 0, null, null, 66, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(25, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(26, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 1 \"])), (_l()(), i1.ɵeld(28, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Dakota Rice \"])), (_l()(), i1.ɵeld(30, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Niger \"])), (_l()(), i1.ɵeld(32, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Oud-Turnhout \"])), (_l()(), i1.ɵeld(34, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $36,738 \"])), (_l()(), i1.ɵeld(36, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(37, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 2 \"])), (_l()(), i1.ɵeld(39, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Minerva Hooper \"])), (_l()(), i1.ɵeld(41, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Cura\\u00E7ao \"])), (_l()(), i1.ɵeld(43, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Sinaai-Waas \"])), (_l()(), i1.ɵeld(45, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $23,789 \"])), (_l()(), i1.ɵeld(47, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(48, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 3 \"])), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Sage Rodriguez \"])), (_l()(), i1.ɵeld(52, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Netherlands \"])), (_l()(), i1.ɵeld(54, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Baileux \"])), (_l()(), i1.ɵeld(56, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $56,142 \"])), (_l()(), i1.ɵeld(58, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(59, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 4 \"])), (_l()(), i1.ɵeld(61, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Philip Chaney \"])), (_l()(), i1.ɵeld(63, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Korea, South \"])), (_l()(), i1.ɵeld(65, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Overland Park \"])), (_l()(), i1.ɵeld(67, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $38,735 \"])), (_l()(), i1.ɵeld(69, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(70, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 5 \"])), (_l()(), i1.ɵeld(72, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Doris Greene \"])), (_l()(), i1.ɵeld(74, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Malawi \"])), (_l()(), i1.ɵeld(76, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Feldkirchen in K\\u00E4rnten \"])), (_l()(), i1.ɵeld(78, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $63,542 \"])), (_l()(), i1.ɵeld(80, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(81, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 6 \"])), (_l()(), i1.ɵeld(83, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Mason Porter \"])), (_l()(), i1.ɵeld(85, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Chile \"])), (_l()(), i1.ɵeld(87, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Gloucester \"])), (_l()(), i1.ɵeld(89, 0, null, null, 1, \"td\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $78,615 \"])), (_l()(), i1.ɵeld(91, 0, null, null, 87, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(92, 0, null, null, 86, \"div\", [[\"class\", \"card card-plain\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(93, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(94, 0, null, null, 1, \"h4\", [[\"class\", \"card-title mt-0\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Table on Plain Background\"])), (_l()(), i1.ɵeld(96, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Here is a subtitle for this table\"])), (_l()(), i1.ɵeld(98, 0, null, null, 80, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(99, 0, null, null, 79, \"div\", [[\"class\", \"table-responsive\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(100, 0, null, null, 78, \"table\", [[\"class\", \"table table-hover\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(101, 0, null, null, 10, \"thead\", [[\"class\", \"\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(102, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" ID \"])), (_l()(), i1.ɵeld(104, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Name \"])), (_l()(), i1.ɵeld(106, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Country \"])), (_l()(), i1.ɵeld(108, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" City \"])), (_l()(), i1.ɵeld(110, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Salary \"])), (_l()(), i1.ɵeld(112, 0, null, null, 66, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(113, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(114, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 1 \"])), (_l()(), i1.ɵeld(116, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Dakota Rice \"])), (_l()(), i1.ɵeld(118, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Niger \"])), (_l()(), i1.ɵeld(120, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Oud-Turnhout \"])), (_l()(), i1.ɵeld(122, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $36,738 \"])), (_l()(), i1.ɵeld(124, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(125, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 2 \"])), (_l()(), i1.ɵeld(127, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Minerva Hooper \"])), (_l()(), i1.ɵeld(129, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Cura\\u00E7ao \"])), (_l()(), i1.ɵeld(131, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Sinaai-Waas \"])), (_l()(), i1.ɵeld(133, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $23,789 \"])), (_l()(), i1.ɵeld(135, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(136, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 3 \"])), (_l()(), i1.ɵeld(138, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Sage Rodriguez \"])), (_l()(), i1.ɵeld(140, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Netherlands \"])), (_l()(), i1.ɵeld(142, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Baileux \"])), (_l()(), i1.ɵeld(144, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $56,142 \"])), (_l()(), i1.ɵeld(146, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(147, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 4 \"])), (_l()(), i1.ɵeld(149, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Philip Chaney \"])), (_l()(), i1.ɵeld(151, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Korea, South \"])), (_l()(), i1.ɵeld(153, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Overland Park \"])), (_l()(), i1.ɵeld(155, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $38,735 \"])), (_l()(), i1.ɵeld(157, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(158, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 5 \"])), (_l()(), i1.ɵeld(160, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Doris Greene \"])), (_l()(), i1.ɵeld(162, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Malawi \"])), (_l()(), i1.ɵeld(164, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Feldkirchen in K\\u00E4rnten \"])), (_l()(), i1.ɵeld(166, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $63,542 \"])), (_l()(), i1.ɵeld(168, 0, null, null, 10, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(169, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" 6 \"])), (_l()(), i1.ɵeld(171, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Mason Porter \"])), (_l()(), i1.ɵeld(173, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Chile \"])), (_l()(), i1.ɵeld(175, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Gloucester \"])), (_l()(), i1.ɵeld(177, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" $78,615 \"]))], null, null); }\nexport function View_TableListComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-table-list\", [], null, null, null, View_TableListComponent_0, RenderType_TableListComponent)), i1.ɵdid(1, 114688, null, 0, i2.TableListComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableListComponentNgFactory = i1.ɵccf(\"app-table-list\", i2.TableListComponent, View_TableListComponent_Host_0, {}, {}, []);\nexport { TableListComponentNgFactory as TableListComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-12\">\n              <div class=\"card\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title \">Simple Table</h4>\n                      <p class=\"card-category\"> Here is a subtitle for this table</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"table-responsive\">\n                          <table class=\"table\">\n                              <thead class=\" text-primary\">\n                                  <th>\n                                      ID\n                                  </th>\n                                  <th>\n                                      Name\n                                  </th>\n                                  <th>\n                                      Country\n                                  </th>\n                                  <th>\n                                      City\n                                  </th>\n                                  <th>\n                                      Salary\n                                  </th>\n                              </thead>\n                              <tbody>\n                                  <tr>\n                                      <td>\n                                          1\n                                      </td>\n                                      <td>\n                                          Dakota Rice\n                                      </td>\n                                      <td>\n                                          Niger\n                                      </td>\n                                      <td>\n                                          Oud-Turnhout\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $36,738\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          2\n                                      </td>\n                                      <td>\n                                          Minerva Hooper\n                                      </td>\n                                      <td>\n                                          Curaçao\n                                      </td>\n                                      <td>\n                                          Sinaai-Waas\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $23,789\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          3\n                                      </td>\n                                      <td>\n                                          Sage Rodriguez\n                                      </td>\n                                      <td>\n                                          Netherlands\n                                      </td>\n                                      <td>\n                                          Baileux\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $56,142\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          4\n                                      </td>\n                                      <td>\n                                          Philip Chaney\n                                      </td>\n                                      <td>\n                                          Korea, South\n                                      </td>\n                                      <td>\n                                          Overland Park\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $38,735\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          5\n                                      </td>\n                                      <td>\n                                          Doris Greene\n                                      </td>\n                                      <td>\n                                          Malawi\n                                      </td>\n                                      <td>\n                                          Feldkirchen in Kärnten\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $63,542\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          6\n                                      </td>\n                                      <td>\n                                          Mason Porter\n                                      </td>\n                                      <td>\n                                          Chile\n                                      </td>\n                                      <td>\n                                          Gloucester\n                                      </td>\n                                      <td class=\"text-primary\">\n                                          $78,615\n                                      </td>\n                                  </tr>\n                              </tbody>\n                          </table>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-12\">\n              <div class=\"card card-plain\">\n                  <div class=\"card-header card-header-danger\">\n                      <h4 class=\"card-title mt-0\"> Table on Plain Background</h4>\n                      <p class=\"card-category\"> Here is a subtitle for this table</p>\n                  </div>\n                  <div class=\"card-body\">\n                      <div class=\"table-responsive\">\n                          <table class=\"table table-hover\">\n                              <thead class=\"\">\n                                  <th>\n                                      ID\n                                  </th>\n                                  <th>\n                                      Name\n                                  </th>\n                                  <th>\n                                      Country\n                                  </th>\n                                  <th>\n                                      City\n                                  </th>\n                                  <th>\n                                      Salary\n                                  </th>\n                              </thead>\n                              <tbody>\n                                  <tr>\n                                      <td>\n                                          1\n                                      </td>\n                                      <td>\n                                          Dakota Rice\n                                      </td>\n                                      <td>\n                                          Niger\n                                      </td>\n                                      <td>\n                                          Oud-Turnhout\n                                      </td>\n                                      <td>\n                                          $36,738\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          2\n                                      </td>\n                                      <td>\n                                          Minerva Hooper\n                                      </td>\n                                      <td>\n                                          Curaçao\n                                      </td>\n                                      <td>\n                                          Sinaai-Waas\n                                      </td>\n                                      <td>\n                                          $23,789\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          3\n                                      </td>\n                                      <td>\n                                          Sage Rodriguez\n                                      </td>\n                                      <td>\n                                          Netherlands\n                                      </td>\n                                      <td>\n                                          Baileux\n                                      </td>\n                                      <td>\n                                          $56,142\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          4\n                                      </td>\n                                      <td>\n                                          Philip Chaney\n                                      </td>\n                                      <td>\n                                          Korea, South\n                                      </td>\n                                      <td>\n                                          Overland Park\n                                      </td>\n                                      <td>\n                                          $38,735\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          5\n                                      </td>\n                                      <td>\n                                          Doris Greene\n                                      </td>\n                                      <td>\n                                          Malawi\n                                      </td>\n                                      <td>\n                                          Feldkirchen in Kärnten\n                                      </td>\n                                      <td>\n                                          $63,542\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td>\n                                          6\n                                      </td>\n                                      <td>\n                                          Mason Porter\n                                      </td>\n                                      <td>\n                                          Chile\n                                      </td>\n                                      <td>\n                                          Gloucester\n                                      </td>\n                                      <td>\n                                          $78,615\n                                      </td>\n                                  </tr>\n                              </tbody>\n                          </table>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typography',\n  templateUrl: './typography.component.html',\n  styleUrls: ['./typography.component.css']\n})\nexport class TypographyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./typography.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./typography.component\";\nvar styles_TypographyComponent = [i0.styles];\nvar RenderType_TypographyComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_TypographyComponent, data: {} });\nexport { RenderType_TypographyComponent as RenderType_TypographyComponent };\nexport function View_TypographyComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 94, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 93, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 92, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Dashboard Heading\"])), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Created using Roboto Font Family\"])), (_l()(), i1.ɵeld(8, 0, null, null, 86, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 0, null, null, 85, \"div\", [[\"id\", \"typography\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 2, \"div\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Typography\"])), (_l()(), i1.ɵeld(13, 0, null, null, 81, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 3, \"h1\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 1\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard \"])), (_l()(), i1.ɵeld(19, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(20, 0, null, null, 3, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(21, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 2\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵeld(24, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(25, 0, null, null, 3, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(26, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 3\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵeld(29, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(30, 0, null, null, 3, \"h4\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(31, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 4\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵeld(34, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(35, 0, null, null, 3, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(36, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 5\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵeld(39, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(40, 0, null, null, 3, \"h6\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(41, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Header 6\"])), (_l()(), i1.ɵted(-1, null, [\"The Life of Material Dashboard\"])), (_l()(), i1.ɵeld(44, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(45, 0, null, null, 3, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(46, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Paragraph\"])), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that\\u2019s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\"])), (_l()(), i1.ɵeld(49, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Quote\"])), (_l()(), i1.ɵeld(52, 0, null, null, 4, \"blockquote\", [[\"class\", \"blockquote\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(53, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that\\u2019s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at. \"])), (_l()(), i1.ɵeld(55, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Kanye West, Musician \"])), (_l()(), i1.ɵeld(57, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(58, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Muted Text\"])), (_l()(), i1.ɵeld(60, 0, null, null, 1, \"p\", [[\"class\", \"text-muted\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(62, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(63, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Primary Text\"])), (_l()(), i1.ɵeld(65, 0, null, null, 1, \"p\", [[\"class\", \"text-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(67, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(68, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Info Text\"])), (_l()(), i1.ɵeld(70, 0, null, null, 1, \"p\", [[\"class\", \"text-info\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(72, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(73, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Success Text\"])), (_l()(), i1.ɵeld(75, 0, null, null, 1, \"p\", [[\"class\", \"text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(77, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(78, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Warning Text\"])), (_l()(), i1.ɵeld(80, 0, null, null, 1, \"p\", [[\"class\", \"text-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(82, 0, null, null, 4, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(83, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Danger Text\"])), (_l()(), i1.ɵeld(85, 0, null, null, 1, \"p\", [[\"class\", \"text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... \"])), (_l()(), i1.ɵeld(87, 0, null, null, 7, \"div\", [[\"class\", \"tim-typo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(88, 0, null, null, 6, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(89, 0, null, null, 1, \"span\", [[\"class\", \"tim-note\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Small Tag\"])), (_l()(), i1.ɵted(-1, null, [\" Header with small subtitle \"])), (_l()(), i1.ɵeld(92, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(93, 0, null, null, 1, \"small\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Use \\\"small\\\" tag for the headers\"]))], null, null); }\nexport function View_TypographyComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-typography\", [], null, null, null, View_TypographyComponent_0, RenderType_TypographyComponent)), i1.ɵdid(1, 114688, null, 0, i2.TypographyComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TypographyComponentNgFactory = i1.ɵccf(\"app-typography\", i2.TypographyComponent, View_TypographyComponent_Host_0, {}, {}, []);\nexport { TypographyComponentNgFactory as TypographyComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-header card-header-danger\">\n            <h4 class=\"card-title\">Material Dashboard Heading</h4>\n            <p class=\"card-category\">Created using Roboto Font Family</p>\n        </div>\n        <div class=\"card-body\">\n            <div id=\"typography\">\n                <div class=\"card-title\">\n                    <h2>Typography</h2>\n                </div>\n                <div class=\"row\">\n                    <div class=\"tim-typo\">\n                        <h1>\n                            <span class=\"tim-note\">Header 1</span>The Life of Material Dashboard </h1>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h2>\n                            <span class=\"tim-note\">Header 2</span>The Life of Material Dashboard</h2>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h3>\n                            <span class=\"tim-note\">Header 3</span>The Life of Material Dashboard</h3>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h4>\n                            <span class=\"tim-note\">Header 4</span>The Life of Material Dashboard</h4>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h5>\n                            <span class=\"tim-note\">Header 5</span>The Life of Material Dashboard</h5>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h6>\n                            <span class=\"tim-note\">Header 6</span>The Life of Material Dashboard</h6>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <p>\n                            <span class=\"tim-note\">Paragraph</span>\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.</p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Quote</span>\n                        <blockquote class=\"blockquote\">\n                            <p>\n                                I will be the leader of a company that ends up being worth billions of dollars, because I got the answers. I understand culture. I am the nucleus. I think that’s a responsibility that I have, to push possibilities, to show people, this is the level that things could be at.\n                            </p>\n                            <small>\n                                Kanye West, Musician\n                            </small>\n                        </blockquote>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Muted Text</span>\n                        <p class=\"text-muted\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\n                        </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Primary Text</span>\n                        <p class=\"text-primary\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Info Text</span>\n                        <p class=\"text-info\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Success Text</span>\n                        <p class=\"text-success\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Warning Text</span>\n                        <p class=\"text-warning\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers...\n                        </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <span class=\"tim-note\">Danger Text</span>\n                        <p class=\"text-danger\">\n                            I will be the leader of a company that ends up being worth billions of dollars, because I got the answers... </p>\n                    </div>\n                    <div class=\"tim-typo\">\n                        <h2>\n                            <span class=\"tim-note\">Small Tag</span>\n                            Header with small subtitle\n                            <br>\n                            <small>Use \"small\" tag for the headers</small>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icons',\n  templateUrl: './icons.component.html',\n  styleUrls: ['./icons.component.css']\n})\nexport class IconsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./icons.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./icons.component\";\nvar styles_IconsComponent = [i0.styles];\nvar RenderType_IconsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_IconsComponent, data: {} });\nexport { RenderType_IconsComponent as RenderType_IconsComponent };\nexport function View_IconsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 21, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 20, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 19, \"div\", [[\"class\", \"card card-plain\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 6, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Design Icons\"])), (_l()(), i1.ɵeld(6, 0, null, null, 3, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Handcrafted by our friends from \"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"a\", [[\"href\", \"https://design.google.com/icons/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Google\"])), (_l()(), i1.ɵeld(10, 0, null, null, 11, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 10, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 0, null, null, 9, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(13, 0, null, null, 3, \"div\", [[\"class\", \"iframe-container d-none d-lg-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 2, \"iframe\", [[\"src\", \"https://design.google.com/icons/\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Your browser does not support iframes.\"])), (_l()(), i1.ɵeld(17, 0, null, null, 4, \"div\", [[\"class\", \"col-md-12 d-none d-sm-block d-md-block d-lg-none d-block d-sm-none text-center ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(18, 0, null, null, 3, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"The icons are visible on Desktop mode inside an iframe. Since the iframe is not working on Mobile and Tablets please visit the icons on their original page on Google. Check the \"])), (_l()(), i1.ɵeld(20, 0, null, null, 1, \"a\", [[\"href\", \"https://design.google.com/icons/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Icons\"]))], null, null); }\nexport function View_IconsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-icons\", [], null, null, null, View_IconsComponent_0, RenderType_IconsComponent)), i1.ɵdid(1, 114688, null, 0, i2.IconsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar IconsComponentNgFactory = i1.ɵccf(\"app-icons\", i2.IconsComponent, View_IconsComponent_Host_0, {}, {}, []);\nexport { IconsComponentNgFactory as IconsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","\n<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"card card-plain\">\n          <div class=\"card-header card-header-danger\">\n              <h4 class=\"card-title\">Material Design Icons</h4>\n              <p class=\"card-category\">Handcrafted by our friends from\n                  <a target=\"_blank\" href=\"https://design.google.com/icons/\">Google</a>\n              </p>\n          </div>\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <div class=\"card-body\">\n                      <div class=\"iframe-container d-none d-lg-block\">\n                          <iframe src=\"https://design.google.com/icons/\">\n                              <p>Your browser does not support iframes.</p>\n                          </iframe>\n                      </div>\n                      <div class=\"col-md-12 d-none d-sm-block d-md-block d-lg-none d-block d-sm-none text-center ml-auto mr-auto\">\n                          <h5>The icons are visible on Desktop mode inside an iframe. Since the iframe is not working on Mobile and Tablets please visit the icons on their original page on Google. Check the\n                              <a href=\"https://design.google.com/icons/\" target=\"_blank\">Material Icons</a>\n                          </h5>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\ndeclare const google: any;\n\ninterface Marker {\nlat: number;\nlng: number;\nlabel?: string;\ndraggable?: boolean;\n}\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.component.html',\n  styleUrls: ['./maps.component.css']\n})\nexport class MapsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n    var myLatlng = new google.maps.LatLng(40.748817, -73.985428);\n    var mapOptions = {\n        zoom: 13,\n        center: myLatlng,\n        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [{\n            \"featureType\": \"water\",\n            \"stylers\": [{\n                \"saturation\": 43\n            }, {\n                \"lightness\": -11\n            }, {\n                \"hue\": \"#0088ff\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"hue\": \"#ff0000\"\n            }, {\n                \"saturation\": -100\n            }, {\n                \"lightness\": 99\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry.stroke\",\n            \"stylers\": [{\n                \"color\": \"#808080\"\n            }, {\n                \"lightness\": 54\n            }]\n        }, {\n            \"featureType\": \"landscape.man_made\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ece2d9\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"color\": \"#ccdca1\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.fill\",\n            \"stylers\": [{\n                \"color\": \"#767676\"\n            }]\n        }, {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels.text.stroke\",\n            \"stylers\": [{\n                \"color\": \"#ffffff\"\n            }]\n        }, {\n            \"featureType\": \"poi\",\n            \"stylers\": [{\n                \"visibility\": \"off\"\n            }]\n        }, {\n            \"featureType\": \"landscape.natural\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }, {\n                \"color\": \"#b8cb93\"\n            }]\n        }, {\n            \"featureType\": \"poi.park\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.sports_complex\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.medical\",\n            \"stylers\": [{\n                \"visibility\": \"on\"\n            }]\n        }, {\n            \"featureType\": \"poi.business\",\n            \"stylers\": [{\n                \"visibility\": \"simplified\"\n            }]\n        }]\n\n    };\n    var map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);\n\n    var marker = new google.maps.Marker({\n        position: myLatlng,\n        title: \"Hello World!\"\n    });\n\n    // To add the marker to the map, call setMap();\n    marker.setMap(map);\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./maps.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./maps.component\";\nvar styles_MapsComponent = [i0.styles];\nvar RenderType_MapsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MapsComponent, data: {} });\nexport { RenderType_MapsComponent as RenderType_MapsComponent };\nexport function View_MapsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"div\", [[\"id\", \"map\"]], null, null, null, null, null))], null, null); }\nexport function View_MapsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-maps\", [], null, null, null, View_MapsComponent_0, RenderType_MapsComponent)), i1.ɵdid(1, 114688, null, 0, i2.MapsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MapsComponentNgFactory = i1.ɵccf(\"app-maps\", i2.MapsComponent, View_MapsComponent_Host_0, {}, {}, []);\nexport { MapsComponentNgFactory as MapsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div id=\"map\"></div>\n","import { Component, OnInit } from '@angular/core';\ndeclare var $: any;\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n  showNotification(from, align){\n      const type = ['','info','success','warning','danger'];\n\n      const color = Math.floor((Math.random() * 4) + 1);\n\n      $.notify({\n          icon: \"notifications\",\n          message: \"Welcome to <b>Material Dashboard</b> - a beautiful freebie for every web developer.\"\n\n      },{\n          type: type[color],\n          timer: 4000,\n          placement: {\n              from: from,\n              align: align\n          },\n          template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n            '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n            '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n            '<span data-notify=\"title\">{1}</span> ' +\n            '<span data-notify=\"message\">{2}</span>' +\n            '<div class=\"progress\" data-notify=\"progressbar\">' +\n              '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n            '</div>' +\n            '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n          '</div>'\n      });\n  }\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./notifications.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/platform\";\nimport * as i5 from \"@angular/cdk/a11y\";\nimport * as i6 from \"@angular/platform-browser/animations\";\nimport * as i7 from \"./notifications.component\";\nvar styles_NotificationsComponent = [i0.styles];\nvar RenderType_NotificationsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_NotificationsComponent, data: {} });\nexport { RenderType_NotificationsComponent as RenderType_NotificationsComponent };\nexport function View_NotificationsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 131, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 130, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 129, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 9, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"h3\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notifications\"])), (_l()(), i1.ɵeld(6, 0, null, null, 6, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Handcrafted by our friend \"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"a\", [[\"href\", \"https://github.com/mouse0270\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Robert McIntosh\"])), (_l()(), i1.ɵted(-1, null, [\". Please checkout the \"])), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"a\", [[\"href\", \"http://bootstrap-notify.remabledesigns.com/\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"full documentation.\"])), (_l()(), i1.ɵeld(13, 0, null, null, 80, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 79, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 30, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notifications Style\"])), (_l()(), i1.ɵeld(18, 0, null, null, 2, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(19, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a plain notification\"])), (_l()(), i1.ɵeld(21, 0, null, null, 6, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(22, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(23, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(24, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(26, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button.\"])), (_l()(), i1.ɵeld(28, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-info alert-with-icon\"], [\"data-notify\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(29, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"], [\"data-notify\", \"icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"add_alert\"])), (_l()(), i1.ɵeld(31, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(32, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(33, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(35, 0, null, null, 1, \"span\", [[\"data-notify\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button and icon.\"])), (_l()(), i1.ɵeld(37, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-info alert-with-icon\"], [\"data-notify\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(38, 0, null, null, 1, \"i\", [[\"class\", \"material-icons\"], [\"data-notify\", \"icon\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"add_alert\"])), (_l()(), i1.ɵeld(40, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(41, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(42, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(44, 0, null, null, 1, \"span\", [[\"data-notify\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"])), (_l()(), i1.ɵeld(46, 0, null, null, 47, \"div\", [[\"class\", \"col-md-6\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(47, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Notification states\"])), (_l()(), i1.ɵeld(49, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-info\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(50, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(51, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(52, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(54, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(55, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Info - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-info\\\"\"])), (_l()(), i1.ɵeld(58, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(59, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(60, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(61, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(63, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(64, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Success - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-success\\\"\"])), (_l()(), i1.ɵeld(67, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-warning\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(68, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(69, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(70, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(72, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(73, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Warning - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-warning\\\"\"])), (_l()(), i1.ɵeld(76, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(77, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(78, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(79, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(81, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(82, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Danger - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-danger\\\"\"])), (_l()(), i1.ɵeld(85, 0, null, null, 8, \"div\", [[\"class\", \"alert alert-primary\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(86, 0, null, null, 3, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"alert\"], [\"mat-button\", \"\"], [\"type\", \"button\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], null, null, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(87, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(88, 0, null, 0, 1, \"i\", [[\"class\", \"material-icons\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"close\"])), (_l()(), i1.ɵeld(90, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(91, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Primary - \"])), (_l()(), i1.ɵted(-1, null, [\" This is a regular notification made with \\\".alert-primary\\\"\"])), (_l()(), i1.ɵeld(94, 0, null, null, 37, \"div\", [[\"class\", \"col-md-12\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(95, 0, null, null, 36, \"div\", [[\"class\", \"places-buttons\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(96, 0, null, null, 5, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(97, 0, null, null, 4, \"div\", [[\"class\", \"col-md-6 ml-auto mr-auto text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(98, 0, null, null, 3, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Notifications Places \"])), (_l()(), i1.ɵeld(100, 0, null, null, 1, \"p\", [[\"class\", \"category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Click to view notifications\"])), (_l()(), i1.ɵeld(102, 0, null, null, 14, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(103, 0, null, null, 13, \"div\", [[\"class\", \"col-lg-8 col-md-10 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(104, 0, null, null, 12, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(105, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(106, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"left\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(107, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Left\"])), (_l()(), i1.ɵeld(109, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(110, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"center\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(111, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Center\"])), (_l()(), i1.ɵeld(113, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(114, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"top\", \"right\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(115, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Top Right\"])), (_l()(), i1.ɵeld(117, 0, null, null, 14, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(118, 0, null, null, 13, \"div\", [[\"class\", \"col-lg-8 col-md-10 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(119, 0, null, null, 12, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(120, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(121, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"left\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(122, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Left\"])), (_l()(), i1.ɵeld(124, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(125, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"center\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(126, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Center\"])), (_l()(), i1.ɵeld(128, 0, null, null, 3, \"div\", [[\"class\", \"col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(129, 0, null, null, 2, \"button\", [[\"class\", \"btn btn-danger btn-block\"], [\"mat-raised-button\", \"\"]], [[8, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.showNotification(\"bottom\", \"right\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(130, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.Platform, i5.FocusMonitor, [2, i6.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵted(-1, 0, [\"Bottom Right\"]))], null, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 23).disabled || null); var currVal_1 = (i1.ɵnov(_v, 23)._animationMode === \"NoopAnimations\"); _ck(_v, 22, 0, currVal_0, currVal_1); var currVal_2 = (i1.ɵnov(_v, 32).disabled || null); var currVal_3 = (i1.ɵnov(_v, 32)._animationMode === \"NoopAnimations\"); _ck(_v, 31, 0, currVal_2, currVal_3); var currVal_4 = (i1.ɵnov(_v, 41).disabled || null); var currVal_5 = (i1.ɵnov(_v, 41)._animationMode === \"NoopAnimations\"); _ck(_v, 40, 0, currVal_4, currVal_5); var currVal_6 = (i1.ɵnov(_v, 51).disabled || null); var currVal_7 = (i1.ɵnov(_v, 51)._animationMode === \"NoopAnimations\"); _ck(_v, 50, 0, currVal_6, currVal_7); var currVal_8 = (i1.ɵnov(_v, 60).disabled || null); var currVal_9 = (i1.ɵnov(_v, 60)._animationMode === \"NoopAnimations\"); _ck(_v, 59, 0, currVal_8, currVal_9); var currVal_10 = (i1.ɵnov(_v, 69).disabled || null); var currVal_11 = (i1.ɵnov(_v, 69)._animationMode === \"NoopAnimations\"); _ck(_v, 68, 0, currVal_10, currVal_11); var currVal_12 = (i1.ɵnov(_v, 78).disabled || null); var currVal_13 = (i1.ɵnov(_v, 78)._animationMode === \"NoopAnimations\"); _ck(_v, 77, 0, currVal_12, currVal_13); var currVal_14 = (i1.ɵnov(_v, 87).disabled || null); var currVal_15 = (i1.ɵnov(_v, 87)._animationMode === \"NoopAnimations\"); _ck(_v, 86, 0, currVal_14, currVal_15); var currVal_16 = (i1.ɵnov(_v, 107).disabled || null); var currVal_17 = (i1.ɵnov(_v, 107)._animationMode === \"NoopAnimations\"); _ck(_v, 106, 0, currVal_16, currVal_17); var currVal_18 = (i1.ɵnov(_v, 111).disabled || null); var currVal_19 = (i1.ɵnov(_v, 111)._animationMode === \"NoopAnimations\"); _ck(_v, 110, 0, currVal_18, currVal_19); var currVal_20 = (i1.ɵnov(_v, 115).disabled || null); var currVal_21 = (i1.ɵnov(_v, 115)._animationMode === \"NoopAnimations\"); _ck(_v, 114, 0, currVal_20, currVal_21); var currVal_22 = (i1.ɵnov(_v, 122).disabled || null); var currVal_23 = (i1.ɵnov(_v, 122)._animationMode === \"NoopAnimations\"); _ck(_v, 121, 0, currVal_22, currVal_23); var currVal_24 = (i1.ɵnov(_v, 126).disabled || null); var currVal_25 = (i1.ɵnov(_v, 126)._animationMode === \"NoopAnimations\"); _ck(_v, 125, 0, currVal_24, currVal_25); var currVal_26 = (i1.ɵnov(_v, 130).disabled || null); var currVal_27 = (i1.ɵnov(_v, 130)._animationMode === \"NoopAnimations\"); _ck(_v, 129, 0, currVal_26, currVal_27); }); }\nexport function View_NotificationsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-notifications\", [], null, null, null, View_NotificationsComponent_0, RenderType_NotificationsComponent)), i1.ɵdid(1, 114688, null, 0, i7.NotificationsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar NotificationsComponentNgFactory = i1.ɵccf(\"app-notifications\", i7.NotificationsComponent, View_NotificationsComponent_Host_0, {}, {}, []);\nexport { NotificationsComponentNgFactory as NotificationsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n  <div class=\"container-fluid\">\n      <div class=\"card\">\n          <div class=\"card-header card-header-danger\">\n              <h3 class=\"card-title\">Notifications</h3>\n              <p class=\"card-category\">Handcrafted by our friend\n                  <a target=\"_blank\" href=\"https://github.com/mouse0270\">Robert McIntosh</a>. Please checkout the\n                  <a href=\"http://bootstrap-notify.remabledesigns.com/\" target=\"_blank\">full documentation.</a>\n              </p>\n          </div>\n          <div class=\"card-body\">\n              <div class=\"row\">\n                  <div class=\"col-md-6\">\n                      <h4 class=\"card-title\">Notifications Style</h4>\n                      <div class=\"alert alert-info\">\n                          <span>This is a plain notification</span>\n                      </div>\n                      <div class=\"alert alert-info\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>This is a notification with close button.</span>\n                      </div>\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span data-notify=\"message\">This is a notification with close button and icon.</span>\n                      </div>\n                      <div class=\"alert alert-info alert-with-icon\" data-notify=\"container\">\n                          <i class=\"material-icons\" data-notify=\"icon\">add_alert</i>\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span data-notify=\"message\">This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.</span>\n                      </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                      <h4 class=\"card-title\">Notification states</h4>\n                      <div class=\"alert alert-info\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Info - </b> This is a regular notification made with \".alert-info\"</span>\n                      </div>\n                      <div class=\"alert alert-success\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Success - </b> This is a regular notification made with \".alert-success\"</span>\n                      </div>\n                      <div class=\"alert alert-warning\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Warning - </b> This is a regular notification made with \".alert-warning\"</span>\n                      </div>\n                      <div class=\"alert alert-danger\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Danger - </b> This is a regular notification made with \".alert-danger\"</span>\n                      </div>\n                      <div class=\"alert alert-primary\">\n                          <button mat-button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                              <i class=\"material-icons\">close</i>\n                          </button>\n                          <span>\n                              <b> Primary - </b> This is a regular notification made with \".alert-primary\"</span>\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div class=\"col-md-12\">\n              <div class=\"places-buttons\">\n                  <div class=\"row\">\n                      <div class=\"col-md-6 ml-auto mr-auto text-center\">\n                          <h4 class=\"card-title\">\n                              Notifications Places\n                              <p class=\"category\">Click to view notifications</p>\n                          </h4>\n                      </div>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','left')\">Top Left</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','center')\">Top Center</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('top','right')\">Top Right</button>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"row\">\n                      <div class=\"col-lg-8 col-md-10 ml-auto mr-auto\">\n                          <div class=\"row\">\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','left')\">Bottom Left</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','center')\">Bottom Center</button>\n                              </div>\n                              <div class=\"col-md-4\">\n                                  <button mat-raised-button class=\"btn btn-danger btn-block\" (click)=\"showNotification('bottom','right')\">Bottom Right</button>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upgrade',\n  templateUrl: './upgrade.component.html',\n  styleUrls: ['./upgrade.component.css']\n})\nexport class UpgradeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./upgrade.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./upgrade.component\";\nvar styles_UpgradeComponent = [i0.styles];\nvar RenderType_UpgradeComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UpgradeComponent, data: {} });\nexport { RenderType_UpgradeComponent as RenderType_UpgradeComponent };\nexport function View_UpgradeComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 83, \"div\", [[\"class\", \"main-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 82, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 81, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 80, \"div\", [[\"class\", \"col-md-8 ml-auto mr-auto\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 79, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"card-header card-header-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h4\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Material Dashboard PRO Angular\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"p\", [[\"class\", \"card-category\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Are you looking for more components? Please check our Premium Version of Material Dashboard Angular.\"])), (_l()(), i1.ɵeld(10, 0, null, null, 73, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 72, \"div\", [[\"class\", \"table-responsive table-upgrade\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 0, null, null, 71, \"table\", [[\"class\", \"table\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(13, 0, null, null, 6, \"thead\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 0, \"th\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"th\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Free\"])), (_l()(), i1.ɵeld(18, 0, null, null, 1, \"th\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"PRO\"])), (_l()(), i1.ɵeld(20, 0, null, null, 63, \"tbody\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(21, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(22, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Components\"])), (_l()(), i1.ɵeld(24, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"60\"])), (_l()(), i1.ɵeld(26, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"200\"])), (_l()(), i1.ɵeld(28, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(29, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Plugins\"])), (_l()(), i1.ɵeld(31, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"2\"])), (_l()(), i1.ɵeld(33, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"15\"])), (_l()(), i1.ɵeld(35, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(36, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Example Pages\"])), (_l()(), i1.ɵeld(38, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"3\"])), (_l()(), i1.ɵeld(40, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"27\"])), (_l()(), i1.ɵeld(42, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(43, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Login, Register, Pricing, Lock Pages\"])), (_l()(), i1.ɵeld(45, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(46, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(47, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(48, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(49, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"DataTables, VectorMap, SweetAlert, Wizard, jQueryValidation, FullCalendar etc...\"])), (_l()(), i1.ɵeld(52, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(53, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(54, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(55, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(56, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(57, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Mini Sidebar\"])), (_l()(), i1.ɵeld(59, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(60, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(61, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(62, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(63, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(64, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Premium Support\"])), (_l()(), i1.ɵeld(66, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(67, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-times text-danger\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(68, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(69, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-check text-success\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(70, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(71, 0, null, null, 0, \"td\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(72, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Free\"])), (_l()(), i1.ɵeld(74, 0, null, null, 1, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Just $59\"])), (_l()(), i1.ɵeld(76, 0, null, null, 7, \"tr\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(77, 0, null, null, 0, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(78, 0, null, null, 2, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(79, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-round btn-fill btn-default disabled\"], [\"href\", \"#\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Current Version\"])), (_l()(), i1.ɵeld(81, 0, null, null, 2, \"td\", [[\"class\", \"text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(82, 0, null, null, 1, \"a\", [[\"class\", \"btn btn-round btn-fill btn-info\"], [\"href\", \"https://www.creative-tim.com/product/material-dashboard-pro-angular2?ref=md-free-angular-upgrade-live\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Upgrade to PRO\"]))], null, null); }\nexport function View_UpgradeComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-upgrade\", [], null, null, null, View_UpgradeComponent_0, RenderType_UpgradeComponent)), i1.ɵdid(1, 114688, null, 0, i2.UpgradeComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UpgradeComponentNgFactory = i1.ɵccf(\"app-upgrade\", i2.UpgradeComponent, View_UpgradeComponent_Host_0, {}, {}, []);\nexport { UpgradeComponentNgFactory as UpgradeComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-8 ml-auto mr-auto\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Material Dashboard PRO Angular</h4>\n                        <p class=\"card-category\">Are you looking for more components? Please check our Premium Version of Material Dashboard Angular.</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive table-upgrade\">\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th class=\"text-center\">Free</th>\n                                        <th class=\"text-center\">PRO</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>Components</td>\n                                        <td class=\"text-center\">60</td>\n                                        <td class=\"text-center\">200</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Plugins</td>\n                                        <td class=\"text-center\">2</td>\n                                        <td class=\"text-center\">15</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Example Pages</td>\n                                        <td class=\"text-center\">3</td>\n                                        <td class=\"text-center\">27</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Login, Register, Pricing, Lock Pages</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>DataTables, VectorMap, SweetAlert, Wizard, jQueryValidation, FullCalendar etc...</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Mini Sidebar</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td>Premium Support</td>\n                                        <td class=\"text-center\"><i class=\"fa fa-times text-danger\"></i></td>\n                                        <td class=\"text-center\"><i class=\"fa fa-check text-success\"></i></td>\n                                    </tr>\n                                    <tr>\n                                        <td></td>\n                                        <td class=\"text-center\">Free</td>\n                                        <td class=\"text-center\">Just $59</td>\n                                    </tr>\n                                    <tr>\n                                        <td class=\"text-center\"></td>\n                                        <td class=\"text-center\">\n                                            <a href=\"#\" class=\"btn btn-round btn-fill btn-default disabled\">Current Version</a>\n                                        </td>\n                                        <td class=\"text-center\">\n                                            <a target=\"_blank\" href=\"https://www.creative-tim.com/product/material-dashboard-pro-angular2?ref=md-free-angular-upgrade-live\" class=\"btn btn-round btn-fill btn-info\">Upgrade to PRO</a>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./admin-layout.module\";\nimport * as i2 from \"../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i4 from \"../../dashboard/dashboard.component.ngfactory\";\nimport * as i5 from \"../../user-profile/user-profile.component.ngfactory\";\nimport * as i6 from \"../../table-list/table-list.component.ngfactory\";\nimport * as i7 from \"../../typography/typography.component.ngfactory\";\nimport * as i8 from \"../../icons/icons.component.ngfactory\";\nimport * as i9 from \"../../maps/maps.component.ngfactory\";\nimport * as i10 from \"../../notifications/notifications.component.ngfactory\";\nimport * as i11 from \"../../upgrade/upgrade.component.ngfactory\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/forms\";\nimport * as i14 from \"@angular/cdk/observers\";\nimport * as i15 from \"@angular/material/core\";\nimport * as i16 from \"@angular/cdk/overlay\";\nimport * as i17 from \"@angular/cdk/bidi\";\nimport * as i18 from \"@angular/material/tooltip\";\nimport * as i19 from \"@angular/router\";\nimport * as i20 from \"@angular/cdk/platform\";\nimport * as i21 from \"@angular/material/button\";\nimport * as i22 from \"@angular/cdk/text-field\";\nimport * as i23 from \"@angular/material/form-field\";\nimport * as i24 from \"@angular/material/input\";\nimport * as i25 from \"@angular/cdk/a11y\";\nimport * as i26 from \"@angular/cdk/portal\";\nimport * as i27 from \"@angular/cdk/scrolling\";\nimport * as i28 from \"../../dashboard/dashboard.component\";\nimport * as i29 from \"../../user-profile/user-profile.component\";\nimport * as i30 from \"../../table-list/table-list.component\";\nimport * as i31 from \"../../typography/typography.component\";\nimport * as i32 from \"../../icons/icons.component\";\nimport * as i33 from \"../../maps/maps.component\";\nimport * as i34 from \"../../notifications/notifications.component\";\nimport * as i35 from \"../../upgrade/upgrade.component\";\nvar AdminLayoutModuleNgFactory = i0.ɵcmf(i1.AdminLayoutModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵEmptyOutletComponentNgFactory, i3.TooltipComponentNgFactory, i4.DashboardComponentNgFactory, i5.UserProfileComponentNgFactory, i6.TableListComponentNgFactory, i7.TypographyComponentNgFactory, i8.IconsComponentNgFactory, i9.MapsComponentNgFactory, i10.NotificationsComponentNgFactory, i11.UpgradeComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i12.NgLocalization, i12.NgLocaleLocalization, [i0.LOCALE_ID, [2, i12.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i13.ɵangular_packages_forms_forms_i, i13.ɵangular_packages_forms_forms_i, []), i0.ɵmpd(4608, i14.MutationObserverFactory, i14.MutationObserverFactory, []), i0.ɵmpd(4608, i15.ErrorStateMatcher, i15.ErrorStateMatcher, []), i0.ɵmpd(4608, i16.Overlay, i16.Overlay, [i16.ScrollStrategyOptions, i16.OverlayContainer, i0.ComponentFactoryResolver, i16.OverlayPositionBuilder, i16.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i12.DOCUMENT, i17.Directionality]), i0.ɵmpd(5120, i16.ɵc, i16.ɵd, [i16.Overlay]), i0.ɵmpd(5120, i18.MAT_TOOLTIP_SCROLL_STRATEGY, i18.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i16.Overlay]), i0.ɵmpd(1073742336, i12.CommonModule, i12.CommonModule, []), i0.ɵmpd(1073742336, i19.RouterModule, i19.RouterModule, [[2, i19.ɵangular_packages_router_router_a], [2, i19.Router]]), i0.ɵmpd(1073742336, i13.ɵangular_packages_forms_forms_bb, i13.ɵangular_packages_forms_forms_bb, []), i0.ɵmpd(1073742336, i13.FormsModule, i13.FormsModule, []), i0.ɵmpd(1073742336, i17.BidiModule, i17.BidiModule, []), i0.ɵmpd(1073742336, i15.MatCommonModule, i15.MatCommonModule, [[2, i15.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i20.PlatformModule, i20.PlatformModule, []), i0.ɵmpd(1073742336, i15.MatRippleModule, i15.MatRippleModule, []), i0.ɵmpd(1073742336, i21.MatButtonModule, i21.MatButtonModule, []), i0.ɵmpd(1073742336, i22.TextFieldModule, i22.TextFieldModule, []), i0.ɵmpd(1073742336, i14.ObserversModule, i14.ObserversModule, []), i0.ɵmpd(1073742336, i23.MatFormFieldModule, i23.MatFormFieldModule, []), i0.ɵmpd(1073742336, i24.MatInputModule, i24.MatInputModule, []), i0.ɵmpd(1073742336, i25.A11yModule, i25.A11yModule, []), i0.ɵmpd(1073742336, i26.PortalModule, i26.PortalModule, []), i0.ɵmpd(1073742336, i27.ScrollingModule, i27.ScrollingModule, []), i0.ɵmpd(1073742336, i16.OverlayModule, i16.OverlayModule, []), i0.ɵmpd(1073742336, i18.MatTooltipModule, i18.MatTooltipModule, []), i0.ɵmpd(1073742336, i1.AdminLayoutModule, i1.AdminLayoutModule, []), i0.ɵmpd(1024, i19.ROUTES, function () { return [[{ path: \"dashboard\", component: i28.DashboardComponent }, { path: \"user-profile\", component: i29.UserProfileComponent }, { path: \"table-list\", component: i30.TableListComponent }, { path: \"typography\", component: i31.TypographyComponent }, { path: \"icons\", component: i32.IconsComponent }, { path: \"maps\", component: i33.MapsComponent }, { path: \"notifications\", component: i34.NotificationsComponent }, { path: \"upgrade\", component: i35.UpgradeComponent }]]; }, [])]); });\nexport { AdminLayoutModuleNgFactory as AdminLayoutModuleNgFactory };\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.0\n * Copyright © 2017 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.0'\n};\n\n(function (window, document, Chartist) {\n  'use strict';\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(window, document, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(window, document, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(window, document, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(window, document, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(window, document, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(window, document, Chartist));\n;/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(window, document, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(window, document, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(window, document, Chartist){\n  'use strict';\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(window, document, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(window, document, Chartist) {\n  'use strict';\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(window, document, Chartist));\n\nreturn Chartist;\n\n}));\n"],"sourceRoot":""}